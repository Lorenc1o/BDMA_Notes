#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{footmisc}
\usepackage{listings}

\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{1,0.99,0.94}

\lstdefinestyle{mystyle}{
    backgroundcolor=\color{backcolour},   
    commentstyle=\color{codegreen},
    keywordstyle=\color{magenta},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\ttfamily\footnotesize,
    breakatwhitespace=false,         
    breaklines=true,                 
    captionpos=b,                    
    keepspaces=true,                 
    numbers=left,                    
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    showtabs=false,  
    frame=single,
    tabsize=2
}

\lstset{style=mystyle}
\end_preamble
\use_default_options true
\begin_modules
tcolorbox
customHeadersFooters
theorems-ams-bytype
theorems-sec-bytype
algorithm2e
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, urlcolor=blue, citecolor=blue, pdfstartview={FitH}, unicode=true"
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\boxbgcolor #62a0ea
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 3cm
\headheight 2cm
\headsep 1cm
\footskip 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
BDM-MIRI - Semantic Data Management
\end_layout

\begin_layout Date
Spring 2023
\end_layout

\begin_layout Author
Jose Antonio Lorencio Abril
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename upc-logo.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
\align right
Professors: Anna Queralt, Óscar Romero 
\end_layout

\begin_layout Standard
\align right
Student e-mail: jose.antonio.lorencio@estudiantat..upc.edu
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Address
This is a summary of the course 
\emph on
Semantic Data Management
\emph default
 taught at the Universitat Politècnica de Catalunya by Professors Anna Queralt
 and Óscar Romero in the academic year 22/23.
 Most of the content of this document is adapted from the course notes by
 Abelló and Nadal, 
\begin_inset CommandInset citation
LatexCommand cite
key "Romero2023"
literal "false"

\end_inset

, so I won't be citing it all the time.
 Other references will be provided when used.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList algorithm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Property Graphs
\end_layout

\begin_layout Section
Property Graphs
\end_layout

\begin_layout Subsection
Definitions
\end_layout

\begin_layout Standard
Property graphs were born in the database community, with the idea of enabling
 the possibility to query and process data in graph form.
 Up to date, there is not any official standard.
\end_layout

\begin_layout Standard
Property graphs are 
\series bold
ocurrence-based
\series default
, which means that they are defined by the particular instances inserted,
 without a pre-existent enforceable schema.
 The instances are represented by two main constructs:
\end_layout

\begin_layout Itemize

\series bold
Nodes
\series default
: represent entities.
\end_layout

\begin_layout Itemize

\series bold
Edges
\series default
: relate pairs of nodes, and may represent different types of relationships.
\end_layout

\begin_layout Standard
Both nodes and edges might be 
\series bold
labeled
\series default
 and can have a ser of properties, represented as 
\series bold
attributes
\series default

\begin_inset Foot
status open

\begin_layout Plain Layout
In some definitions, edges are not allowed to have attributes.
\end_layout

\end_inset

.
 In addition, edges can be defined to be directed or undirected.
 Moreover, multi-graphs are allowed, meaning that two nodes can be related
 by multiple edges.
\end_layout

\begin_layout Standard
More formally:
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
A 
\series bold
property graph
\series default
, 
\begin_inset Formula $G$
\end_inset

, is a tuple 
\begin_inset Formula $\left(V,E,\rho,\lambda,\sigma,Lab,Prop,Val\right)$
\end_inset

, where:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $V$
\end_inset

 is a finite set of vertices.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $E$
\end_inset

 is a finite set of edges, such that 
\begin_inset Formula $V$
\end_inset

 and 
\begin_inset Formula $E$
\end_inset

 have no elements in common
\begin_inset Foot
status open

\begin_layout Plain Layout
Usually, we will identify vertices and edges by their key identifier.
 Thus, this condition means that a key represents either a node or an edge,
 but not both at the same time.
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $Lab$
\end_inset

 is a set of labels.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $Prop$
\end_inset

 is a set of properties and 
\begin_inset Formula $Val$
\end_inset

 is the set of possible values that the properties can take.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\rho:E\rightarrow V\times V$
\end_inset

 is a total function
\begin_inset Foot
status open

\begin_layout Plain Layout
A total function is a function 
\begin_inset Formula $f:Dom\rightarrow Im$
\end_inset

 such that 
\begin_inset Formula $\forall x\in Dom,\exists y\in Im|f\left(x\right)=y$
\end_inset

.
\end_layout

\end_inset

.
 Basically, 
\begin_inset Formula $\rho$
\end_inset

 assigns each edge 
\begin_inset Formula $e\in E$
\end_inset

 to the pair of nodes that it relates, 
\begin_inset Formula $\left(u,v\right)\in V\times V$
\end_inset

.
 Usually, 
\begin_inset Formula $\rho\left(e\right)=\left(u,v\right)$
\end_inset

 means that edge 
\begin_inset Formula $e$
\end_inset

 starts in 
\begin_inset Formula $u$
\end_inset

 and ends in 
\begin_inset Formula $v$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\lambda:\left(V\cup E\right)\rightarrow Lab$
\end_inset

 is a total function.
 Now, for each vertex and each edge, we assign a label to it
\begin_inset Foot
status open

\begin_layout Plain Layout
In some definitions, it is possible to assign a set of labels, so that 
\begin_inset Formula $\lambda:\left(V\cup E\right)\rightarrow2^{Lab}$
\end_inset

.
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\sigma:\left(V\cup E\right)\times Prop\rightarrow Val$
\end_inset

 is a partial function
\begin_inset Foot
status open

\begin_layout Plain Layout
A partial function is a function that is not necessarily total.
\end_layout

\end_inset

.
 Here, we are assigning the values of each property of each node/edge.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Example
A simple graph.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename simplegraph.png
	scale 50

\end_inset


\end_layout

\end_deeper
\begin_layout Example
In this example, we have the visual representation of a simple graph.
 Let's create each of the components of the formal definition:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $V=\left\{ n_{1},n_{2},n_{3}\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $E=\left\{ e_{1},e_{2},e_{3}\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $Lab=\left\{ Person,Movie,acts\_in,directs\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $Prop=\left\{ name,gender,title,role,ref\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $Val=\left\{ Clint\ Eastwood,Anna\ Levine,male,female,Unforgiven,Bill,Delilah,IMDb\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda\left(n_{1}\right)=Person,\lambda\left(n_{2}\right)=Movie,\lambda\left(n_{3}\right)=Person,\lambda\left(e_{1}\right)=acts\_in,\lambda\left(e_{2}\right)=directs,\lambda\left(e_{3}\right)=acts\_in$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\sigma\left(n_{1},name\right)=Clint\ Eastwood,\sigma\left(n_{1},gender\right)=male,\sigma\left(n_{2},title\right)=Unforgiven,\sigma\left(n_{3},name\right)=Anna\ Levine,$
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $\sigma\left(n_{3},gender\right)=female,\sigma\left(e_{1},role\right)=Bill,\sigma\left(e_{1},ref\right)=IMDb,\sigma\left(e_{3},role\right)=Delilah,\sigma\left(e_{3},ref\right)=IMDb$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Traversal Navigation
\end_layout

\begin_layout Standard
The 
\series bold
graph traversal pattern
\series default
 is defined as the ability to rapidly traverse structures to an arbitrary
 depth and with an arbitrary path description.
\end_layout

\begin_layout Standard
This framework is totally opposite to set theory, on which relational databases
 are based on.
 In the relational theory, this is equivalent to joining data and selecting
 data, while in a graph database, the relationships are explicit (there
 no foreign keys), there is no need to add nodes for artificial concepts
 and we can consider the joins as being hard-wired in the data.
 This makes traversing from one node to another a constant time operation.
\end_layout

\begin_layout Standard
Traversing graph data depends on three main variables:
\end_layout

\begin_layout Itemize
The 
\series bold
query topology
\series default
, which refers to the complexity of what are we looking for, and the 
\series bold
traversal seeds
\series default
, which are the way in which the search is started.
\end_layout

\begin_layout Itemize
The 
\series bold
size of the graph
\series default
, typically measured as the number of edges.
\end_layout

\begin_layout Itemize
The 
\series bold
topology of the graph
\series default
.
\end_layout

\begin_layout Subsection
Graph operations
\end_layout

\begin_layout Standard
There are basically two types of operations:
\end_layout

\begin_layout Itemize

\series bold
Content-based queries
\series default
: in these queries, the value is relevant.
 We want to get a specific node, or the value of some attributes of a node/edge,
 etc.
 For example, aggregations.
\end_layout

\begin_layout Itemize

\series bold
Topological queries
\series default
: in this case, only the topology of the graph is considered.
 Several business problems are solved using graph algorithms exploring the
 graph topology.
 For example, computing the betweenness centrality of a node.
\end_layout

\begin_layout Itemize

\series bold
Hybrid approaches
\series default
: leverage both types of queries.
\end_layout

\begin_layout Standard
Of these types, we are going to focus on topological queries.
\end_layout

\begin_layout Subsubsection
Topological queries
\end_layout

\begin_layout Subsubsection*
Adjacency queries
\end_layout

\begin_layout Standard
Two nodes are adjacent if there is an edge between them (usually disregarding
 direction).
 Therefore, the adjacency of a node is defined as all nodes adjacent to
 it:
\begin_inset Formula 
\[
Adjacency\left({\color{blue}n}\right)=N|{\color{red}n_{i}}\in N\iff\exists{\color{green}{\color{teal}e}}:\rho\left({\color{green}{\color{teal}e}}\right)=\left({\color{red}n_{i}},{\color{blue}n}\right)\lor\rho\left({\color{teal}e}\right)=\left({\color{blue}n},{\color{red}n_{i}}\right).
\]

\end_inset


\end_layout

\begin_layout Standard
The computational cost of this operation is linear on the number of edges
 to visit.
\end_layout

\begin_layout Standard
Examples of use cases are finding all friends of a person, airports with
 direct connection,...
\end_layout

\begin_layout Subsubsection*
Reachability queries
\end_layout

\begin_layout Standard
A node is reachable from another node if there is a set of edges, called
 a 
\series bold
walk
\series default
, that can be traversed to get from one to the other (in this case, direction
 is usually taken into account, but it could be disregarded if needed).
 Now, the definition is as follows:
\begin_inset Formula 
\[
Reachability\left(n_{or},n_{dest}\right)=True\iff
\]

\end_inset


\begin_inset Formula 
\[
\exists Walk\left({\color{blue}n_{or}},{\color{red}n_{dest}}\right)=\left(e_{1},...,e_{m}\right)|\exists{\color{teal}n_{1},...,n_{m-1}}:\rho\left(e_{1}\right)=\left({\color{blue}n_{or}},{\color{teal}n_{1}}\right),\rho\left(e_{2}\right)=\left({\color{teal}n_{1},n_{2}}\right),...,\rho\left(e_{m}\right)=\left({\color{teal}n_{m-1}},{\color{red}n_{dest}}\right).
\]

\end_inset


\end_layout

\begin_layout Standard
Additional constraints can be defined:
\end_layout

\begin_layout Itemize
Fixed-length paths: we can fix the number of edges and nodes of the walk.
\end_layout

\begin_layout Itemize
Shortest path: find the walk that minimizes some metric, such as the number
 of hops or the sum of weights of the edges,...
\end_layout

\begin_layout Itemize
Non-repeated nodes: in this case the walk is called a 
\series bold
path
\series default
.
\end_layout

\begin_layout Itemize
Non-repeated edges: in this case the walk is called a 
\series bold
trail
\series default
.
 Note that a path is more restrictive than a trail.
\end_layout

\begin_layout Itemize
Regular simple paths: we can restrict the path to respect some regular expressio
n.
\end_layout

\begin_layout Standard
The computational cost is high for large graphs, and it also depends on
 what constraints are we imposing.
 For instance, if we want to compute the shortest path, we can use 
\series bold
Dijkstra's algorithm
\series default
, which is 
\begin_inset Formula $O\left(\left|V\right|^{2}\right)$
\end_inset

, or 
\begin_inset Formula $O\left(\left|E\right|\cdot\left|V\right|\log\left|V\right|\right)$
\end_inset

 using priority queues.
\end_layout

\begin_layout Standard
Examples of use cases are finding all friends of a friend, all flight connection
s,...
\end_layout

\begin_layout Subsubsection*
Label-constrained reachability
\end_layout

\begin_layout Standard
We compute reachability, imposing that all edges in the walk have a label
 in a defined set of labels:
\begin_inset Formula 
\[
G_{L}^{*}=\left\{ \left(s,t\right)|\exists p\in paths\left(s,t\right)\ such\ that\ \lambda\left(e\right)\in L,\forall e\in p\right\} .
\]

\end_inset

 Another way to see this is that we are trying to determine all pairs of
 nodes such that there is a path between them such that the concatenation
 of the edge labels along the path forms a string in the language denoted
 by the regular expresion 
\begin_inset Formula $\left(l_{1}\cup...\cup l_{n}\right)^{*}$
\end_inset

, where 
\begin_inset Formula $L=\left\{ l_{1},...,l_{n}\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
Typically, the allowed topology and labels involved are expressed as a regular
 expression.
 In general, this problem is known to be NP-complete.
\end_layout

\begin_layout Subsubsection*
Pattern matching
\end_layout

\begin_layout Standard
In this case, we want to find all subgraphs that follow a given pattern.
 More formally, we have 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 and a pattern 
\begin_inset Formula $P=\left(V_{p},E_{p}\right)$
\end_inset

 and we want to find all 
\begin_inset Formula $G'=\left(V',E'\right)$
\end_inset

 such that 
\begin_inset Formula $V'\subset V,E'\subset E$
\end_inset

 and 
\begin_inset Formula $P\cong G'$
\end_inset

, i.e., 
\begin_inset Formula $P$
\end_inset

 and 
\begin_inset Formula $G'$
\end_inset

 are isomorphic, i.e., there are biyections 
\begin_inset Formula $V'\overset{f_{1}}{\rightarrow}V_{p}$
\end_inset

 and 
\begin_inset Formula $E'\overset{f_{2}}{\rightarrow}E_{p}$
\end_inset

.
\end_layout

\begin_layout Standard
This problem is also NP-complete.
\end_layout

\begin_layout Standard
Examples of use cases are finding all groups of cities such that all of
 them are directly connected by flights (find cliques),...
\end_layout

\begin_layout Subsection
Property Graph Patterns
\end_layout

\begin_layout Standard
Among the operations that we have seen so far, it is interesting, in the
 context of property graphs, to focus on pattern matching.
 Now, we use 
\series bold
basic graph patterns (bgps)
\series default
, which are equivalent to conjunctive queries, and are a property graph
 where variables can appear in place of any constant.
\end_layout

\begin_layout Standard
A 
\series bold
match
\series default
 for a bgp is a mapping from variables to constants, such that when the
 mapping is applied to the bgp, the result is a subgraph of the original
 graph.
\end_layout

\begin_layout Standard
The 
\series bold
results
\series default
 for a bgp are all mappings from variables in the query to constants that
 comprise a match.
\end_layout

\begin_layout Example
A simple pattern matching.
 Assume we have the same graph we used before:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename simplegraph.png
	scale 50

\end_inset


\end_layout

\end_deeper
\begin_layout Example
And the following bgp:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename simplebgp.png
	scale 50

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Here, I have coloured variables in red, and left constant in black.
\end_layout

\begin_layout Example
Let's see some matches:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename simplebgp_1.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename simplebgp_2.png
	scale 50

\end_inset


\end_layout

\end_deeper
\begin_layout Example
And so on...
\end_layout

\begin_layout Subsubsection
Evaluating graph patterns
\end_layout

\begin_layout Standard
Now, we are going to formalize a bit the intuition built in the previous
 explanation and example.
 Evaluating a bgp 
\begin_inset Formula $P$
\end_inset

, against a graph 
\begin_inset Formula $G$
\end_inset

 corresponds to listing all possible matches of 
\begin_inset Formula $P$
\end_inset

 with respect to 
\begin_inset Formula $G$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
Given an edge-labelled graph 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 and a bgp 
\begin_inset Formula $P=\left(V',E'\right)$
\end_inset

, a 
\series bold
match
\series default
 of 
\begin_inset Formula $P$
\end_inset

 in 
\begin_inset Formula $G$
\end_inset

 is a mapping 
\begin_inset Formula 
\[
h:Const\cup Var\rightarrow Const
\]

\end_inset

 such that:
\end_layout

\begin_deeper
\begin_layout Enumerate
For each constant 
\begin_inset Formula $a\in Const$
\end_inset

, 
\begin_inset Formula $h\left(a\right)=a$
\end_inset

, i.e., constants are preserved.
\end_layout

\begin_layout Enumerate
For each edge 
\begin_inset Formula $\left(b,l,c\right)\in E'$
\end_inset

, we have 
\begin_inset Formula $\left(h\left(b\right),h\left(l\right),h\left(c\right)\right)\in E$
\end_inset

.
 This imposes that
\end_layout

\begin_deeper
\begin_layout Enumerate
Each edge of 
\begin_inset Formula $P$
\end_inset

 is mapped to an edge of 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Enumerate
The structure of 
\begin_inset Formula $P$
\end_inset

 is preserved in its image under 
\begin_inset Formula $h$
\end_inset

 in 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\end_inset


\end_layout

\begin_layout Subsubsection
Semantics of a match
\end_layout

\begin_layout Standard
Matches can be defined using different semantics on what we consider equivalent
 graphs, and what conditions the function 
\begin_inset Formula $h$
\end_inset

 have to meet:
\end_layout

\begin_layout Itemize

\series bold
Homomorphism-based semantics
\series default
: multiple variables in 
\begin_inset Formula $P$
\end_inset

 can map to the same constant in 
\begin_inset Formula $G$
\end_inset

 (
\begin_inset Formula $h$
\end_inset

 is not necessarily inyective).
 This correspondes to the familiar semantics of select-from-where queries
 in relational databases.
\end_layout

\begin_layout Itemize

\series bold
Isomorphism-based queries
\series default
: we add the constraint that 
\begin_inset Formula $h$
\end_inset

 must be inyective.
 
\end_layout

\begin_layout Standard
Nonetheless, there are intermediate solutions:
\end_layout

\begin_layout Itemize

\series bold
Strict isomorphism
\series default
: corresponds to the isomorphism-based queries, in its stricter sense.
 
\begin_inset Formula $h$
\end_inset

 is inyective.
\end_layout

\begin_layout Itemize

\series bold
No repeated-node semantics
\series default
: 
\begin_inset Formula $h$
\end_inset

 is only inyective for nodes.
\end_layout

\begin_layout Itemize

\series bold
No repeated-edge semantics
\series default
: 
\begin_inset Formula $h$
\end_inset

 is only inyective for edges.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Graph Query Languages
\end_layout

\begin_layout Standard
Graph Query Languages are declarative languages used to query a graph.
 Typically, a GQL matches an extended version of pattern matching, and each
 database engine chooses fix semantics for it, not existing a common agreement
 nor standard.
 There are also APIs provigin implementation of graph metrica or label-constrain
ed shortest path, which, depending on the metric or algorithm chosen, maps
 to adjacency, reachability or pattern matching.
\end_layout

\begin_layout Subsection
Types of queries
\end_layout

\begin_layout Standard
There are different types of queries, each of them using a different access
 plan:
\end_layout

\begin_layout Itemize

\series bold
Adjacency queries
\series default
: neighbourhood queries require accessing the basic data structure and navigate
 it.
 Thus, their performance depends on the database implementation and the
 specific query, as the time to find a node or edge depends on this implementati
on.
\end_layout

\begin_layout Itemize

\series bold
Regular path queries
\series default
: combine pattern matching and reachability and require specific graph-oriented
 algorithms.
 They are equivalent to conjunctive queries.
 They are also called navigational graph patterns.
\end_layout

\begin_deeper
\begin_layout Standard
RPQs extend the bgp definition by allowing regular expressions on edges
 to describe path queries in a pattern, i.e., a 
\series bold
path
\series default
 is described as
\begin_inset Formula 
\[
x\overset{\alpha}{\rightarrow}y\ over\ G,
\]

\end_inset

 where 
\begin_inset Formula $x,y$
\end_inset

 are nodes in 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $\alpha$
\end_inset

 is a regular expression over 
\begin_inset Formula $Lab$
\end_inset

.
 The regular expressions differ from language to language.
 Some usual expressions are:
\end_layout

\begin_layout Itemize
The Kleene star *: 0 or more ocurrences.
\end_layout

\begin_layout Itemize
The Kleene plus +: 1 or more ocurrences.
\end_layout

\begin_layout Itemize
Concatenation 
\begin_inset Formula $\circ$
\end_inset


\end_layout

\begin_layout Itemize
Inverse 
\begin_inset Formula $^{-}$
\end_inset


\end_layout

\begin_layout Itemize
Union 
\begin_inset Formula $|$
\end_inset

:
\end_layout

\begin_layout Itemize
Combinations of them and the labels in 
\begin_inset Formula $Lab$
\end_inset

.
\end_layout

\begin_layout Example
Some simple RPQs.
 In our previous example, we can define some simple RPQs:
\end_layout

\begin_deeper
\begin_layout Itemize
Find all co-actors of all actors:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename RPQ.drawio.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Retrieve all actors you can reach by transitively following the co-actoring
 relationship, at least once:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename RPQ.drawio (1).png
	scale 60

\end_inset


\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
Complex graph patterns
\series default
: add further expressivity beyond conjunctive queries, such as groupings,
 aggregations and set operations.
 The previous RPQs are equivalent to conjunctive queries without projections,
 but database languages are richer than this, enforcing GQLs to implement
 more complex semantics.
 
\series bold
GraphQL
\series default
 was the first graph algebra extending RPQs with relational-like operators.
\end_layout

\begin_layout Subsection
Popular languages
\end_layout

\begin_layout Subsubsection
Cypher
\end_layout

\begin_layout Standard
Cypher was created by Neo4j, and acts as a de facto standard, adopted by
 other graph databases.
 It is a high-level, declarative language, providing both DDL (Data Definition
 Language) and DML (Data Modification Language) capabilities, and allowing
 navigational graph patterns, except concatenation.
\end_layout

\begin_layout Standard
It applies pattern matching under 
\color blue
no-repeated-edges isomorphism
\color inherit
 semantics.
 The available clauses are:
\end_layout

\begin_layout Itemize
DML:
\end_layout

\begin_deeper
\begin_layout Itemize
MATCH: the graph pattern to match.
\end_layout

\begin_layout Itemize
WHERE: filtering criteria.
\end_layout

\begin_layout Itemize
WITH: divides a query into multiple distinct parts.
\end_layout

\begin_layout Itemize
RETURN: define what to return.
\end_layout

\end_deeper
\begin_layout Itemize
DDL:
\end_layout

\begin_deeper
\begin_layout Itemize
CREATE | MERGE: creates nodes and relationship.
 Merge does it only if it does not exist beforehand, entailing an overhead.
\end_layout

\begin_layout Itemize
DELETE: removes nodes, relationships and properties.
\end_layout

\begin_layout Itemize
SET: set values of properties.
\end_layout

\begin_layout Itemize
FOREACH: performs updating actions once per element in a list.
\end_layout

\end_deeper
\begin_layout Standard
Cypher applies a data pipeline, where each stage is a MATCH-WHERE-WITH/RETURN
 block, allowing the definition of aliases to be passed between stages.
\end_layout

\begin_layout Standard
For example, uppose you have a graph database with 
\family typewriter
Person
\family default
 nodes and two types of relationships:
\family typewriter
 FRIENDS_WITH
\family default
 and 
\family typewriter
WORKS_WITH
\family default
.
 You want to find all mutual friends of 
\family typewriter
Alice
\family default
 and 
\family typewriter
Bob
\family default
 who also work with someone named 
\family typewriter
Charlie
\family default
.
 You can achieve this with the following Cypher query:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=SQL"
inline false
status open

\begin_layout Plain Layout

MATCH (alice:Person {name: 'Alice'})-[:FRIENDS_WITH]-(mutual_friend:Person)-[:FR
IENDS_WITH]-(bob:Person {name: 'Bob'})
\end_layout

\begin_layout Plain Layout

WITH mutual_friend
\end_layout

\begin_layout Plain Layout

MATCH (mutual_friend)-[:WORKS_WITH]-(charlie:Person {name: 'Charlie'})
\end_layout

\begin_layout Plain Layout

RETURN mutual_friend.name
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this query, we have three stages in the data pipeline:
\end_layout

\begin_layout Enumerate
MATCH (Stage 1): Match the graph pattern where 
\family typewriter
Alice
\family default
 and 
\family typewriter
Bob
\family default
 have mutual friends.
 Bind the 
\family typewriter
mutual_friend
\family default
 node.
\end_layout

\begin_layout Enumerate
WITH: Pass the 
\family typewriter
mutual_friend
\family default
 node to the next stage.
\end_layout

\begin_layout Enumerate
MATCH (Stage 2): Match the graph pattern where the
\family typewriter
 mutual_friend
\family default
 from the previous stage works with 
\family typewriter
Charlie
\family default
.
\end_layout

\begin_layout Enumerate
RETURN: Return the name of the mutual friend who meets both criteria (being
 a mutual friend of 
\family typewriter
Alice
\family default
 and 
\family typewriter
Bob
\family default
 and working with 
\family typewriter
Charlie
\family default
).
\end_layout

\begin_layout Standard
In this example, the 
\family typewriter
WITH
\family default
 clause is used to separate the query into two stages.
 The first stage finds all mutual friends of 
\family typewriter
Alice
\family default
 and 
\family typewriter
Bob
\family default
, and the second stage filters those mutual friends to only include the
 ones who work with 
\family typewriter
Charlie
\family default
.
 The use of 
\family typewriter
WITH
\family default
 here is what enables the pipelining of stages in the query.
\end_layout

\begin_layout Example
Given the following graph:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename cypher_example.drawio.png
	scale 60

\end_inset


\end_layout

\begin_layout Enumerate
Return all nodes
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

MATCH (n)
\end_layout

\begin_layout Plain Layout

RETURN n;
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Return all edges
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

MATCH ()-[e]-()
\end_layout

\begin_layout Plain Layout

RETURN e;
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Return all neighbour nodes of 'John'
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

MATCH (john {name:'John'})-[:friend]-(f)
\end_layout

\begin_layout Plain Layout

RETURN john, f;
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Return the incident nodes of all edges
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

MATCH (n1)-[e]->(n2)
\end_layout

\begin_layout Plain Layout

RETURN e, n1, n2;
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection
GQL
\end_layout

\begin_layout Standard
There is an ongoing big effort towards stardardization of Graph Query Languages,
 through the GQL project.
\end_layout

\begin_layout Section
Graph Processing
\end_layout

\begin_layout Exercise
Understand the relationships between the basic graph operations.
 Answer the following questions:
\end_layout

\begin_deeper
\begin_layout Enumerate
Is adjacency subsumed by reachability?
\end_layout

\begin_deeper
\begin_layout Standard
No, because there is no way to compute all adjacent nodes to a given node
 by answering reachability queries.
\end_layout

\end_deeper
\begin_layout Enumerate
Is adjacency subsumed by pattern matching?
\end_layout

\begin_deeper
\begin_layout Standard
Yes, the adjacency query 
\begin_inset Formula $Adjacent\left(x\right)$
\end_inset

 is equivalent to the pattern matching query 
\begin_inset Formula $Match\left(x\rightarrow y\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Is reachability subsumed by pattern matching?
\end_layout

\begin_deeper
\begin_layout Standard
Yes, the reachability query 
\begin_inset Formula $Reachable\left(x,y\right)$
\end_inset

 is equivalent to 
\begin_inset Formula $!not\_empty\left(Match\left(x\rightarrow^{*}y\right)\right)$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Exercise
Note that in the cases in which a query is subsumed in another, it makes
 sense to have the simplified version, which can be optimized as a simpler
 case of pattern matching.
\end_layout

\begin_layout Standard
Notice that so far, the operations have been presented conceptually, being
 agnostic of the underlying technology.
 The theoretical costs are:
\end_layout

\begin_layout Itemize
Adjacency is linear in the amount of vertices to visit 
\begin_inset Formula $O\left(\left|V\right|\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
Reachability is 
\begin_inset Formula $O\left(\left|V\right|^{3}\right)$
\end_inset

 using Dijkstra's shortest path.
\end_layout

\begin_layout Itemize
Label-constrained reachability is 
\begin_inset Formula $O\left(\left|V\right|\right)$
\end_inset

 for a single pair of vertices and 
\begin_inset Formula $O\left(\left|V\right|^{3}\right)$
\end_inset

 for all pairs.
 It is NP-complete if we enforce no-repeated-edges isomorphism semantics.
\end_layout

\begin_layout Itemize
Pattern matching in general is NP-complete.
\end_layout

\begin_layout Itemize
Navigational pattern matching is also NP-complete, but can be reduced to
 
\begin_inset Formula $O\left(\left|V\right|^{3}\right)$
\end_inset

 using bounded simulation algorithms.
\end_layout

\begin_layout Exercise
Identify the most efficient algorithm to solve a given query.
 Assume a graph containing relationships and nodes of actors and films (the
 same as before, but with virtually more information).
 Define:
\end_layout

\begin_deeper
\begin_layout Enumerate
A query that should be solved as an Adjacency problem.
\end_layout

\begin_deeper
\begin_layout Standard
Retrieve all pairs of 
\begin_inset Formula $\left(Person,Film\right)$
\end_inset

 such that 
\begin_inset Formula $Person$
\end_inset

 acts in 
\begin_inset Formula $Film$
\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename exercise_queries.drawio.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
A query that should be solved as a Label-constrained Reachability problem.
\end_layout

\begin_deeper
\begin_layout Standard
Retrieve all pairs of actors related by coacting relationship.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename exercise_queries.drawio_1.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
A query that should be solved as a Navigational Pattern matching problem
\end_layout

\begin_deeper
\begin_layout Standard
People and movies in which the person acts and directs.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename exercise_queries_2.drawio.png
	scale 60

\end_inset


\end_layout

\begin_layout Standard
NO! This can be done with reachability, repeating the same node:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename exercise_queries_3.drawio (1).png
	scale 60

\end_inset


\end_layout

\begin_layout Standard
So, we need something else...
 If we fix something in the middle, then we cannot use reachability.
 For example, retrieve all co-actors related by the Movie Titanic:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename exercise_queries_4.drawio.png
	scale 60

\end_inset


\end_layout

\begin_layout Standard
We can also enforce other complex constraints, such as: retrieve all movies
 in which there are exactly 3 actors:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename exercise_queries_5.drawio.png
	scale 60

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Subsection
Dijkstra's algorithm
\end_layout

\begin_layout Standard
Dijkstra's algorithm defines a method to find the shortest path between
 two nodes in a graph in which the edges have a cost assigned (it can be
 used in general if we take the distance between two nodes as the number
 of edges used to go from one to the other).
\end_layout

\begin_layout Standard
More formally, if we have a path between two nodes, 
\begin_inset Formula $u,v$
\end_inset

, 
\begin_inset Formula $P\left(u,v\right)=\left\{ e_{1},...,e_{n}\right\} $
\end_inset

, then the distance of the path is
\begin_inset Formula 
\[
d\left(u,v\right)=d\left(P\right)=\sum_{i=1}^{n}c\left(e_{i}\right),
\]

\end_inset

 where 
\begin_inset Formula $c\left(e_{i}\right)$
\end_inset

 is the cost of going through edge 
\begin_inset Formula $e_{i}$
\end_inset

.
 If we want to account only for the number of edges used, we can then define
 
\begin_inset Formula $c\left(e\right)=1$
\end_inset

 for all 
\begin_inset Formula $e\in E$
\end_inset

.
\end_layout

\begin_layout Standard
Dijkstra
\begin_inset Foot
status open

\begin_layout Plain Layout
See 
\begin_inset CommandInset href
LatexCommand href
name "Dijkstra on Wikipedia"
target "https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm"
literal "false"

\end_inset

.
\end_layout

\end_inset

 noticed two very convenient properties of shortest paths: 
\end_layout

\begin_layout Enumerate
Every subpath of a shortest path is itself a shortest path.
\end_layout

\begin_deeper
\begin_layout Standard
This is easy to see, since if we have a shortest path between 
\begin_inset Formula $u$
\end_inset

 and 
\begin_inset Formula $v$
\end_inset

, 
\begin_inset Formula $P\left(u,v\right)$
\end_inset

, and we take two of the nodes that are included in the path, say 
\begin_inset Formula $u_{1}$
\end_inset

 and 
\begin_inset Formula $u_{2}$
\end_inset

, then the subpath that goes from 
\begin_inset Formula $u_{1}$
\end_inset

 to 
\begin_inset Formula $u_{2}$
\end_inset

 must also be of shortest length.
 Imagine it was otherwise, then there would be a path 
\begin_inset Formula $P'\left(u_{1},u_{2}\right)$
\end_inset

 shorter than the subpath we found in 
\begin_inset Formula $P$
\end_inset

.
 Then, we could substitute this subpath by 
\begin_inset Formula $P'$
\end_inset

, and the new path would be shorter than 
\begin_inset Formula $P$
\end_inset

.
 But 
\begin_inset Formula $P$
\end_inset

 is a shortest path, so this is not possible.
\end_layout

\end_deeper
\begin_layout Enumerate
The triangle inequality of shortest paths:
\begin_inset Formula 
\[
d\left(u,v\right)\leq d\left(u,x\right)+d\left(x,v\right),\ \forall x\in E.
\]

\end_inset


\end_layout

\begin_layout Standard
The algorithm is detailed in Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Dijkstra(WeightedGraph-G,-Source"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Note that this algorithm is a bit more general, since it allows to find
 the shortest paths from one source node 
\begin_inset Formula $U$
\end_inset

 to the rest of the nodes in the graph.
 If we want a specific one, we can stop when we reach it or just find it
 from the output.
 To get the shortest path from 
\begin_inset Formula $U$
\end_inset

 to 
\begin_inset Formula $V$
\end_inset

, we would go to 
\begin_inset Formula $prev\left[V\right]$
\end_inset

 and traverse this in reverse until getting to 
\begin_inset Formula $U$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

for each vertex v in G.Vertices:
\end_layout

\begin_layout Plain Layout

  dist[v] <- INFINITY
\end_layout

\begin_layout Plain Layout

  prev[v] <- UNDEFINED
\end_layout

\begin_layout Plain Layout

  add v to Q
\end_layout

\begin_layout Plain Layout

dist[U] <- 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while Q is not empty:
\end_layout

\begin_layout Plain Layout

  u <- vertex in Q with min dist[u]
\end_layout

\begin_layout Plain Layout

  remove u from Q
\end_layout

\begin_layout Plain Layout

  
\end_layout

\begin_layout Plain Layout

  for each neighbor v of u still in Q:
\end_layout

\begin_layout Plain Layout

      alt <- dist[u] + Graph.Edges(u, v)
\end_layout

\begin_layout Plain Layout

      if alt < dist[v]:
\end_layout

\begin_layout Plain Layout

          dist[v] <- alt
\end_layout

\begin_layout Plain Layout

          prev[v] <- u
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

return dist[], prev[]
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Dijkstra(WeightedGraph G, SourceNode U)
\begin_inset CommandInset label
LatexCommand label
name "alg:Dijkstra(WeightedGraph-G,-Source"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Pattern Matching
\end_layout

\begin_layout Standard
Even considering the most basic fragment of graph patterns and for all semantics
 applied (homomorphism, isomorphism, no-repeated node isomorphism or no-repeated
 edge isomorphism), the problem is NP-complete, and the problem is tackled
 using different techniques, algorithms and heuristics.
\end_layout

\begin_layout Subsection
Complex Graph Processing
\end_layout

\begin_layout Subsubsection
Graph Metrics
\end_layout

\begin_layout Standard
A 
\series bold
metric
\series default
 can be defined as a combination of adjacency, reachability, pattern matching
 and complex graph patterns, so the cost of a metric depends on how it is
 defined.
 Nevertheless, there are very usual and relevant metrics, which are typically
 provided as built-in functions.
 For example, the min/max degree in the graph, its diameter, pageRank,...
\end_layout

\begin_layout Subsubsection
Graph Processing Pipelines
\end_layout

\begin_layout Standard
A pipeline is a list of algorithms over a graph, which are pipelined, inputting
 the output of an algorithm to the next one, to obtain some result.
 Therefore, we can see a metric as a pre-defined pipeline, but a pipeline
 can be as complex as we want/need.
\end_layout

\begin_layout Subsubsection
Graph Embeddings
\end_layout

\begin_layout Standard
An embedding is a vector representation of a graph, and it is useful to
 perform data analysis using typical ML algorithms, that have been developed
 using vectors.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Graph Databases
\end_layout

\begin_layout Standard
A 
\series bold
graph database
\series default
 is a software that provides a way to store and persist graph data, as well
 as means to process this data.
 Examples of graph databases are Neo4j or Titan.
\end_layout

\begin_layout Standard
A 
\series bold
distributed graph framework 
\series default
refers to a processing framework over a graph database.
 We could compare it to MapReduce
\begin_inset Foot
status open

\begin_layout Plain Layout
See 
\begin_inset CommandInset href
LatexCommand href
name "MapReduce in Wikipedia"
target "https://en.wikipedia.org/wiki/MapReduce"
literal "false"

\end_inset

.
\end_layout

\end_inset

 or to Spark
\begin_inset Foot
status open

\begin_layout Plain Layout
See 
\begin_inset CommandInset href
LatexCommand href
name "Apache Spark in Wikipedia"
target "https://en.wikipedia.org/wiki/Apache_Spark"
literal "false"

\end_inset

.
\end_layout

\end_inset

, in the sense that it is a mean to extract data from a graph database,
 but not to store graphs.
 Examples of these frameworks are Pregel or Giraph.
\end_layout

\begin_layout Subsection
Implementation of Graph Databases
\end_layout

\begin_layout Standard
Graph databases can be implemented in different ways, and each approach
 presents advantages and disadvantages.
\end_layout

\begin_layout Subsubsection
Incidence Lists
\end_layout

\begin_layout Standard
In incidence lists, vertices and edges are stored as records of objects,
 such that each vertex stores incident edges, and each edge stores incident
 nodes.
 
\end_layout

\begin_layout Example
An Incidence List
\end_layout

\begin_layout Example
This graph:
\end_layout

\begin_layout Example
\begin_inset Graphics
	filename pegado1.png
	scale 60

\end_inset


\end_layout

\begin_layout Example
Can be encoded in an incidence list as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename incidentlist.drawio.png
	scale 80

\end_inset


\end_layout

\end_deeper
\begin_layout Example
The diagram is a bit messy, sorry for that.
\end_layout

\begin_layout Subsubsection*
Incidence Lists in Neo4j
\end_layout

\begin_layout Standard
Neo4j is implemented using incident lists, using the concept of linked lists.
\end_layout

\begin_layout Subsubsection*
Nodes
\end_layout

\begin_layout Standard
In Neo4j, there is one physical file to store all nodes in-memory, with
 a Least Frequently Used cache policy, and a fixed size for the records
 (of 15B).
 This enables for very fast look-ups in 
\begin_inset Formula $O\left(1\right)$
\end_inset

 time.
\end_layout

\begin_layout Standard
Let's delve into this.
 This is the anatomy of a Node:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="15">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inUse
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nextRelId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nextPropId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
labels
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
extra
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1B
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1B
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The first byte is used for some metadata, such as a flag 'inUse'.
\end_layout

\begin_layout Standard
The bytes 2-5 are the ID of the first relationship (edge) incident to the
 node.
\end_layout

\begin_layout Standard
The bytes 6-9 are the ID of the first property of the node.
\end_layout

\begin_layout Standard
The bytes 10-14 encode the labels of the node.
\end_layout

\begin_layout Standard
The last byte contain extra information.
\end_layout

\begin_layout Subsubsection*
Relationships and properties
\end_layout

\begin_layout Standard
There are two more kind of files to encode relationships and properties,
 also containing fixed size records and using a LFU cache policy.
 A relationship looks like this:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="33">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
meta
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
sNodeId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
dNodeId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
typeId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
sNodePrevRelId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
sNodeNextRelId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
dNodePrevRelId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
dNodeNextRelId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
nextPropId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
1B
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The property file looks like this:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="33">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
meta
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
node/edgeId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
prevPropId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
nextPropId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
propNameId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
propValueId
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
1B
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
4B
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In this case, the metadata field has a bit indicating whether the property
 belongs to a node or a relationship.
\end_layout

\begin_layout Example
Encode this graph using the seen nomenclature:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename simplegraph.png
	scale 50

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Nodes:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
meta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
firstRel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
firstProp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
labels
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
extra
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Relationships:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="10">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
meta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sId
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dId
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
label
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sNprevR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sNnextR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dNprevR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dNnextR
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
prop
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p8
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Properties:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
meta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/eId
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
prevP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nextP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
idName
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
idValue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v7
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v6
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
e3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Names:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gender
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
role
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ref
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
na5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
title
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Values:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Clint Eastwood
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Male
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bill
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IMDb
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unforgiven
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Delilah
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Anna Levine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Female
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Labels:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Person
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Movie
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
acts_in
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
l4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
directs
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsubsection
Adjacency Lists
\end_layout

\begin_layout Standard
For each node, we store the list of its neighbors.
 If the graph is directed, the list contains only the outgoing nodes.
 This approach makes it cheaper for obtaining the neighbors of a node, but
 it is not suitable for checking if there is an edge between two nodes,
 since we would need to travers the lists for both nodes completely.
\end_layout

\begin_layout Example
An Adjacency List
\end_layout

\begin_layout Example
This graph:
\end_layout

\begin_layout Example
\begin_inset Graphics
	filename pegado1.png
	scale 60

\end_inset


\end_layout

\begin_layout Example
Can be encoded in an adjacency list as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\rightarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\rightarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\rightarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\rightarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\rightarrow$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsubsection
Incidence Matrix
\end_layout

\begin_layout Standard
An incidence matrix is a bidimensional graph representation, in which rows
 represent vertices and columns represent edges.
 Then, a non-null entry represents that the source vertex is incident to
 the edge.
\end_layout

\begin_layout Example
An Incidence Matrix
\end_layout

\begin_layout Example
This graph:
\end_layout

\begin_layout Example
\begin_inset Graphics
	filename pegado1.png
	scale 60

\end_inset


\end_layout

\begin_layout Example
Can be encoded in an incidence matrix as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="7">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
edges
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
e1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
e2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
e3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
e4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
e5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
nodes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Where 0='not incident', 1='source', 2='dest' and 3='source&dest'.
\end_layout

\begin_layout Subsubsection
Adjacency matrix
\end_layout

\begin_layout Standard
This is also a bidimensional graph representation, in which rows represent
 source vertices, and columns represent destination vertices.
 Therefore, each non-null entry represents that there is an edge from the
 source node to the destination node.
\end_layout

\begin_layout Example
An Adjacency Matrix
\end_layout

\begin_layout Example
This graph:
\end_layout

\begin_layout Example
\begin_inset Graphics
	filename pegado1.png
	scale 60

\end_inset


\end_layout

\begin_layout Example
Can be encoded in an adjacency matrix as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
destination
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Types of Graph Databases
\end_layout

\begin_layout Standard
Some graph databases and graph processing frameworks are based on strong
 assumptions that are not always explicit, but are rather a consequence
 of the internal implementation of graphs.
 We can distinguish between:
\end_layout

\begin_layout Itemize

\series bold
Operational graphs
\series default
: they are the graph equivalent of a CRUD database.
 In this kind of graph database, nodes and edges can be deleted, updated,
 inserted and read.
 Examples are Neo4j or OrientDB.
\end_layout

\begin_layout Itemize

\series bold
Analytical graphs
\series default
: these are snapshot graphs that cannot be modified by the final user, so
 they are the equivalent of a data warehouse.
 For example, the graph processing frameworks can be seen as analytical
 graphs.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Distributed Graph Processing
\end_layout

\begin_layout Standard
When we have a centralized graph, the cost of the queries that we launch
 on it depends on the number of edges/nodes visited during processing.
 Therefore, this cost is affected by the graph size and its topology, and
 the processing algorithm used.
 But sometimes the graph is large and the algorithm expensive.
 For instance, navigational pattern matching, in the best case, is still
 of cubic computational complexity.
\end_layout

\begin_layout Standard
Also, graph computations are difficult to scale and parallelize, because:
\end_layout

\begin_layout Itemize
Computations are data-driven: this means that the computations are driven
 by vertices and edges, with the structure of the computation not known
 a priori.
\end_layout

\begin_layout Itemize
Unstructured problems: the data stored in graphs is usually unstructured
 and irregular, making it difficult to partition.
\end_layout

\begin_layout Itemize
Poor locality: the computations and access patterns tend not to have very
 much locality.
\end_layout

\begin_layout Itemize
High data access to computation ratio: since exploring the structure of
 a graph is more usual than performing large numbers of computations.
\end_layout

\begin_layout Standard
Sequential graph algorithms, which require random access to all the data,
 present poor locality and together with the indivisibility of the graph
 structure cause time and resource intensive pointer chasing between storage
 mediums in order to access each datum.
 In response to these shortcomings, new distributed frameworks based on
 the vertex-centric programming model were developed.
 This approach is:
\end_layout

\begin_layout Itemize
No shared-memory (there is a local view of data).
\end_layout

\begin_layout Itemize
Meant to converge upon iteration.
\end_layout

\begin_layout Itemize
Naturally adapting to distributed settings.
\end_layout

\begin_layout Standard
As opposed to having a global perspective of the data (assuming all data
 is randomly accessible in memory), vertex-centric frameworks employ a local,
 vertex oriented perspective of computation, introducing the paradigm 
\series bold
Think Like A Vertex (TLAV)
\series default
.
\end_layout

\begin_layout Subsection
Distributed Graph Storage
\end_layout

\begin_layout Standard
Several open-source solutions like HDFS, HBase, or Apache Titan can be used
 for storage.
 Proprietary solutions like Amazon Neptune also exist.
 Each approach has its own trade-offs: open-source solutions offer flexibility
 but may demand additional maintenance and expertise, while proprietary
 solutions provide comprehensive support but may pose usage limitations
 and costs.
\end_layout

\begin_layout Standard
For distributed processing frameworks to function effectively, graph data
 needs to be exposed as two views: a set of vertices and a set of edges.
 Traditional distributed data management considerations, like partitioning
 and replicas, apply to these views.
\end_layout

\begin_layout Subsection
TLAV Frameworks
\end_layout

\begin_layout Standard
TLAV frameworks operate on a message passing interface and support iterative
 execution of a user-defined vertex program.
 Vertices pass messages to adjacent vertices, and this iterative process
 continues until a termination condition is met.
\end_layout

\begin_layout Standard
They might either follow the 
\series bold
Bulk Synchronous Parallel (BSP) computing model
\series default
, in which computation is based on 
\series bold
superstep
\series default
, where a superstep must finish entirely before the next superstep starts,
 defining a synchronization barrier per superstep; or an 
\series bold
asynchronous computing model
\series default
, which is prone to suffer from deadlocks and data races, but may improve
 the performance under certain assumptions/conditions.
\end_layout

\begin_layout Standard
Examples of TLAV frameworks include Pregel, Apache Giraph, and GraphX, each
 offering its own strengths and weaknesses.
 It's also important to note the role of fault-tolerance in distributed
 graph processing.
 Ensuring system resilience to node failures is a critical aspect that helps
 maintain operation continuity.
\end_layout

\begin_layout Example
Calculating max using TLAV.
\end_layout

\begin_layout Example
In the first superstep: all vertices send its value to its adjacent vertices.
\end_layout

\begin_layout Example
On each superstep: each vertex compares the value that it has received (if
 any) to the current value that it has.
 If it is greater, then it updates.
 In case of update, it sends again this new value to adjacent nodes.
\end_layout

\begin_layout Example
Stop condition: no vertex changes in a superstep.
\end_layout

\begin_layout Example
The process could be as the following:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename TLAV.drawio.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Here, when a node is red, is because it updated, and the red arrows indicate
 messages.
 The process finishes when no node changes.
\end_layout

\begin_layout Subsubsection
Synchronized TLAV
\end_layout

\begin_layout Standard
As we have explained, TLAV framework supports iterative execution of a user
 defined vertex program over vertices of the graph.
 Programs are thus composed of several interdependent components that drive
 program execution, the 
\series bold
vertex kernels
\series default
.
 A 
\series bold
synchronization barrier
\series default
 is set between interdependent components, defining the supersteps.
\end_layout

\begin_layout Standard
Therefore, a superstep is composed of different kernels, and it ends when
 all kernels finish, and all messages are sent.
 Then, there is a synchronization barrier, which is used to synchronize
 the obtained results, so that the next superstep can begin.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename TLAV_1.drawio.png
	scale 60

\end_inset


\end_layout

\begin_layout Example
Single-Source Shortest-Path
\end_layout

\begin_layout Example
The following code computes the shortest path in a graph using the TLAV
 framework:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

input: 
\end_layout

\begin_layout Plain Layout

	a graph G=(V,E)
\end_layout

\begin_layout Plain Layout

	a starting vertex U
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

foreach v in V:
\end_layout

\begin_layout Plain Layout

	shortest_path_L[v] = inf
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

send(0,U)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

repeat
\end_layout

\begin_layout Plain Layout

	for v in V do in parallel:
\end_layout

\begin_layout Plain Layout

		minIncoming = min(receive(path_length));
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		if minIncoming < shortest_path_L[v]:
\end_layout

\begin_layout Plain Layout

			shortest_path_L[v] = minIncoming
\end_layout

\begin_layout Plain Layout

			
\end_layout

\begin_layout Plain Layout

			foreach e in E:
\end_layout

\begin_layout Plain Layout

				path_length = shortest_path_L[v] + length[e]
\end_layout

\begin_layout Plain Layout

				
\end_layout

\begin_layout Plain Layout

				j = destination(e)
\end_layout

\begin_layout Plain Layout

				send(path_length,j)
\end_layout

\begin_layout Plain Layout

			end
\end_layout

\begin_layout Plain Layout

		end
\end_layout

\begin_layout Plain Layout

		halt() # if no message sent, then halt
\end_layout

\begin_layout Plain Layout

	end
\end_layout

\begin_layout Plain Layout

until no more messages are sent;
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Example
The execution could be as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename TLAV_2.drawio.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
The colors indicate the same as in the previous example.
 The green node is the source node for the algorithm and the numbers indicate
 the weights of the edges.
\end_layout

\begin_layout Subsubsection
TLAV: Graph Distribution
\end_layout

\begin_layout Standard
We have seen that TLAV graph processing requires the graph data to be exposed
 in the form of two views: the set of vertices and the set of edges.
 Let's see how TLAV can be achieved in a distributed environment.
 Let's begin with an example:
\end_layout

\begin_layout Example
Consider the following distributed graph:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename tlav.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
This graph can be represented as follows:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename tlav_0.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Here, we have depicted the two views, partitioned.
 Each partition is depicted by a yellow rectangle.
 And the instances are stored in the partitions.
 Note that the vertices do not store the nodes, I have draw them like that
 to facilitate readability.
\end_layout

\begin_layout Example
Now, we want to set up a simple TLAV environment.
 We are going to send messages 
\begin_inset Formula $\left\{ a_{m},b_{m},c_{m},f_{m}\right\} $
\end_inset

.
 Each message is sent to the node it is named after.
 For example, 
\begin_inset Formula $a_{m}$
\end_inset

 goes to node 
\begin_inset Formula $a$
\end_inset

.
 The nodes will send the message to all nodes to which they are connected,
 and these will generate a message named after them.
 For example, if 
\begin_inset Formula $b$
\end_inset

 receive a message, it will send 
\begin_inset Formula $b_{m}$
\end_inset

.
 The first superstep of this process is:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename tlav_1.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Note how messages can be merged in two ways: intrapartition and interpartition.
 The messages in the white box would be sent to the vertices for the next
 superstep.
\end_layout

\begin_layout Standard
It is very important to realize that states can only be shared through messages,
 since there is no shared memory.
 
\end_layout

\begin_layout Standard
About the vertex kernel, keep in mind the after its execution, the vertices
 send messages to adjacent vertices, and these messages could be as complex
 as needed, and they can even modify the graph.
 The kernel must also include a 
\series bold
halt condition
\series default
, so that a node knows when to stop sending messages, and convergence can
 be achieved.
\end_layout

\begin_layout Subsubsection*
Pregel
\end_layout

\begin_layout Standard
Pregel is a very famous TLAV framework.
 Its model of computation is as follows:
\end_layout

\begin_layout Itemize
Input: a directed graph with three views:
\end_layout

\begin_deeper
\begin_layout Itemize
List of nodes, uniquely identified.
\end_layout

\begin_layout Itemize
List of edges.
\end_layout

\begin_layout Itemize
Triplet views: an edge and its nodes information, showing all the information
 for the edge.
\end_layout

\end_deeper
\begin_layout Itemize
Processing: in each superstep the vertices work in parallel.
\end_layout

\begin_deeper
\begin_layout Itemize
They can modify their state, the state of their outgoing edges, receive
 messages from the previous superstep, send messages to other vertices for
 the next superstep and modify the graph topology.
\end_layout

\begin_layout Itemize
The algorithm finishes based on a voting to halt.
 This means that when a node halts, it becomes inactive and stop sending
 processing and sending messages, until it receives another messages.
 When all nodes are inactive, the process finishes.
\end_layout

\end_deeper
\begin_layout Itemize
Output: the set of values explicitly outputed by the vertices.
\end_layout

\begin_layout Subsubsection*
GraphX
\end_layout

\begin_layout Standard
GraphX is a subproject of Apache Spark, built as a Spark module and following
 Pregel's principles, but it only allows to send messahes to adjacent vertices.
\end_layout

\begin_layout Standard
It uses Spark GraphFrames to provide Pregel's required views (vertices,
 edges and triplets) and provides a library with typical distributed algorithms,
 such as pageRank, connected componentes, triangle count,...
\end_layout

\begin_layout Subsubsection
Deepening into TLAV
\end_layout

\begin_layout Subsubsection*
Scheduling
\end_layout

\begin_layout Standard
Scheduling refers to how user-defined vertex programmes are scheduled for
 execution.
 They can be Synchronous, Asynchronous, Both or Hybrid.
\end_layout

\begin_layout Standard

\series bold
Synchronous scheduling
\series default
 is based on the Bulk Synchronous Parallel (BSP) processing model.
 Active vertices are executed conceptually in parallel over one or more
 iterations, called supersteps and synchronization is achieved through a
 global synchronization barrier situated between each superstep that block
 vertices from computing the next superstep until all workers complete the
 current one.
 Each worker has to coordinate with the master to progress to the next superstep.
\end_layout

\begin_layout Standard
Synchronization is achieved because the barrier ensures that each vertex
 within a superstep has access to only the data from the previous superstep.
 Note that inside a superstep, vertices can be scheduled in a fixed or random
 order, because the execution order does not affect the state of the program
 (it should not, at least).
\end_layout

\begin_layout Standard

\color blue
Pros
\color inherit
 os synchronous scheduling:
\end_layout

\begin_layout Itemize
Conceptually simple.
\end_layout

\begin_layout Itemize
Good for certain algorithms.
\end_layout

\begin_layout Itemize
Almost always deterministic, making synchronous applications easy to design,
 program, test, debug and deploy.
\end_layout

\begin_layout Itemize
Scalable: potentially linear in the number of vertices and can benefit from
 batch messaging between supersteps.
\end_layout

\begin_layout Standard

\color red
Cons
\color inherit
:
\end_layout

\begin_layout Itemize
System throughput must remain high in each sueprstep ot justify the synchronizat
ion cost.
 Throughput is affected by the drop of active vertices or by the imbalance
 workload among workers, resulting in the system becoming underutilized;
 the iterative nature of graph algorithms, which suffer from 'the curse
 of the last reducer' (straggler problem), where many computations finish
 quickly but a small fraction of computations take a desproportionately
 larger amount of time; and the speed of computation of each node.
\end_layout

\begin_layout Itemize
The algorithm may not converge for some graph topologies.
 In general, algorithms that require some type of neighbor coordination
 may not always converge with the synchronous scheduling model without the
 use of some extra logic in the vertex program.
\end_layout

\begin_layout Standard

\series bold
Asynchronous scheduling
\series default
 is different.
 There is no explicit synchronization points, so any active vertex is eligible
 for computation whenever processor and network resources are available.
 The vertex execution order can be dynamically generated and reorganized
 by the scheduler, and the straggler problem is eliminated.
 As a result, many asynchronous models outperform corresponding synchronous
 models, but at the expense of added complexity.
\end_layout

\begin_layout Standard
Pros:
\end_layout

\begin_layout Itemize
Outperform synchronous systems when the workload is imbalanced.
\end_layout

\begin_layout Standard
Cons:
\end_layout

\begin_layout Itemize
It cannot take advantage of batch messaging optimizations.
\end_layout

\begin_layout Itemize
The typical pull model execution may result in unnecessary processing.
\end_layout

\begin_layout Itemize
Asynchronous algorithms face more difficult scheduling problems and also
 consistency issues.
\end_layout

\begin_layout Standard
In general, synchronous execution generally accommodates IO bound algorithms,
 while asynchronous execution well-serves CPU bound algorithms by adapting
 to large and variable workloads.
\end_layout

\begin_layout Subsubsection*
Message Passing
\end_layout

\begin_layout Standard
Information is sent from one vertex program kernel to another via messages,
 which contain local vertex data and is addressed to the ID of the recipient
 vertex.
 A message can be addressed anywhere, but since vertices do not have ID
 information of all the other vertices, destination vertex IDs are typically
 obtained by iterating over outgoing edges.
\end_layout

\begin_layout Standard
After computation is complete and a destination ID for each message is determine
d, the vertex dispatches messages to the local worker process, which determines
 whether the recipient resides on the local machine or a remote one.
\end_layout

\begin_layout Itemize
If it is in the local machine, the worker process the message directly into
 the vertex's incoming messages queue.
\end_layout

\begin_layout Itemize
Otherwise, the worker process looks up the worker ID of the destination
 vertex and places the message in an outgoing message buffer, which are
 flushed when they reach a certain capacity, sending messages over the network
 in batches.
 In principle, it tries to wait until the end of a superstep to send all
 messages in batch-mode.
\end_layout

\begin_layout Standard
There three main strategies to optimize message passing:
\end_layout

\begin_layout Enumerate

\series bold
Sender-side combiner
\series default
: messages from several nodes are merged in the sender worker, which sends
 them to the destination worker.
\end_layout

\begin_layout Enumerate

\series bold
Receiver-side combiner
\series default
: in this case, the sender worker sends all the messages produced by all
 nodes to the destination worker, which makes the merging.
\end_layout

\begin_layout Enumerate

\series bold
Receiver-side scatter
\series default
: the sender worker send a message, which is received by the destination
 worker, sending it to several nodes.
\end_layout

\begin_layout Subsubsection*
Shared Memory
\end_layout

\begin_layout Standard
Shared memory exposes vertex data as shared variables that can be directly
 read or modigied by other vertex programs, avoiding the additional memory
 overhead constituted by messages.
 This is typical of centralized graph processing, but there are also some
 distributed systems that apply it.
\end_layout

\begin_layout Standard
The 
\series bold
main problem
\series default
 is that for shared-memory TLAV frameworks, race conditions may arise when
 an adjacent vertex resides on a remote mahcine.
 Shared-memory TLAV frameworks often ensure memory consistency through mutual
 exclusion by requiring serializable schedules.
 
\series bold
Serializability
\series default
 means that every parallel execution has a corresponding sequential execution
 that maintains consistency.
\end_layout

\begin_layout Standard
The most prominent solutions up to today are:
\end_layout

\begin_layout Itemize
In GraphLab, border vertices are provided locally cached ghost copies of
 remote neighbors, where consistency between ghosts and the original vertex
 is maintained using pipelined distributed locking.
\end_layout

\begin_layout Itemize
In PowerGraph and GiraphX, graphs are partitioned by edges and cut along
 vertices, where consistency across cached mirrors of the cut vertex is
 maintained using parallel Chandy-Misra locking.
\end_layout

\begin_layout Standard
The reduced overhead of shared memory compared to message passing may lead
 to 35% faster converges when computing PageRank on a large web graph.
\end_layout

\begin_layout Subsubsection*
Partitioning
\end_layout

\begin_layout Standard
Large-scake graphs must be divided into parts to be placed in distributed
 storage/memory.
 Good partitions often lead to improved performance, but expensive strategies
 to partition can end up dominating processing time, leading many implementation
s to incorporate simple strategies, such as random placement.
\end_layout

\begin_layout Standard
Effective partitioning evenly distributes the vertices for balanced workload
 while minimizing imterpartition edges to avoid costly network traffic.
 This is formally known as a 
\emph on
k-way graph partitioning
\emph default
, which is a NP-complete problem, with no fixed-factor approximation.
\end_layout

\begin_layout Standard
The leading work in graph partitioning can be broadly characterized as rigorous
 but impractical mathematical strategies or pragmatic heuristics used in
 practices, but this is currently an open problem.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Knowledge Graphs
\end_layout

\begin_layout Section
Introduction to Knowledge Graphs
\end_layout

\begin_layout Standard
In a knowledge graph, every node is represented with a unique identifies
 and can be universally reffered, i.e., they can be referred potentially from
 any other database in the world.
\end_layout

\begin_layout Standard
Metadata is represented as nodes and edges in the graph.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado2.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Example knowledge graph from 
\begin_inset CommandInset citation
LatexCommand cite
key "Romero2023"
literal "false"

\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:Example-knowledge-graph"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Knowledge graphs facilitate linking data, because linking via their metadata
 is much more powerful than by the characteristics of the instances, and
 it is a unique feature of their own.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Examples-of-data"
plural "false"
caps "false"
noprefix "false"

\end_inset

, we can see several relationships between metadata nodes:
\end_layout

\begin_layout Itemize
A subClassOf B indicates that concept A is a subset (more specific) of concept
 B.
\end_layout

\begin_layout Itemize
A equivalentClass B indicates that classes A and B represent the same informatio
n, even if they are stored in different machines.
\end_layout

\begin_layout Itemize
A equivalent B also indicate equivalence of representation, but in this
 case it refers to subgraphs of the metadata.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado3.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado4.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Examples of data linkage from 
\begin_inset CommandInset citation
LatexCommand cite
key "Romero2023"
literal "false"

\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:Examples-of-data"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example
Assume Knowledge Graph as the canonical data model.
 First, model as graphs each source (separately):
\end_layout

\begin_deeper
\begin_layout Enumerate
Model schema and some instances for each source:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Source 1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tweet
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Location
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Source 2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Product
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Product Features
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Source 3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Product
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Then, relate the metadata from each graph with new edges generating a unique
 connected graph.
 For this:
\end_layout

\begin_deeper
\begin_layout Enumerate
Look for similar or identical concepts.
\end_layout

\begin_layout Enumerate
Think of interesting relationships you could exploit later.
\end_layout

\end_deeper
\end_deeper
\begin_layout Example
Assume you can use the following pre-defined edges: equivalentClass, type
 and subClassOf, which embed the semantics already discussed.
\end_layout

\begin_layout Standard
A possible solution is the following:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename kg.png
	scale 60

\end_inset


\end_layout

\begin_layout Standard
Note that to model the ternary relationship between (User, Product, Time)
 we needed to add an artificial node.
 This is called 
\series bold
reification
\series default
.
\end_layout

\begin_layout Subsubsection*
Schema.org
\end_layout

\begin_layout Standard
Schema.org is a global initiative to mark up data.
 It provides a vocabulary of terms and their relationships.
 Google and others ahve built their semantic-aware searchers based on schema.org
 and built huge knowledge graphs based on it.
\end_layout

\begin_layout Section
Resource Description Format (RDF)
\end_layout

\begin_layout Standard
RDF is a simple language for describing annotations (facts) about resources.
 It is the most basic ontology language.
 The triples that it uses as basic construct map to first order logic as
 grounded atomic formulas, and blank nodes map to existential variables.
\end_layout

\begin_layout Standard
The basic RDF block is the 
\series bold
RDF statement
\series default
 which is a triple representing a binary relationship between two resources
 or between a resource and a literal.
 The syntax is:
\end_layout

\begin_layout Standard
\align center
<subject predicate object>
\end_layout

\begin_layout Standard
where:
\end_layout

\begin_layout Itemize
subject S has value object O for predicate P.
\end_layout

\begin_layout Itemize
subject and predicate are resources and must be URIs.
\end_layout

\begin_layout Itemize
object can be a resource (URI) or a literal (constant value).
\end_layout

\begin_layout Standard
As can be inferred from this, resources are identified by URIs, which are
 global identifiers.
 A URI is composed of a URL and a URN:
\end_layout

\begin_layout Itemize
URN is the Universal Resource Name: id
\end_layout

\begin_layout Itemize
URL is the Universal Resource Location: where it is
\end_layout

\begin_layout Standard
Many times, we omit the URL for simplicity, and refer to the URI as :URN.
\end_layout

\begin_layout Standard
A 
\series bold
blank node
\series default
 is a resource without a URL (i.e., _).
\end_layout

\begin_layout Standard
Literals are atomic values such as strings, dates or numbers.
\end_layout

\begin_layout Standard
We can thus define a 
\series bold
RDF graph 
\series default
(or semantic graph) as a set of these RDS statements.
\end_layout

\begin_layout Standard
To query RDF graph, SPARQL is the de facto language (also for it variants
 and extensiosn).
 It is inspired by SQL but oriented to express graph operations.
\end_layout

\begin_layout Example
A RDF graph example.
\end_layout

\begin_layout Example
The graph:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado5.png

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Can be represented as an RDF like this:
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

(:Dupond :Leads :CSDept)
\end_layout

\begin_layout Plain Layout

(:Dupond :TeachedIn :UE111)
\end_layout

\begin_layout Plain Layout

(:Dupond :TeachesTo :Pierre)
\end_layout

\begin_layout Plain Layout

(:Pierre :EnrolledIn :CSDept)
\end_layout

\begin_layout Plain Layout

(:Pierre :RegisteredTo :UE111)
\end_layout

\begin_layout Plain Layout

(:UE111 :OfferedBy :CSDept)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Usually, RDF is serialized using the XML format.
 
\end_layout

\begin_layout Standard
The rdf URL is a namespace for RDF.
\end_layout

\begin_layout Standard
Other RDF syntaxes are turtle (which is human-readbale), N-triples or Notation
 3.
\end_layout

\begin_layout Subsection
RDF Modeling
\end_layout

\begin_layout Standard
RDF modeling is based on binary relationships, but n-ary relationships may
 be needed, so blank nodes were presented as a solution for this.
 A 
\series bold
blank node
\series default
 is a node without a URI, which cannot be referenced and can only be subjects
 or objects.
 Its semantics are not completely clear yet, but their 
\series bold
de facto use
\series default
 is as an identifier without a URI.
 The W3C position is this regard is to use blank nodes for incomplete data:
 unknown values or anonymized values.
 The de facto use is pragmatic, but good practices discourage their use:
 all resources should have a proper URI.
\end_layout

\begin_layout Example
Quoting
\end_layout

\begin_layout Example
The following use of a blank node:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado6.png

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Can be expressed as:
\end_layout

\begin_layout Example
:oscar :takes [:course :SDM]
\end_layout

\begin_layout Example
This is quoting, which is general is [property object], and the subject
 is the blank node.
\end_layout

\begin_layout Standard
Notice that we cannot express neither schema nor additional constraints,
 such as 'at least one' or 'at most three'.
\end_layout

\begin_layout Subsection
RDF-star
\end_layout

\begin_layout Standard
RDF-star in as RDF extension, more comapct and with a predice syntax for
 reification.
\end_layout

\begin_layout Example
The following is RDF-star:
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

@prefix: <http://www.example.org/>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

:employee38 :familyName 
\begin_inset Quotes eld
\end_inset

Smith
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout

:employee22 :claims << :employee38 :jobTitle 
\begin_inset Quotes eld
\end_inset

Assistant Designer
\begin_inset Quotes erd
\end_inset

 >>
\end_layout

\end_inset


\end_layout

\begin_layout Example
Here, we have what is called an 
\series bold
embedded triple
\series default
, and it models the 3-way relationship between (:emp22, :emp38, 
\begin_inset Quotes eld
\end_inset

Assistant Designer
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Standard

\series bold
SPARQL-star
\series default
 is an extension of SPARQL to query RDF-star graphs.
\end_layout

\begin_layout Section
RDF Schema (RDFS)
\end_layout

\begin_layout Standard
RDFS extends RDF to not only consider data instances, but also schema.
 In this case, we can define classes and relationships between them, using
 the same principles as for instances.
 It defines 
\emph on
rdfs:
\emph default
, a namespace for RDFS, in which a set of resources needed to express contraints
 is defined.
\end_layout

\begin_layout Standard
RDFS allows to specify the following constraints:
\end_layout

\begin_layout Itemize
Declare resources as instances of certain classes.
\end_layout

\begin_deeper
\begin_layout Itemize
:Oscar :type :lecturer
\end_layout

\end_deeper
\begin_layout Itemize
Inclusion statements between classes and between properties, which allow
 us to define 
\series bold
taxonomies
\series default
.
\end_layout

\begin_deeper
\begin_layout Itemize
:lecturer :subclassOf :human
\end_layout

\end_deeper
\begin_layout Itemize
Assert the class of a subject (or an object) of a property
\end_layout

\begin_deeper
\begin_layout Itemize
The predicate :parentOf must relate instnaces of the class :human.
 Therefore, any subject/object of a triple where :parentOf is the predicate
 is atumatically asserted as :human.
\end_layout

\end_deeper
\begin_layout Subsection
RDFS statements at the schema level
\end_layout

\begin_layout Itemize
Instances:
\end_layout

\begin_deeper
\begin_layout Itemize
:Oscar rdf:type :Lecturer
\end_layout

\end_deeper
\begin_layout Itemize
Taxonomies:
\end_layout

\begin_deeper
\begin_layout Itemize
Classes: :Lecturer rdfs:subclassOf :Human
\end_layout

\begin_layout Itemize
Relationships: :ResponsibleFor rdfs:subpropertyOf :Lecutres
\end_layout

\end_deeper
\begin_layout Itemize
Domain and Range:
\end_layout

\begin_deeper
\begin_layout Itemize
:Lectures rdfs:domain :Human
\end_layout

\begin_layout Itemize
:Lectures rdfs:range :Course
\end_layout

\end_deeper
\begin_layout Subsection
RDFS Core Classes
\end_layout

\begin_layout Itemize

\series bold
rdfs:Resource
\series default
: the class of all resources.
 Everything is a resource.
\end_layout

\begin_layout Itemize

\series bold
rdfs:Class
\series default
: the class of all classes.
\end_layout

\begin_layout Itemize

\series bold
rdfs:Literal
\series default
: the class of all literals.
\end_layout

\begin_layout Itemize

\series bold
rdf:Property
\series default
: the class of all properties.
\end_layout

\begin_layout Itemize

\series bold
rdf:Statement
\series default
: the class of all statements.
\end_layout

\begin_layout Standard
These core classes add another level of abstraction above the metadata layer.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado7.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Three layers of abtraction of RDFS from 
\begin_inset CommandInset citation
LatexCommand cite
key "Romero2023"
literal "false"

\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:Three-layers-of"

\end_inset

 The red arrows are 
\emph on
rdf:type
\emph default
 relationships.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
RDFS Inference
\end_layout

\begin_layout Standard
In RDFS we can infer new instances (knowledge) from the statements created
 by the users.
 It is based on 
\series bold
rule-based reasoning
\series default
 and there are two kinds of inference:
\end_layout

\begin_layout Itemize

\series bold
Core type inference
\series default
: it infers the type with regards to the core classes of an asserted resource
 R.
\end_layout

\begin_layout Itemize

\series bold
Domain-specific inference
\series default
: it can be:
\end_layout

\begin_deeper
\begin_layout Itemize
Inclusion dependencies:
\end_layout

\begin_deeper
\begin_layout Itemize
If :A rdfs:subclassOf :B and :B rdfs:subclassOf :C then :A rdfs:subclassOf
 :C.
\end_layout

\end_deeper
\begin_layout Itemize
Type inference: it infers the type of an asserted resource R with respect
 to a user created class X.
\end_layout

\end_deeper
\begin_layout Subsection
RDFS Core Properties
\end_layout

\begin_layout Itemize

\series bold
rdf:type
\series default
: relates a resource to its class:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:oscar rdf:type :lecturer
\end_layout

\begin_layout Standard
The subject resource (:oscar) is declared to be an instance of the object
 class (:lecturer).
\end_layout

\begin_layout Itemize
The inferred knowledge is:
\end_layout

\begin_deeper
\begin_layout Itemize
Core type inference: the object is inferred as a Class:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:lecturer rdf:type rdfs:Class
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
rdfs:subClassOf
\series default
: relates a class to one of its superclasses:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:lecturer rdfs:subClassOf :human
\end_layout

\begin_layout Standard
\align center
:oscar rdf:type :lecturer
\end_layout

\begin_layout Standard
The subject and object are declared as classes and any instance of the subject
 is declared as an instance of the object.
\end_layout

\begin_layout Itemize
The inferred knowledge is:
\end_layout

\begin_deeper
\begin_layout Itemize
Core type inference: the subject and object are inferred as classes:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:lecturer rdf:type rdfs:Class
\end_layout

\begin_layout Standard
\align center
:human rdf:type rdfs:Class
\end_layout

\end_deeper
\begin_layout Itemize
Domain specific inference: inclusion dependency:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:oscar rdf:type :human
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
rdfs:subPropertyOf
\series default
: relates a property to one of its superproperties:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:responsibleFor rdfs:subPropertyOf :lectures
\end_layout

\begin_layout Standard
\align center
:oscar :responsibleFor :OD
\end_layout

\begin_layout Standard
The subject and object resources are declared to be properties and any subject,
 object related by subject predicate are automatically declared as to be
 related by the object predicate.
\end_layout

\begin_layout Itemize
The inferred knowledge is:
\end_layout

\begin_deeper
\begin_layout Itemize
Core type inference: the subject and object are inferred as properties:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:responsibleFor rdf:type rdf:Property
\end_layout

\begin_layout Standard
\align center
:lectures rdf:type rdf:Property
\end_layout

\end_deeper
\begin_layout Itemize
Domain specific inference: inclusion dependency:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:oscar :lectures :OD
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
rdfs:domain
\series default
: specifies the domain of a property:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:lectures rdf:domain :lecturer
\end_layout

\begin_layout Standard
\align center
:oscar :lectures :OD
\end_layout

\begin_layout Itemize
The inferred knowledge is:
\end_layout

\begin_deeper
\begin_layout Itemize
Core type inference: the subject is declared to be a property and the object
 is declared to be a class:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:lectures rdf:type rdf:Property
\end_layout

\begin_layout Standard
\align center
:lecturer rdf:type rdfs:Class
\end_layout

\end_deeper
\begin_layout Itemize
Domain specific inference: type inference:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:oscar rdf:type :lecturer
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
rdfs:range
\series default
: specifies the range of a property:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:lectures rdf:range :course
\end_layout

\begin_layout Standard
\align center
:oscar :lectures :OD
\end_layout

\begin_layout Itemize
The inferred knowledge is:
\end_layout

\begin_deeper
\begin_layout Itemize
Core type inference: the subject is declared to be a proeprty and the object
 is declared to be a class:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:lectures rdf:type rdf:Property
\end_layout

\begin_layout Standard
\align center
:course rdf:type rdfs:Class
\end_layout

\end_deeper
\begin_layout Itemize
Domain specific inference: type inference:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
:OD rdf:type :course
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Example
An RDFS graph.
\end_layout

\begin_layout Example
Consider the graph that we have used many times already:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename simplegraph.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Create a correct RDFS graph capturing as much constraints as possible from
 it.
 What triples may you infer from the asserted RDFS graph?
\end_layout

\begin_layout Example
The RDFS graph can be the following:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename rdfs.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
And the instantiation of the data:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="8cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Instantiation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inference
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:clintEastwood :hasRole :bill
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:clintEastwood rdf:type Actor
\end_layout

\begin_layout Plain Layout
:bill rdf:type :role
\end_layout

\begin_layout Plain Layout
:clintEastwood rdf:type Person
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:bill :inMovie :Unforgiven
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:bill rdf:type :role
\end_layout

\begin_layout Plain Layout
:Unforgiven rdf:type :Movie
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:Ungorgiven :title 'Unforgiven'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:Unforgiven rdf:type :Movie
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:clintEastwood :name 'Clint Eastwood'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:clintEastwood rdf:type :Person
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:clintEastwood :gender :male
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:clintEastwood rdf:type :Person
\end_layout

\begin_layout Plain Layout
:male rdf:type :genderClass
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:bill :roleName 'Bill'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:bill rdf:type :role
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:bill :red 'IMDB'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:bill rdf:type :role
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:annaLevine :hasRole :delilah
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:annaLevine rdf:type :Actor
\end_layout

\begin_layout Plain Layout
:delilah rdf:type :role
\end_layout

\begin_layout Plain Layout
:annaLevine rdf:type :Person
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:delilah :inMovie :Unforgiven
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:delilah rdf:type :role
\end_layout

\begin_layout Plain Layout
:Unforgiven rdf:type :Movie
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:annaLevine :name 'Anna Levine'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:annaLevine rdf:type :Person
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:annaLevine :gender :female
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:annaLevine rdf:type :Person
\end_layout

\begin_layout Plain Layout
:female rdf:type :genderClass
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:delilah :roleName 'Delilah'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:delilah rdf:type :role
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:delilah :ref 'IMDB'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:delilah rdf:type :role
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:clintEastwood :directs :Unforgiven
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:clintEastwood rdf:type :Director
\end_layout

\begin_layout Plain Layout
:Unforgiven rdf:type :Movie
\end_layout

\begin_layout Plain Layout
:clintEastwood rdf:type Person
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
SPARQL
\end_layout

\begin_layout Standard
SPARQL Protocol And RDF Query Language (SPARQL) is the standard query language
 for RDF(S) graphs, being also a W3C recommendation and supporting RDFS
 and OWL under specific entailments.
\end_layout

\begin_layout Standard
SPARQL is based on navigational pattern matching, and simple RDF graphs
 are used as query patterns.
 The semantics applied are homomorphism semantics.
\end_layout

\begin_layout Example
A simple query:
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SELECT x, z
\end_layout

\begin_layout Plain Layout

WHERE
\end_layout

\begin_layout Plain Layout

	x Lectures y,
\end_layout

\begin_layout Plain Layout

	y TaughtIn z,
\end_layout

\begin_layout Plain Layout

	z rdf:type Faculty
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SPARQL has 4 basic forms that retrive either result sets or RDF graphs:
\end_layout

\begin_layout Itemize
SELECT: returns all, or a subset of, the variables bound in a query pattern
 match.
\end_layout

\begin_layout Itemize
CONSTRUCT: returns an RDF graph constructed by substituting variables in
 a set of triple templates.
\end_layout

\begin_layout Itemize
ASK: returns a boolean indicating whether a query pattern is matched or
 not.
\end_layout

\begin_layout Itemize
DESCRIBE: returns an RDF graph that describes the resources found.
\end_layout

\begin_layout Standard
A 
\series bold
SPARQL Endpoint
\series default
 is an endpoint accepting SPARQL queries and returning the results via HTTP.
\end_layout

\begin_layout Example
A more complete example:
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

PREFIX fib: <http://www.fib.edu/elements/>
\end_layout

\begin_layout Plain Layout

SELECT ?lecturer ?course
\end_layout

\begin_layout Plain Layout

WHERE
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		?lecturer fib:lectures ?course
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\begin_layout Example
This query is equivalent to: SELECT x,y WHERE x LECTURES y.
\end_layout

\begin_layout Standard
SPARQL allows property paths based on regular expressions.
\end_layout

\begin_layout Example
Take into account the following graph:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado8.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
And write the following queries, assuming no entailment regime:
\end_layout

\begin_layout Enumerate
Get the name of all actors that participated in Juno:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

PREFIX mov: <url>
\end_layout

\begin_layout Plain Layout

SELECT ?name
\end_layout

\begin_layout Plain Layout

WHERE
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		mov:juno mov:stars ?actor.
\end_layout

\begin_layout Plain Layout

		?actor mov:name ?name
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Get the name of all directors:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

PREFIX mov <url>
\end_layout

\begin_layout Plain Layout

SELECT ?name
\end_layout

\begin_layout Plain Layout

WHERE
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		?dir rdf:type :Director.
\end_layout

\begin_layout Plain Layout

		?dir mov:name ?name
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

UNION
\end_layout

\begin_layout Plain Layout

SELECT ?name
\end_layout

\begin_layout Plain Layout

WHERE
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		?dir mov:directs ?mov.
\end_layout

\begin_layout Plain Layout

		?dir mov:name ?name
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Get the name of all persons:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

PREFIX mov: <url>
\end_layout

\begin_layout Plain Layout

SELECT ?name
\end_layout

\begin_layout Plain Layout

WHERE
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		?person mov:name ?name
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Get the title of all movies:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

PREFIX mov: <url>
\end_layout

\begin_layout Plain Layout

SELECT ?title
\end_layout

\begin_layout Plain Layout

WHERE
\end_layout

\begin_layout Plain Layout

	{
\end_layout

\begin_layout Plain Layout

		?movie mov:title ?title.
\end_layout

\begin_layout Plain Layout

		?movie rdf:type ?movie
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsubsection
Entailment Regimes
\end_layout

\begin_layout Standard
The most basic entailment regime supported by SPARQL is 
\series bold
simple entailment
\series default
, in which graph patterns are evaluated by means of pattern matching under
 homomorphism semantics.
\end_layout

\begin_layout Standard
Nonetheless, more elaborate entailment relations have been developed, to
 retrieve solutions that are logical consequences of the axioms asserted.
 The most popular ones are RDFS entailment and OWL 2 RDF-Based Semantics
 entailment.
\end_layout

\begin_layout Subsection
RDFS Inference Rules
\end_layout

\begin_layout Standard
The RDFS entailment rules are presented in the following table:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="8cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If S contains
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Then S RDFS entails recognizing D:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
any IRI a in D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a 
\color red
rdf:type rdfs:Datatype
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a 
\color red
rdfs:domain
\color inherit
 x.
\end_layout

\begin_layout Plain Layout
y a z.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y 
\color red
rdf:type
\color inherit
 x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a 
\color red
rdfs:range
\color inherit
 x.
\end_layout

\begin_layout Plain Layout
y a z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z 
\color red
rdf:type
\color inherit
 x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs4a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x a y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdf:type rdfs:Resource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs4b
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x a y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y 
\color red
rdf:type rdfs:Resource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subPropertyOf
\color inherit
 y.
\end_layout

\begin_layout Plain Layout
y 
\color red
rdfs:subPropertyOf
\color inherit
 z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subPropertyOf
\color inherit
 z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdf:type
\color inherit
 
\color red
rdf:Property
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subPropertyOf
\color inherit
 x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a 
\color red
rdfs:subPropertyOf
\color inherit
 b.
\end_layout

\begin_layout Plain Layout
x a y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x b y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdf:type rdfs:Class
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 
\color red
rdfs:Resource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 y.
\end_layout

\begin_layout Plain Layout
z 
\color red
rdf:type
\color inherit
 x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z 
\color red
rdf:type
\color inherit
 y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdf:type rdfs:Class
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 y.
\end_layout

\begin_layout Plain Layout
y 
\color red
rdfs:subClassOf
\color inherit
 z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdf:type rdfs:ContainerMembershipProperty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subPropertyOf
\color inherit
 
\color red
rdfs:Member
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdf:type rdfs:Datatype
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 
\color red
rdfs:Literal
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
The RDFS Paradox
\end_layout

\begin_layout Standard
The Russel's Paradox is a theoretical paradox that arises within a naïve
 set theory, by considering the set of all sets that are not members of
 themselves.
 This paradox arises in RDFS.
 This means that the RDFS regime entailment is flawed, and the reason is
 that the RDFS core classes and properties are ill-defined.
 The problems are:
\end_layout

\begin_layout Itemize
rdfs:Class is an instance of itself.
 This allows the possibility of having inifinitely many layers of classes.
\end_layout

\begin_layout Itemize
rdfs:Resource is a superclass and an instance of rdfs:Class at the same
 time.
\end_layout

\begin_layout Itemize
rdfs:subClassOf, rdf:type, rdfs:Range and rdfs:Domain are both used to define
 the other RDFS primitives and the user metadata.
\end_layout

\begin_layout Standard
The SPARQL community rethought the RDFS metamodel to introduce 
\series bold
fix-point reasoning
\series default
, disallowing for infinite inference loops, and having elements organized
 in a strict order, i.e., an element cannot be an element and a set at the
 same time, and no element can be placed twice in a taxonomy at different
 levels.
 This gave birth to the 
\series bold
modified RDFS Entailment Regime
\series default
:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="15" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="8cm">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
If S contains
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Then S RDFS entails recognizing D:
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
any IRI a in D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a 
\color red
rdf:type rdfs:Datatype
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a 
\color red
rdfs:domain
\color inherit
 x.
\end_layout

\begin_layout Plain Layout
y a z.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y 
\color red
rdf:type
\color inherit
 x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a 
\color red
rdfs:range
\color inherit
 x.
\end_layout

\begin_layout Plain Layout
y a z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z 
\color red
rdf:type
\color inherit
 x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs4a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x a y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdf:type rdfs:Resource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs4b
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x a y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y 
\color red
rdf:type rdfs:Resource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subPropertyOf
\color inherit
 y.
\end_layout

\begin_layout Plain Layout
y 
\color red
rdfs:subPropertyOf
\color inherit
 z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subPropertyOf
\color inherit
 z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\xout on
\color teal
rdfs6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\xout on
\color teal
x rdf:type rdf:Property
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\xout on
\color teal
x rdfs:subPropertyOf x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
a 
\color red
rdfs:subPropertyOf
\color inherit
 b.
\end_layout

\begin_layout Plain Layout
x a y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x b y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\xout on
\color teal
rdfs8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\xout on
\color teal
x rdf:type rdfs:Class
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\xout on
\color teal
x rdfs:subClassOf rdfs:Resource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 y.
\end_layout

\begin_layout Plain Layout
z 
\color red
rdf:type
\color inherit
 x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
z 
\color red
rdf:type
\color inherit
 y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\xout on
\color teal
rdfs10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\xout on
\color teal
x rdf:type rdfs:Class
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\xout on
\color teal
x rdfs:subClassOf x
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 y.
\end_layout

\begin_layout Plain Layout
y 
\color red
rdfs:subClassOf
\color inherit
 z
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 z
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\xout on
\color teal
rdfs12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\xout on
\color teal
x rdf:type rdfs:ContainerMembershipProperty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\xout on
\color teal
x rdfs:subPropertyOf rdfs:Member
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
rdfs13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdf:type rdfs:Datatype
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x 
\color red
rdfs:subClassOf
\color inherit
 
\color red
rdfs:Literal
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Ontology Languages: Description Logics
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
A 
\series bold
ontology
\series default
 is a formal description of a domain in terms of the concepts and roles
 or properties between them.
 More precisely, it is a controlled vocabulary or schema, usually called
 the 
\series bold
TBOX
\series default
, with aligned instances, or 
\series bold
ABOX
\series default
.
\end_layout

\begin_layout Definition
The TBOX and ABOX assertions are described with formal semantics and, based
 on its formal semantics, it defines inference rules, based on some kind
 of reasoning.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that RDF graphs are not ontologies and that RDFS are ontologies only
 if we take care of making them to be, by following the good practices.
 OWL graphs (we will see them later) are forced to be ontologies.
\end_layout

\begin_layout Subsection
Logic Based Ontology Languages
\end_layout

\begin_layout Standard
First Order Logic (FOL) is suitable for knowledge representation, since
 classes can be represented as unary predicates, properties/relationship
 as binary predicates and constraints as logical formulas using the predicates.
\end_layout

\begin_layout Standard
Nonetheless, we must take into consideration of undecidability problem:
 there is no algorithm that determines if a FOL formula implies another.
 Therefore, we have to work with decidable fragments of FOL:
\end_layout

\begin_layout Itemize

\series bold
Description logics
\series default
: binary predicates with bounded number of variables.
\end_layout

\begin_layout Itemize

\series bold
Datalog
\series default
: Horn-clauses.
\end_layout

\begin_layout Standard
The characteristics of these are summarized in the following table:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Datalog
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description Logics
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Focus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Instances
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Knowledge
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Approach
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Centralized
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Decentralized
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reasoning
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Closed-World Assumption
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Open-World Assumption
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unique name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unique name assumption
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Non-unique name assumption
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The open-world assumption implies that everything can be true, unless the
 opposite is explicitly indicated.
\end_layout

\begin_layout Subsection
TBOX
\end_layout

\begin_layout Standard
A TBOX is characterized by a set of constructs for building complex concepts
 and roles from atomic ones.
\end_layout

\begin_layout Itemize

\series bold
Concepts
\series default
 correspond to classes.
\end_layout

\begin_layout Itemize

\series bold
Roles
\series default
 correspond to relationships.
\end_layout

\begin_layout Standard
Then, the TBOX defines the terminology of the domain, with formal semantics
 given in terms of interpretations:
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
An 
\series bold
interpretation
\series default
 
\begin_inset Formula $\mathcal{I}=\left(\Delta^{\mathcal{I}},\cdot^{\mathcal{I}}\right)$
\end_inset

 consists of a nonempty set 
\begin_inset Formula $\Delta^{\mathcal{I}}$
\end_inset

, the 
\series bold
domain
\series default
 of 
\begin_inset Formula $\mathcal{I}$
\end_inset

, and an 
\series bold
interpretation function
\series default
 
\begin_inset Formula $\cdot^{\mathcal{I}}$
\end_inset

, which maps:
\end_layout

\begin_deeper
\begin_layout Itemize
Each individual, i.e., each element in the real world that we want to represent,
 
\begin_inset Formula $a$
\end_inset

 to an element 
\begin_inset Formula $a^{\mathcal{I}}\in\Delta^{\mathcal{I}}$
\end_inset

.
\end_layout

\begin_layout Itemize
Each atomic concept 
\begin_inset Formula $A$
\end_inset

 to a subset 
\begin_inset Formula $A^{\mathcal{I}}\subset\Delta^{\mathcal{I}}$
\end_inset

.
\end_layout

\begin_layout Itemize
Each atomic role 
\begin_inset Formula $P$
\end_inset

 to a subset 
\begin_inset Formula $P^{\mathcal{I}}\subset\Delta^{\mathcal{I}}\times\Delta^{\mathcal{I}}$
\end_inset

.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
With these basic pieces, we can construct more complex concepts:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Construct
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Semantics
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Example
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
atomic concept
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $A^{\mathcal{I}}\subset\Delta^{\mathcal{I}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Doctor
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
atomic role
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P^{\mathcal{I}}\subset\Delta^{\mathcal{I}}\times\Delta^{\mathcal{I}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hasChild
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
atomic negation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\lnot A$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Delta^{\mathcal{I}}\setminus A^{\mathcal{I}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\lnot$
\end_inset

Doctor
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
conjunction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C\sqcap D$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C^{\mathcal{I}}\cap D^{\mathcal{I}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Human
\begin_inset Formula $\sqcap$
\end_inset

Male
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
unqualified existence restriction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\exists R$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a|\exists b:\left(a,b\right)\in R^{\mathcal{I}}\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\exists$
\end_inset

hasChild
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
value restriction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\forall R.C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a|\forall b,\left(a,b\right)\in R^{\mathcal{I}}\implies b\in C^{\mathcal{I}}\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\forall$
\end_inset

hasChild.Male
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bottom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\perp$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\emptyset$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In this table, 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 denote arbitrary concepts, i.e., a combination of atomic concepts through
 appropriate constructs, and 
\begin_inset Formula $R$
\end_inset

 an arbitrary role, i.e., a combination of atomic roles through appropriate
 constructs.
\end_layout

\begin_layout Standard
The combination of these constructrs form the basic language 
\begin_inset Formula $\mathcal{AL}$
\end_inset

 of the family of 
\begin_inset Formula $\mathcal{AL}$
\end_inset

 languages.
 However, this can be extended, adding new constructs:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Construct
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{AL}\cdot$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Semantics
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Example
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
disjunction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{U}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C\sqcup D$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C^{\mathcal{I}}\cup D^{\mathcal{I}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(Human\sqcap Doctor\right)\sqcup\left(Human\sqcap\left(\lnot Patient\right)\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
top
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\intercal$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Delta^{\mathcal{I}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
qualified existence restriction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{E}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\exists R.C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a|\exists b:\left(a,b\right)\in R^{\mathcal{I}}\land b\in C^{\mathcal{I}}\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\exists$
\end_inset

Treats.Doctor
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
full negation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{C}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\lnot C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\Delta^{\mathcal{I}}\setminus C^{\mathcal{I}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\lnot\left(\exists Treats.Doctor\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
number restrictions
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{N}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(\geq k\ R\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a|\#\left\{ b:\left(a,b\right)\in R^{\mathcal{I}}\right\} \geq k\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\geq5$
\end_inset

 Treats
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(\leq k\ R\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a|\#\left\{ b:\left(a,b\right)\in R^{\mathcal{I}}\right\} \leq k\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\leq5$
\end_inset

 Treats
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
qualified number restriction
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{Q}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(\geq k\ R.C\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a|\#\left\{ b:\left(a,b\right)\in R^{\mathcal{I}}\land b\in C^{\mathcal{I}}\right\} \geq k\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\geq5$
\end_inset

 Treats.
\begin_inset Formula $\left(Doctor\sqcap Male\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(\leq k\ R.C\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a|\#\left\{ b:\left(a,b\right)\in R^{\mathcal{I}}\land b\in C^{\mathcal{I}}\right\} \leq k\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\leq5$
\end_inset

 Treats.
\begin_inset Formula $\left(Doctor\sqcap Female\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inverse role
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{I}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R^{-}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ \left(b,a\right)|\left(a,b\right)\in R^{\mathcal{I}}\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Treats
\begin_inset Formula $^{-}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
role closure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $reg$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R^{*}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(R^{\mathcal{I}}\right)^{*}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(Treats\right)^{*}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Example
What is the meaning of these axioms:
\end_layout

\begin_layout Itemize
Disjunction: 
\begin_inset Formula 
\[
\forall hasChild.\left(Doctor\sqcup Lawyer\right)
\]

\end_inset

 Formally:
\begin_inset Formula 
\[
\left\{ a|\forall b:\left(a,b\right)\in hasChild^{\mathcal{I}}\implies b\in Doctor^{\mathcal{I}}\lor b\in Lawyer^{\mathcal{I}}\right\} 
\]

\end_inset

 Natural language: all entities such that all their childs are a doctor
 or a lawyer.
\end_layout

\begin_layout Itemize
Qualified existencial restriction:
\begin_inset Formula 
\[
\exists hasChild.Doctor
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Formally:
\begin_inset Formula 
\[
\left\{ a|\exists b:\left(a,b\right)\in hasChild^{\mathcal{I}}\land b\in Doctor^{\mathcal{I}}\right\} 
\]

\end_inset

 Natural language: all entities that has a child who is a doctor.
\end_layout

\end_deeper
\begin_layout Itemize
Full negation:
\begin_inset Formula 
\[
\lnot\left(Doctor\sqcup Lawyer\right)
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Formally:
\begin_inset Formula 
\[
\Delta^{\mathcal{I}}\setminus\left(Doctor^{\mathcal{I}}\cup Lawyer^{\mathcal{I}}\right)
\]

\end_inset

 Natural language: all entities that not a doctor nor a lawyer.
\end_layout

\end_deeper
\begin_layout Itemize
Number restrictions:
\begin_inset Formula 
\[
\left(\ge2\ hasChild\right)\sqcap\left(\le1\ sibling\right)
\]

\end_inset

 Formally:
\begin_inset Formula 
\[
\left\{ a|\#\left\{ b:\left(a,b\right)\in hasChild^{\mathcal{I}}\right\} \geq2\land\#\left\{ c:\left(a,c\right)\in siblings^{\mathcal{I}}\right\} \le1\right\} 
\]

\end_inset

 Natural language: all entities that have at least two childs and at most
 one sibling.
\end_layout

\begin_layout Itemize
Qualified number restrictions:
\begin_inset Formula 
\[
\left(\ge2\ hasChild.Doctor\right)
\]

\end_inset

 Formally:
\begin_inset Formula 
\[
\left\{ a|\#\left\{ b:\left(a,b\right)\in hasChild^{\mathcal{I}}\land b\in Doctor^{I}\right\} \geq2\right\} 
\]

\end_inset

 Natural language: all entities that have at least two childs that are doctors.
\end_layout

\begin_layout Itemize
Inverse role:
\begin_inset Formula 
\[
\forall hasChild^{-}.Doctor
\]

\end_inset

 Formally:
\begin_inset Formula 
\[
\left\{ a|\forall b:\left(b,a\right)\in hasChild^{\mathcal{I}}\implies b\in Doctor^{\mathcal{I}}\right\} 
\]

\end_inset

 Natural language: all entities that are childs of doctors.
\end_layout

\begin_layout Itemize
Reflexive-transitive role closure:
\begin_inset Formula 
\[
\exists hasChild.Doctor
\]

\end_inset

 Formally:
\begin_inset Formula 
\[
\left\{ a|\exists b:\left(a,b\right)\in\left(hasChild^{\mathcal{I}}\right)^{*}\land b\in Doctor^{\mathcal{I}}\right\} 
\]

\end_inset

 Natural language: all entities that are ascendent of some doctor.
\end_layout

\begin_layout Standard
A Description Logics TBOX only includes terminological axioms of the following
 form:
\end_layout

\begin_layout Enumerate

\series bold
Inclusion
\series default
:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $C_{1}\sqsubseteq C_{2}$
\end_inset

 is satisfied by 
\begin_inset Formula $\mathcal{I}$
\end_inset

 if 
\begin_inset Formula $C_{1}^{\mathcal{I}}\subseteq C_{2}^{\mathcal{I}}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $R_{1}\sqsubseteq R_{2}$
\end_inset

 is satisfied by 
\begin_inset Formula $\mathcal{I}$
\end_inset

 if 
\begin_inset Formula $R_{1}^{\mathcal{I}}\subseteq R_{2}^{\mathcal{I}}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Equivalence
\series default
:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $C_{1}\sqsubseteq C_{2},C_{2}\sqsubseteq C_{1}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Example
A TBOX example
\end_layout

\begin_layout Example
The following axioms define a TBOX:
\begin_inset Formula 
\begin{align*}
Woman\equiv & Person\sqcap Female\\
Man\equiv & Person\sqcap\lnot Woman\\
Mother\equiv & Woman\sqcap\exists hasChild.Person\\
Father\equiv & Man\sqcap\exists hasChild.Person\\
Parent\equiv & Father\sqcup Mother\\
Grandmother\equiv & Mother\sqcap\exists hasChild.Parent\\
MotherWithManyChildren\equiv & Mother\sqcap\geq3\ hasChild\\
MotherWithoutDaughter\equiv & Mother\sqcap\forall hasChild.\lnot Woman\\
Wife\equiv & Woman\sqcap\exists hasHusband.Man
\end{align*}

\end_inset


\end_layout

\begin_layout Subsection
ABOX
\end_layout

\begin_layout Standard
The ABOX defines the instances in terms of the terminological axioms defined
 in the TBOX, by using concept (
\begin_inset Formula $Student\left(Pere\right)$
\end_inset

) and role (
\begin_inset Formula $Teaches\left(Oscar,Pere\right)$
\end_inset

) assertions.
\end_layout

\begin_layout Example
A knowledge base (TBOX+ABOX)
\end_layout

\begin_layout Example
The TBOX assertions are the following:
\end_layout

\begin_layout Itemize
Inclusion assertions on concepts:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\begin{align*}
Father\equiv & Human\sqcap Male\sqcap\exists hasChild\\
HappyFather\sqsubseteq & Father\sqcap\forall hasChild.\left(Doctor\sqcup Lawyer\sqcup HappyPerson\right)\\
HappyAnc\sqsubseteq & \forall descendant.HappyFather\\
Teacher\sqsubseteq & \lnot Doctor\sqcap\lnot Lawyer
\end{align*}

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Inclusion assertions on roles:
\begin_inset Formula 
\begin{align*}
hasChild\sqsubseteq & descendant\\
hasFather\sqsubseteq & hasChild^{-}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
The ABOX membership assertions are:
\begin_inset Formula 
\[
Teacher\left(mary\right)
\]

\end_inset


\begin_inset Formula 
\[
hasFather\left(mary,john\right)
\]

\end_inset


\begin_inset Formula 
\[
HappyAnc\left(john\right)
\]

\end_inset


\end_layout

\begin_layout Example
The following UML diagram
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado9.png

\end_inset


\end_layout

\end_deeper
\begin_layout Example
can be represented as the TBOX:
\end_layout

\begin_layout Example
\begin_inset Formula 
\begin{align*}
\exists hasFather\sqsubseteq & Person\\
\exists hasFather^{-}\sqsubseteq & Person\\
Person\sqsubseteq & \exists hasFather
\end{align*}

\end_inset


\end_layout

\begin_layout Subsection
Models of a Description Logics Ontology
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
A 
\series bold
model
\series default
 of a knowledge base 
\begin_inset Formula $\mathcal{O}=\left\langle \mathcal{T},\mathcal{A}\right\rangle $
\end_inset

 is an interpretation 
\begin_inset Formula $\mathcal{I}$
\end_inset

 that satisfies all assertions in 
\begin_inset Formula $\mathcal{T}$
\end_inset

 and all assertions in 
\begin_inset Formula $\mathcal{A}$
\end_inset

.
\end_layout

\begin_layout Definition
If there is a model for 
\begin_inset Formula $\mathcal{O}$
\end_inset

, then it is 
\series bold
satisfiable
\series default
.
\end_layout

\begin_layout Definition
\begin_inset Formula $\mathcal{O}$
\end_inset

 
\series bold
logically implies
\series default
 an assertion 
\begin_inset Formula $\alpha$
\end_inset

, written 
\begin_inset Formula $\mathcal{O}\models\alpha$
\end_inset

 if 
\begin_inset Formula $\alpha$
\end_inset

 is satisfied by all models of 
\begin_inset Formula $\mathcal{O}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Satisfiability looks for contrasictions in the asserted axioms.
 Without negations, everything is satisfiable, and TBOX axioms are just
 used to infer knowledge for the asserted elements.
 This is the case of RDFS, and in case of an error, the knowledge base will
 simply infer wrong knowledge, but no error nor alert will be rased.
\end_layout

\begin_layout Standard
Including negation, we can identify mistakes in the ABOX, since such interpretat
ions will not be a model for that ontology.
\end_layout

\begin_layout Example
Is the following interpretation a model? Can you think of an interpretation
 that is a model?
\end_layout

\begin_layout Example
The TBOX is:
\begin_inset Formula 
\begin{align*}
\exists Teaches\sqsubseteq & Teacher\\
\exists Teaches^{-}\sqsubseteq & Course\\
Teacher\sqsubseteq & \lnot Course
\end{align*}

\end_inset

 And the ABOX is:
\begin_inset Formula 
\[
Teaches\left(x,x\right).
\]

\end_inset

 It is not a model, because 
\begin_inset Formula 
\[
Teaches\left(x,x\right)\overset{\exists Teaches\sqsubseteq Teacher}{\models}Teacher\left(x\right)\overset{Teacher\sqsubseteq\lnot Course}{\models}\lnot Course\left(x\right)
\]

\end_inset

 and
\begin_inset Formula 
\[
Teaches\left(x\right)\overset{\exists Teaches^{-}\sqsubseteq Course}{\models}Course\left(x\right),
\]

\end_inset

 and both expressions cannot evaluate to true at the same time.
\end_layout

\begin_layout Example
To make a model, we can change the ABOX to be
\begin_inset Formula 
\[
Teaches\left(x,y\right),
\]

\end_inset

 in which case all assertions from the TBOX and the ABOX can be satisfied.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Description Logics Reasoning
\end_layout

\begin_layout Example
Consider the following TBOX and make all possible inferences:
\end_layout

\begin_layout Example
\begin_inset Formula 
\begin{align*}
Researcher\sqsubseteq & \lnot Professor\\
Researcher\sqsubseteq & \lnot Lecturer\\
\exists TeachesTo^{-}\sqsubseteq & Student\\
Student\sqcap\lnot Undergrad\sqsubseteq & GraduateStudent\\
\exists TeachesTo.Undergrad\sqsubseteq & Professor\sqcup Lecturer
\end{align*}

\end_inset


\end_layout

\begin_layout Example
The TBOX inferences are:
\begin_inset Formula 
\begin{align*}
Researcher\sqsubseteq & \exists TeachesTo.GraduateStudent
\end{align*}

\end_inset


\end_layout

\begin_layout Example
Do the same with this ABOX:
\begin_inset Formula 
\begin{align*}
TeachesTo\left(dupond,pierre\right)\\
\lnot GraduateStudent\left(pierre\right)\\
\lnot Professor\left(dupond\right)
\end{align*}

\end_inset

 The ontology inferences are:
\begin_inset Formula 
\begin{align*}
Undergrad\left(pierre\right)\\
Lecturer\left(dupond\right)
\end{align*}

\end_inset

 
\end_layout

\begin_layout Subsubsection
TBOX Reasoning
\end_layout

\begin_layout Itemize

\series bold
Concept Satisfiability
\series default
: a concept 
\begin_inset Formula $C$
\end_inset

 is satisfiable with respect to the TBOX 
\begin_inset Formula $\mathcal{T}$
\end_inset

 if there is a model 
\begin_inset Formula $\mathcal{I}$
\end_inset

 of 
\begin_inset Formula $\mathcal{T}$
\end_inset

 such that 
\begin_inset Formula $C^{\mathcal{I}}$
\end_inset

 is not empty, i.e., 
\begin_inset Formula $T\cancel{\models}C\equiv\perp$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Subsumption
\series default
: a concept 
\begin_inset Formula $C_{1}$
\end_inset

 is subsumed by another concept 
\begin_inset Formula $C_{2}$
\end_inset

 with respect to the TBOX 
\begin_inset Formula $\mathcal{T}$
\end_inset

 if, for every model 
\begin_inset Formula $\mathcal{I}$
\end_inset

 of 
\begin_inset Formula $\mathcal{T}$
\end_inset

, we have 
\begin_inset Formula $C_{1}^{\mathcal{I}}\subseteq C_{2}^{\mathcal{I}}$
\end_inset

, i.e., 
\begin_inset Formula $\mathcal{T}\models C_{1}\sqsubseteq C_{2}$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Equivalence
\series default
: 
\begin_inset Formula $C_{1}$
\end_inset

 and 
\begin_inset Formula $C_{2}$
\end_inset

 are equivalent with respect to 
\begin_inset Formula $\mathcal{T}$
\end_inset

 if, for every model 
\begin_inset Formula $\mathcal{I}$
\end_inset

 of 
\begin_inset Formula $\mathcal{T}$
\end_inset

 we have 
\begin_inset Formula $C_{1}^{\mathcal{I}}=C_{2}^{\mathcal{I}}$
\end_inset

, i.e., 
\begin_inset Formula $\mathcal{T}\models C_{1}\equiv C_{2}$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Disjointness
\series default
: 
\begin_inset Formula $C_{1}$
\end_inset

 and 
\begin_inset Formula $C_{2}$
\end_inset

 are disjoint with respect to 
\begin_inset Formula $\mathcal{T}$
\end_inset

 if, for every model 
\begin_inset Formula $\mathcal{I}$
\end_inset

 of 
\begin_inset Formula $\mathcal{T}$
\end_inset

, we have 
\begin_inset Formula $C_{1}^{\mathcal{I}}\cap C_{2}^{\mathcal{I}}=\emptyset$
\end_inset

, i.e., 
\begin_inset Formula $\mathcal{T}\models C_{1}\sqcap C_{2}\equiv\perp$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Functionality implication
\series default
: a functionality assertion, 
\begin_inset Formula $\left(funct\ R\right)$
\end_inset

, is logically implied by 
\begin_inset Formula $\mathcal{T}$
\end_inset

 if, for every model 
\begin_inset Formula $\mathcal{I}$
\end_inset

 of 
\begin_inset Formula $\mathcal{T},$
\end_inset

we have that 
\begin_inset Formula $\left(o,o_{1}\right)\in R^{\mathcal{I}}$
\end_inset

 and 
\begin_inset Formula $\left(o,o_{2}\right)\in R^{\mathcal{I}}$
\end_inset

 implies 
\begin_inset Formula $o_{1}=o_{2}$
\end_inset

, i.e., 
\begin_inset Formula $\mathcal{T}\models\left(funct\ R\right)$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Reasoning complexity
\end_layout

\begin_layout Standard
In the next table, the complexity for concept satisfiability for each of
 the logic families we have seen is shown:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Family
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Complexity
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{AL},\mathcal{ALN}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PTIME
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{ALU},\mathcal{ALUN}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NP-complete
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{ALE}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
coNP-complete
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{ALC},\mathcal{ALCN},\mathcal{ALCI},\mathcal{ALCQI}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PSPACE-complete
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
It can be observed that there are two sources of complexity:
\end_layout

\begin_layout Itemize
The union 
\begin_inset Formula $\left(\mathcal{U}\right)$
\end_inset

 is of type NP.
\end_layout

\begin_layout Itemize
The existential quantification 
\begin_inset Formula $\left(\mathcal{E}\right)$
\end_inset

 is of type coNP.
\end_layout

\begin_layout Standard
When they are combined, the complexity jumps to PSPACE.
\end_layout

\begin_layout Standard
Note that number restrictions 
\begin_inset Formula $\left(\mathcal{N}\right)$
\end_inset

 do not add complexity.
\end_layout

\begin_layout Subsubsection
Ontology Reasoning
\end_layout

\begin_layout Standard
The problem of 
\series bold
ontology satisfiability
\series default
 consists of verifying whether an ontology is satisfiable or not, i.e., whether
 the ontology 
\begin_inset Formula $\mathcal{O}$
\end_inset

 admits at least one model.
\end_layout

\begin_layout Standard
The problem of 
\series bold
concept instance checking
\series default
 consists of verifying whether an individual 
\begin_inset Formula $c$
\end_inset

 is an instance of a concept 
\begin_inset Formula $C$
\end_inset

 in 
\begin_inset Formula $\mathcal{O}$
\end_inset

, i.e., whether 
\begin_inset Formula $\mathcal{O}\models C\left(c\right)$
\end_inset

 or not.
\end_layout

\begin_layout Standard
The problem of 
\series bold
role instance checking
\series default
 consists of verifying whther a pair 
\begin_inset Formula $\left(c_{1},c_{2}\right)$
\end_inset

 of individuals is an instance of a role 
\begin_inset Formula $R$
\end_inset

 in 
\begin_inset Formula $\mathcal{O}$
\end_inset

, i.e., whether 
\begin_inset Formula $\mathcal{O}\models R\left(c_{1},c_{2}\right)$
\end_inset

 or not.
\end_layout

\begin_layout Standard
The problem of 
\series bold
query answering
\series default
 consists of finding the certain answers:
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
The 
\series bold
certain answers
\series default
 to query 
\begin_inset Formula $q\left(x\right)$
\end_inset

 over 
\begin_inset Formula $\mathcal{O}=\left\langle \mathcal{T},\mathcal{A}\right\rangle $
\end_inset

, denoted 
\begin_inset Formula $cert\left(q,\mathcal{O}\right)$
\end_inset

 are the tuples 
\begin_inset Formula $c$
\end_inset

 of constants of 
\begin_inset Formula $\mathcal{A}$
\end_inset

 such that 
\begin_inset Formula $c\in q^{\mathcal{I}}$
\end_inset

, for every model 
\begin_inset Formula $\mathcal{I}$
\end_inset

 of 
\begin_inset Formula $\mathcal{O}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We need to bear in mind the 
\series bold
open-world assumption
\series default
: something evaluates to false only if it contradicts other information
 in the ontology.
\end_layout

\begin_layout Example
Open-world assumption illustrative example.
\end_layout

\begin_layout Example
Consider the following ABOX:
\begin_inset Formula 
\begin{align*}
hasSon\left(Iokaste,Oedipus\right)\\
hasSon\left(Iokaste,Polyneikes\right)\\
hasSon\left(Oedipus,Polyneikes\right)\\
hasSon\left(Polyneikes,Thersandros\right)\\
patricide\left(Oedipus\right)\\
\lnot patricide\left(Thersandros\right)
\end{align*}

\end_inset

 This is visually shown as:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename iokaste.png

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Consider the query:
\begin_inset Formula 
\[
Query\equiv\exists hasSon.\left(patricide\sqcap\exists hasSon.\lnot patricide\right)
\]

\end_inset

 Does 
\begin_inset Formula 
\[
ABOX\models Query\left(Iokaste\right)?
\]

\end_inset


\end_layout

\begin_layout Example
Yes!
\end_layout

\begin_layout Example
Since there is no information of whether 
\begin_inset Formula $patricide\left(Polyneikes\right)$
\end_inset

 is true or not, we need to evaluate all possibilities.
\end_layout

\begin_layout Example
If 
\begin_inset Formula $patricide\left(Polyneikes\right)$
\end_inset

 is true, then 
\begin_inset Formula $hasSon\left(Iokaste,Polyneikes\right)\land patricide\left(Polyneikes\right)\land hasSon\left(Polyneikes,Thersandros\right)\land\lnot patricide\left(Thersandros\right).$
\end_inset


\end_layout

\begin_layout Example
If 
\begin_inset Formula $patricide\left(Polyneikes\right)$
\end_inset

 is false, then 
\begin_inset Formula $hasSon\left(Iokaste,Oedipus\right)\land patricide\left(Oedipus\right)\land hasSon\left(Oedipus,Polyneikes\right)\land\lnot patricide\left(Thersandros\right).$
\end_inset


\end_layout

\begin_layout Subsubsection
Modeling with Description Logics
\end_layout

\begin_layout Standard
It is hard to build good ontologies using description logics, because the
 names of the classes are irrelevant, classes are overlapping by default
 and the domain and range definitions are axioms, not constraints.
 In addition, we need to cope with the open world assumption and the non-unique
 name assumption, i.e., the same concept might be instantiated with two different
 names or IDs in the knowledge base
\begin_inset Foot
status open

\begin_layout Plain Layout
Some families, such as DL-Lite family, assume the unique name assumption.
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Ontology Web Language (OWL)
\end_layout

\begin_layout Standard
OWL is a W3C recommendation, based on OIL and DAML, and using RDF and XML
 as the underlying representation.
 There were three languages in OWL 1.0: Lite, DL and Full; later, OWL 2.0
 eliminated OWL Lite and added three profiles, RL, QL and EL.
\end_layout

\begin_layout Subsection
OWL Axioms
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OWL axiom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DL syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Example
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
subClassOf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C_{1}\sqsubseteq C_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Human
\begin_inset Formula $\sqsubseteq$
\end_inset

Animal
\begin_inset Formula $\sqcap$
\end_inset

Biped
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
equivalentClass
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C_{1}\equiv C_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Man
\begin_inset Formula $\equiv$
\end_inset

Human
\begin_inset Formula $\sqcap$
\end_inset

Male
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
disjointWith
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C_{1}\sqsubseteq\lnot C_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Man
\begin_inset Formula $\sqsubseteq\lnot$
\end_inset

Female
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sameIndividualAs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a_{1}\right\} \equiv\left\{ a_{2}\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ presBush\right\} \equiv\left\{ G.W.Bush\right\} $
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
differentFrom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a_{1}\right\} \sqsubseteq\lnot\left\{ a_{2}\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ john\right\} \sqsubseteq\lnot\left\{ peter\right\} $
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
subPropertyOf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P_{1}\sqsubseteq P_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hasDaughter
\begin_inset Formula $\sqsubseteq$
\end_inset

hasChild
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
equivalentProperty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P_{1}\equiv P_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hasCost
\begin_inset Formula $\equiv$
\end_inset

hasPrice
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inverseOf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P_{1}\equiv P_{2}^{-}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hasChild
\begin_inset Formula $\equiv$
\end_inset

hasParent
\begin_inset Formula $^{-}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
transitiveProperty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $P^{+}\sqsubseteq P$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ancestor
\begin_inset Formula $^{+}\sqsubseteq$
\end_inset

ancestor
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
functionalProperty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T\sqsubseteq\left(\leq1P\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $Person\sqsubseteq\left(\leq1\ hasFather\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
inverseFunctionalProperty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $T\sqsubseteq\left(\leq1P^{-}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $Citizen\sqsubseteq\left(\leq1\ hasSSN^{-}\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
OWL Constructs
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OWL construct
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DL syntax
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Example
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
intersectionOf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C_{1}\sqcap...\sqcap C_{n}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Human
\begin_inset Formula $\sqcap$
\end_inset

Male
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
unionOf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $C_{1}\sqcup...\sqcup C_{n}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Doctor
\begin_inset Formula $\sqcup$
\end_inset

Lawyer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
complementOf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\lnot C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\lnot$
\end_inset

Male
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
oneOf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ a_{1}\right\} \sqcup...\sqcup\left\{ a_{n}\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ john\right\} \sqcup\left\{ mary\right\} $
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
allValuesFrom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\forall P.C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\forall hasChild.Doctor$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
someValuesFrom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\exists P.C$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\exists hasChild.Lawyer$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
maxCardinality
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(\leq nP\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(\leq1\ hasChild\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minCardinality
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(\geq nP\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left(\geq2\ hasChild\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Constructs such as owl:someValuesFrom, owl:allValuesFrom, owl:minCardinality,
 owl:maxCardinality are expressed using blank nodes, together with owl:Restricti
on by means of reification.
\end_layout

\begin_layout Example
Defining :Department 
\begin_inset Formula $\sqsubseteq\forall$
\end_inset

:Leads.:Professor 
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

_:a rdfs:subClassOf owl:Restriction
\end_layout

\begin_layout Plain Layout

_:a owl:onProperty :Leads
\end_layout

\begin_layout Plain Layout

_:a owl:allValuesFrom :Professor
\end_layout

\begin_layout Plain Layout

:Department rdfs:subClassOf _:a
\end_layout

\end_inset


\end_layout

\begin_layout Example
Here:
\end_layout

\begin_deeper
\begin_layout Itemize
rdfs:subClassOf owl:Restriction indicate that _:a is a complex constraint
\end_layout

\begin_layout Itemize
owl:onProperty indicates the constrained property (:Leads in this case)
\end_layout

\begin_layout Itemize
owl:allValuesFrom denotes the qualified constraint or cardinality
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Defining :student 
\begin_inset Formula $\sqsubseteq\geq3$
\end_inset

:RegisteredTo and :student 
\begin_inset Formula $\sqsubseteq\leq6$
\end_inset

:RegisteredTo
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

_:a rdfs:subClassOf owl:Restriction
\end_layout

\begin_layout Plain Layout

_:a owl:onProperty :RegisteredTo
\end_layout

\begin_layout Plain Layout

_:a owl:minCardinality 3
\end_layout

\begin_layout Plain Layout

_:b rdfs:subClassOf owl:Restriction
\end_layout

\begin_layout Plain Layout

_:b owl:onProperty :RegisteredTo
\end_layout

\begin_layout Plain Layout

_:b owl:maxCardinality 6
\end_layout

\begin_layout Plain Layout

:Student rdfs:subClassOf _:a
\end_layout

\begin_layout Plain Layout

:Student rdfs:subClassOf _:b
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Defining 
\begin_inset Formula $C_{1}\sqsubseteq\exists P.C$
\end_inset


\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

_:a rdfs:subClassOf owl:Restriction
\end_layout

\begin_layout Plain Layout

_:a owl:onProperty :P
\end_layout

\begin_layout Plain Layout

_:a owl:someValuesFrom C
\end_layout

\begin_layout Plain Layout

C1 rdfs:subClassOf _:a
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example
Defining 
\begin_inset Formula $\exists:TeachesTo.:Undergrad\sqsubseteq:Professor\sqcup:Lecturer$
\end_inset


\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

_:a rdfs:subClassOf owl:Restriction
\end_layout

\begin_layout Plain Layout

_:a owl:onProperty :TeachesTo
\end_layout

\begin_layout Plain Layout

_:a owl:someValuesFrom :Undergrad
\end_layout

\begin_layout Plain Layout

_:b owl:unionOf (:Professor,:Lecturer)
\end_layout

\begin_layout Plain Layout

_:a rdfs:subClassOf _:b
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
OWL Implementation
\end_layout

\begin_layout Standard
OWL uses RDF syntax, i.e., URIs and literals that conform valid triplets.
 It reuses some URIs from RDFS, but the whole RDFS is not embedded in OWL.
 In addition, it adds new properties and classes based on description logics
 and defined at the OWL namespace.
\end_layout

\begin_layout Subsection
OWL 2.0 Profiles
\end_layout

\begin_layout Itemize
OWL 2 EL: based in EL++, suitable for knowledge bases with large numebr
 of properties and classes.
 The reasoning is polynomial with respect to the size of the TBOX.
\end_layout

\begin_layout Itemize
OWL 2 QL: based on DL-Lite, captures ER and UML expressive power.
 The reasoning is reducible to LOGSPACE.
\end_layout

\begin_layout Itemize
OWL 2 RL: based on description logic programs, provides scalable reasoning
 without sacrificing much expressivity.
 The reasoning is polynomial with respect to the size of the ontology.
\end_layout

\begin_layout Section
Graph-Based Virtual Data Integration
\end_layout

\begin_layout Standard

\series bold
Data Integration
\series default
 is an area of study within data management aiming at facilitating transparent
 acces to a variety of heterogeneous data sources.
 
\end_layout

\begin_layout Standard
There are two main ways to perform data integration:
\end_layout

\begin_layout Itemize
Physical data integration: in physical data integration, the data is integrated
 by explicit and real modification and movement of the data, storing the
 transformed data in an integrated database.
\end_layout

\begin_layout Itemize
Virtual data integration: in this case, the approach is to encapsulate the
 physical data with views, with these being those that are integrated and
 queried.
 Therefore, in virtual data integration, data remains at the origin, and
 it is provided to the system transparently by means of views.
\end_layout

\begin_layout Standard
Virtual Data Integration is suitable when data sources are not under our
 control, and the owners require a federation, when we do not want to move
 the data from where it resides, when data freshness is crucial (ETLs run
 from time to time and the period between updates is called the 
\series bold
update window
\series default
), and when we want to systematically trace all the data available within
 a company or organization (
\series bold
data provenance
\series default
).
\end_layout

\begin_layout Standard
There is consensus that graph-based solutions are the way to go for data
 integration and governance, because graph-based data models are richer
 than any other data model and can express any construct, with knowledge
 graphs preferred over property graphs because they facilitate linking TBOX/ABOX
 with little effort.
 In addition, they allow to represent all data integration constructs with
 the same formalism: target schema + source schema + mappings.
\end_layout

\begin_layout Standard
There are two main approaches to achieve data integration:
\end_layout

\begin_layout Itemize
Ontology-based data access: this is a monolithic approach, in which the
 TBOX is directly related to the sources via mappings.
\end_layout

\begin_layout Itemize
Ontology-mediated queries: this approach relies on the concept of 
\series bold
wrapper
\series default
, which is a view presenting the source data.
 Thus, it allows to select a subset of the data source to be exposed to
 the whole integration system, allowing for security and modularity, as
 well as pay-as-you-go data integration, i.e., building the integrated schema
 incrementally as new data sources arrive.
\end_layout

\begin_layout Subsection
Local-As-View (LAV) Integration - Ontology-Mediated Queries (OMQ)
\end_layout

\begin_layout Standard
OMQ us a family of systems performing graph-based data integration with
 LAV (and conceptually GAV is also possible).
 It is based on the well-known 
\series bold
wrapper-mediator architecture.
\end_layout

\begin_layout Standard
To make the querying rewriting feasible, they adopt several measures:
\end_layout

\begin_layout Itemize
Exact mappings (closed-world assumption).
\end_layout

\begin_layout Itemize
Very basic reasoning capabilities: only taxonomies and domain/range inference.
\end_layout

\begin_layout Subsubsection
Big Data Integration Ontology
\end_layout

\begin_layout Standard
The BDIO revisits the Data Integration framework and construcs an ontology
 as follows:
\end_layout

\begin_layout Itemize
It defines the 
\series bold
global level
\series default
, 
\begin_inset Formula $G$
\end_inset

, which is the integrated view of the data.
\end_layout

\begin_layout Itemize
It defines the 
\series bold
source levels
\series default
, 
\begin_inset Formula $S$
\end_inset

, which are views (wrappers) on the data sources.
\end_layout

\begin_layout Itemize
And it defines the 
\series bold
mappings
\series default
, 
\begin_inset Formula $M$
\end_inset

, which are the LAV mappings between 
\begin_inset Formula $G$
\end_inset

 and 
\begin_inset Formula $S$
\end_inset

.
\end_layout

\begin_layout Standard
A 
\series bold
wrapper
\series default
 represents a view on the source, and we can think of it as a named query
 over the source (a view).
\end_layout

\begin_layout Standard
Some typical assumptions made by wrappers are:
\end_layout

\begin_layout Itemize
They expose the source data in tabular format (1NF).
\end_layout

\begin_layout Itemize
A data source may generate several wrappers.
\end_layout

\begin_layout Itemize
Typically, new versions of data are considered new wrappers.
\end_layout

\begin_layout Example
A LAV Integration
\end_layout

\begin_layout Example
First, we define the global level, 
\begin_inset Formula $G$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename lav_0.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Now, we need to expose the sources by means of wrappers.
 For this, we automatically bootstrap the attributes projected by the wrappers.
\end_layout

\begin_layout Example
For instance, let's say our data comes from three sources, Q1, Q2 and Q3:
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Q1: ID and compute the lag ratio
\end_layout

\begin_layout Plain Layout

	db.getCollection('vod').aggregate([
\end_layout

\begin_layout Plain Layout

		{$project: {
\begin_inset Quotes eld
\end_inset

VoDMonitorId
\begin_inset Quotes erd
\end_inset

: true,
\end_layout

\begin_layout Plain Layout

					
\begin_inset Quotes eld
\end_inset

lagRatio
\begin_inset Quotes erd
\end_inset

: {$divide: [
\begin_inset Quotes eld
\end_inset

$waitTime
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

$watchTime
\begin_inset Quotes erd
\end_inset

]}
\end_layout

\begin_layout Plain Layout

					}
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	)]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Q2: All attributes for tweets in English.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Q3: association target app -> monitor, feedback gathering tool
\end_layout

\end_inset


\end_layout

\begin_layout Example
We end up with the following:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename lav_1.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Finally, we need to define the LAV mappings for the wrappers.
 A LAV mapping for a wrapper Q is defined as 
\begin_inset Formula $M=\left\langle G,S\right\rangle $
\end_inset

 where 
\begin_inset Formula $G$
\end_inset

 is a named graph and 
\begin_inset Formula $S$
\end_inset

 is a set of triples of the form:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
<x, owl:sameAs, y>
\end_layout

\end_deeper
\begin_layout Example
where <x, rdf:type, S:Attribute> and <y, rdf:type, G:Feature>.
\end_layout

\begin_layout Example
In our example, we can define the LAV mapping for the wrappers for source
 Q1:
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

-- First we define G, the named graph
\end_layout

\begin_layout Plain Layout

Q1 S:provides {
\end_layout

\begin_layout Plain Layout

				sup:InfoMonitor G:hasFeature sup:lagRatio .
\end_layout

\begin_layout Plain Layout

				sup:VoDMonitor sup:generatesQoS sup:InfoMonitor .
\end_layout

\begin_layout Plain Layout

				sup:VoDMonitor G:hasFeature sup:idMonitor
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

-- Now we define S, the 
\begin_inset Quotes eld
\end_inset

same as
\begin_inset Quotes erd
\end_inset

 triples
\end_layout

\begin_layout Plain Layout

q1:lagRatio owl:sameAs sup:lagRatio
\end_layout

\begin_layout Plain Layout

q1:VoDMonitorId owl:sameAs sup:idMonitor
\end_layout

\end_inset


\end_layout

\begin_layout Example
For source Q2:
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Q2 S:provides {
\end_layout

\begin_layout Plain Layout

				sup:FeedbackGatheringTool sup:generatesOpinion duv:UserFeedback .
\end_layout

\begin_layout Plain Layout

				sup:FeedbackGatheringTool G:hasFeature sup:idFGTool .
\end_layout

\begin_layout Plain Layout

				duv:UserFeedback G:hasFeature dct:description
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

q2:feedbackGatheringId owl:sameAs sup:idFGTool
\end_layout

\begin_layout Plain Layout

q2:tweet owl:sameAs dct:description
\end_layout

\end_inset


\end_layout

\begin_layout Example
And for source Q3:
\end_layout

\begin_layout Example
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Q3 S:provides {
\end_layout

\begin_layout Plain Layout

				sc:SoftwareApplication sup:hasMonitor sup:VoDMonitor .
\end_layout

\begin_layout Plain Layout

				sc:SoftwareApplication sup:hasFGTool sup:FeedbackGatheringTool .
\end_layout

\begin_layout Plain Layout

				sc:SoftwareApplication G:hasFeature sup:idSoftApp .
\end_layout

\begin_layout Plain Layout

				sup:VoDMonitor G:hasFeature sup:idMonitor .
\end_layout

\begin_layout Plain Layout

				sup:FeedbackGatheringTool G:hasFeature sup:idFGTool
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

q3:MonitorId owl:sameAs sup:idMonitor
\end_layout

\begin_layout Plain Layout

q3:TargetApp owl:sameAs sup:idSoftApp
\end_layout

\begin_layout Plain Layout

q3:FeedbackId owl:sameAs sup:idFGTool
\end_layout

\end_inset


\end_layout

\begin_layout Example
And we end up with the following integrated view of the data:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename lav_2.png
	scale 60

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Query Answering - Rewriting Algorithm
\end_layout

\begin_layout Standard
Any SPARQL query on the global graph must be rewritten as a query in terms
 of the wrappers, which provide the way to access the actual data.
\end_layout

\begin_layout Standard
For example, assume the following SPARQL query:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SELECT ?w, ?t WHERE
\end_layout

\begin_layout Plain Layout

	?t rdf:type sup:lagRatio .
 
\end_layout

\begin_layout Plain Layout

	?x G:hasFeature ?t .
\end_layout

\begin_layout Plain Layout

	?x rdf:type sup:InfoMonitor .
\end_layout

\begin_layout Plain Layout

	?y sup:generatedQoS ?x .
\end_layout

\begin_layout Plain Layout

	?y rdf:type sup:VoDMonitor .
\end_layout

\begin_layout Plain Layout

	?z sup:hasMonitor ?y .
\end_layout

\begin_layout Plain Layout

	?z rdf:type sc:SoftwareApp .
\end_layout

\begin_layout Plain Layout

	?z G:hasFeature ?w .
\end_layout

\begin_layout Plain Layout

	?w rdf:type sup:idSoftwareApp .
\end_layout

\begin_layout Plain Layout

	FILTER ?w = 
\begin_inset Quotes eld
\end_inset

SUPERSEDE
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We start from terminal features.
 In this case, sup:lagRatio which maps to q1:lagRatio:
\begin_inset Formula 
\[
\Pi_{t}\left(\rho_{q1:lagRatio\rightarrow t}\left(Q1\right)\right),
\]

\end_inset

 then, we go up the ontology, reaching sup:InfoMonitor.
 The query does not change at this point because this is schema information
 covered by Q1.
 We continue going up, until sup:VoDMonitor, and the query still remains
 the same.
 Now, we reach sc:SoftwareApplication, which is not covered by Q1, but by
 Q3.
 Therefore, we need to join them somehow.
 Q1 and Q3 share sup:idMonitor, so we join them using this attribute:
\begin_inset Formula 
\[
\Pi_{t}\left(\rho_{q1:lagRatio\rightarrow t}\left(\sigma_{q1:VoDMonitorId=q3:MonitorId}\left(Q1\times Q3\right)\right)\right),
\]

\end_inset

 we continue reading the query, reaching sup:idSoftwareApp, which is another
 feature that needs to be added to the query:
\begin_inset Formula 
\[
\Pi_{w,t}\left(\rho_{q1:lagRatio\rightarrow t}\rho_{q3:targetApp\rightarrow w}\left(\sigma_{q1:VoDMonitorId=q3:MonitorId}\left(Q1\times Q3\right)\right)\right),
\]

\end_inset

 finally, we have to apply the filter
\begin_inset Formula 
\[
\sigma_{w="SUPERSEDE"}\left(\Pi_{w,t}\left(\rho_{q1:lagRatio\rightarrow t}\rho_{q3:targetApp\rightarrow w}\left(\sigma_{q1:VoDMonitorId=q3:MonitorId}\left(Q1\times Q3\right)\right)\right)\right).
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Computational Complexity
\end_layout

\begin_layout Standard
This query rewriting algorithm is linear in the size of the subgraph of
 
\begin_inset Formula $G$
\end_inset

 to navigate, linear in the size of the wrappers mappings and exponential
 in the number of wrappers that may join.
 The good thing is that evidence shows that typically BigData sources have
 few join points and therefore the exponential complexity is affordable
 in real cases.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "upc"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
