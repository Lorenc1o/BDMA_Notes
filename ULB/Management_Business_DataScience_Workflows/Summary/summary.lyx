#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble

\end_preamble
\use_default_options true
\begin_modules
tcolorbox
customHeadersFooters
theorems-ams-bytype
theorems-sec-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, urlcolor=blue, citecolor=blue, pdfstartview={FitH}, unicode=true"
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\boxbgcolor #62a0ea
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 3cm
\headheight 2cm
\headsep 1cm
\footskip 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
INFOH417 - Database Systems Architecture
\end_layout

\begin_layout Date
Fall 2022
\end_layout

\begin_layout Author
Jose Antonio Lorencio Abril
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename 1200px-Université_libre_de_Bruxelles_(logo).svg.png
	scale 10

\end_inset


\end_layout

\begin_layout Standard
\align right
Professor: Dimitrios Sacharidis
\end_layout

\begin_layout Standard
\align right
Student e-mail: jose.lorencio.abril@ulb.be
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Address
This is a summary of the course 
\emph on
Management of Data Science and Business Workflows
\emph default
, taught at the Université Libre de Bruxelles by Professor Dimitrios Sacharidis
 in the academic year 22/23.
 Most of the content of this document is adapted from the course notes by
 Sacharidis, 
\begin_inset CommandInset citation
LatexCommand cite
key "dimitris2022"
literal "false"

\end_inset

 and the basic book from the bibliography, 
\begin_inset CommandInset citation
LatexCommand cite
key "Dumas_2018"
literal "false"

\end_inset

, so I won't be citing them all the time.
 Other references will be provided when used.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList algorithm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Business Processes
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard

\series bold
Business Process Management (BPM)
\series default
 is a 
\emph on
body of methods, techniques, and tools to identify, discover, analyze, redesign,
 execute, and monitor business processes in order to optimize their performance
\emph default
.
 
\end_layout

\begin_layout Standard
This means that BPM is interested in understanding how an organization performs
 their work, focusing in the abstraction of the chain of activities performed
 by different actors of the organization, and not that much in how the actual
 individuals carry out these activities.
 These chains of tasks carried out in an organization with a defined objective
 that are subject to the BPM analysis are called 
\series bold
\emph on
business processes
\series default
\emph default
.
 
\end_layout

\begin_layout Standard
More precisely, Dumas defines a business process 
\emph on
as a collection of inter-related events, activities, and decision points
 that involve a number of actors and objects, which collectively lead to
 an outcome that is of value to at least one customer
\emph default
.
 
\end_layout

\begin_layout Standard
The relevant concepts in this definition are the following: 
\end_layout

\begin_layout Itemize
Events: things that have no duration.
 For example, receiving an e-mail.
 
\end_layout

\begin_layout Itemize
Activities: things that take time to be fulfilled.
 For example, answering a received e-mail.
 
\end_layout

\begin_layout Itemize
Decision points: these points happen when the process changes depending
 on a decision or an outcome of a past activity.
 For example, we might answer to the e-mail only if it is relevant for us
 and let it be otherwise.
 
\end_layout

\begin_layout Itemize
Actors: people, organizations and systems that take part in a process.
 For example, me and a guy from the other side of the world claiming to
 be my cousin and willing to make me rich.
 
\end_layout

\begin_layout Itemize
Objects: the objects involved in the process, being physical or informational
 objects.
 
\end_layout

\begin_layout Standard
BPM Notation (BPMN) is a visual language developed to model business processes
 and facilitate their analysis, understanding and communication between
 different stakeholders.
\end_layout

\begin_layout Example
Some common processes.
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Order-to-cash
\emph default
: type of process performed by a vendor.
 It starts when a customer submits an order to purchase a product and ends
 when the product has been delivered to the customer and the customer has
 made the payment for it.
\end_layout

\begin_layout Itemize

\emph on
Quote-to-order
\emph default
: typically precedes an order-to-cash process.
 It starts from the point when a supplier receives a Request for Quote (RFQ)
 from a customer, and ends when the customer in question places a purchase
 order based on the received quote.
\end_layout

\begin_layout Itemize

\emph on
Quote-to-cash
\emph default
: is the combination of two corresponding quote-to-order and order-to-cash
 processes.
\end_layout

\begin_layout Itemize

\emph on
Procure-to-pay
\emph default
: starts when someone in an organization determines that a given product
 or service needs to be purchased.
 It ends when the product has been delivered and paid for.
 A procure-to-pay process implies a quote-to-cash process on the supplier's
 side.
\end_layout

\end_deeper
\begin_layout Subsection
The BPM lifecycle
\end_layout

\begin_layout Standard
The BPM procedure is divided into a series of steps, which are ilustrated
 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:BPM-Lifecycle"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and are can be summed up as follwos:
\end_layout

\begin_layout Enumerate

\emph on
Process identification
\emph default
: identify all processes that take place in an organization's work.The outcome
 of this phase is a 
\series bold
process architecture
\series default
:
\series bold
 
\series default
a collection of inter-linked processes covering the bulk of the work that
 an organization performs in order to achieve its mission in a sustainable
 manner.
 To create such an architecture which is able to consistently produce positive
 outcomes, it is needed to:
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Measure the value
\emph default
 delivered by processes.
 There are different types of measures, related to cost, time, amount of
 errors,...
 And it is needed to decide which measures will be taken into account.
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Process discovery
\emph default
: understand the business process in detail.
 After this phase, we obtain as outcome the 
\series bold
as-is process models
\series default
, which reflect the understanding that people in the organization have about
 how work is done.
 These are commonly expressed by means of diagrams, which help in the comprehens
ion of the process, and enhance the dicussion about it.
 It is usual to use the BPMN.
\end_layout

\begin_layout Enumerate

\emph on
Process analysis
\emph default
: identification of issues and opportunities for process improvement.
\end_layout

\begin_layout Enumerate

\emph on
Process redesign
\emph default
: identification and analysis of potential remedies for the issues encountered
 during the analysis phase.
 The output of this phase is new redesigned version of the process, the
 
\series bold
to-be process
\series default
.
\end_layout

\begin_layout Enumerate

\emph on
Process implementation
\emph default
: it is needed to make the necessary changes in the ways of working and
 the IT systems of the organization so that the to-be process can be put
 into execution.
 These are in fact the two facets that an organization faces when dealing
 with process implementation:
\end_layout

\begin_deeper
\begin_layout Enumerate
Organizational change management.
\end_layout

\begin_layout Enumerate
Process automation
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Process monitoring
\emph default
: over time, adjustments may be required in the implemented business process
 when it does not meet expectations any longer, so the process needs to
 be monitored.
\end_layout

\begin_layout Enumerate
Finally, we would go back to the process discovery phase, as this is an
 iterative approach, where processes are constantly changed to deal with
 the inherent changing nature of businesses.
\end_layout

\begin_layout Standard
In addition, it is important to ensure that BPM initiatives are aligned
 with the strategic goals of the organization, this is called 
\series bold
strategic alignment
\series default
.
 Also, the roles and responsibilities should be clearly defined, as well
 as monitored to ensure consistency.
 This is the purpose of 
\series bold
governance
\series default
.
 It is also important that the participants are informed of the BPM initiatives
 of the organization that affect their processes and to develop an organizationa
l culture responsive to process change and open to embrace process thinking.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename bpm_lifecycle.png
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:BPM-Lifecycle"

\end_inset

BPM Lifecycle
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Process Identification
\end_layout

\begin_layout Standard
Process identification consists of identifying an organization's processes
 and prioritize their management based on certain criteria, in order to
 understand the organization and maximize the value of the BPM projects
 carried out.
\end_layout

\begin_layout Standard
Process identification can be divided in two substeps: the designation step
 and the prioritization step.
\end_layout

\begin_layout Subsection
Designation
\end_layout

\begin_layout Standard
In the designation step we aim at enumerating the main processes in the
 organization and to determine their scope.
 At the end of this step we will have developed the 
\series bold
process architecture
\series default
 of the organization.
\end_layout

\begin_layout Standard
The process architecture has different types of processes, which are typically:
\end_layout

\begin_layout Itemize

\series bold
Core processes
\series default
: those processes that cover the essential value creation of the company.
 Examples are design and development, manufacturing, marketing, delivery,...
\end_layout

\begin_layout Itemize

\series bold
Support processes
\series default
: are those processes that enable the execution of the core processes.
 Examples are human resource management, IT management, accounting,...
\end_layout

\begin_layout Itemize

\series bold
Management processes
\series default
: those processes that provide directions, rules and practices for the core
 and support processes.
 Examples are strategic planning, budgeting, compliance,...
\end_layout

\begin_layout Subsubsection
Relationships between processes
\end_layout

\begin_layout Itemize

\series bold
Sequence or horizontal
\series default
: relationship in which there is a logical sequence between two processes.
\end_layout

\begin_layout Itemize

\series bold
Decomposition
\series default
 
\series bold
or vertical
\series default
: there is a decomposition in which one specific process is described in
 more detail in one or more subprocesses.
\end_layout

\begin_layout Itemize

\series bold
Specialization
\series default
: when there exist several variants of a generic process
\end_layout

\begin_layout Subsubsection
Value chain modeling
\end_layout

\begin_layout Standard
The 
\series bold
value chain
\series default
 is a chain of processes that an organizations performs to deliver value
 to customers and stakeholders.
 Basically, is a horizontal summary of the organization processes, disregarding
 decomposition and specialization.
\end_layout

\begin_layout Standard
Some guidelines to identify horizontal boundaries in value chains are:
\end_layout

\begin_layout Itemize
Change of key business object in the process.
\end_layout

\begin_layout Itemize
Change of granularity of main business object.
\end_layout

\begin_layout Itemize
Change in frequency/time.
\end_layout

\begin_layout Itemize
Change in intermediate outcome/resolution/objective.
\end_layout

\begin_layout Standard
A 
\series bold
chevron
\series default
 is a collapsed value chain (e.g.
 Quote-to-cash can be a chevron of a Cuote-to-order and Order-to-cash value
 chain).
\end_layout

\begin_layout Standard
A 
\series bold
box
\series default
 is a group of processes or value chains.
\end_layout

\begin_layout Subsubsection
Process groups modeling
\end_layout

\begin_layout Standard
Another way to model the process architecture of a company is classify the
 processes that are related into groups.
\end_layout

\begin_layout Subsubsection
The hierarchical view
\end_layout

\begin_layout Standard
In both modeling cases, we can see the whole picture as a hierarchical view,
 in which we can see the general features and processes in lower levels,
 and go into detail when we increase the depth in hierarchy.
\end_layout

\begin_layout Example
A hierarchical process architecture of an insurance company can be modeled
 as follows.
\end_layout

\begin_layout Example
The first level gives an overview of the processes of the company, indicating
 which are core, support or management related.
\end_layout

\begin_layout Example
\begin_inset Graphics
	filename process_arch_lvl1.png
	scale 50

\end_inset


\end_layout

\begin_layout Example
The second level can give a more detailed vision on each area.
 For example, for the management processes we could have the main processes
 described in terms of their subprocesses:
\end_layout

\begin_layout Example
\begin_inset Graphics
	filename process_arch_lvl2.png
	scale 50

\end_inset


\end_layout

\begin_layout Example
Then, in the third level we could do the same with each of this subprocesses,
 further dividing them into more detailed sub-subprocesses.
 An so on for level 4, 5,...
\end_layout

\begin_layout Subsubsection
Designation via reference models
\end_layout

\begin_layout Quote
Another way to perform the designation step is to use 
\series bold
reference models
\series default
, which are templates that are used in common processes.
 For example, the Information Technology Infrastructure Library (ITIL) or
 the APQC Process Classification Framework (PCF).
\end_layout

\begin_layout Subsection
Prioritization
\end_layout

\begin_layout Standard
Once we have defined the process architecture of the organization, it is
 important to reflect on these processes, to understand which of them are
 working as they should, which are problematic, their scope,...
 
\end_layout

\begin_layout Standard
Processes can be analyzed in three dimensions:
\end_layout

\begin_layout Enumerate

\series bold
Importance
\series default
: a process is more important when it has greater impact on the organization's
 strategic objectives.
\end_layout

\begin_layout Enumerate

\series bold
Health
\series default
: a process is healthy when it is working as expected (or better than expected).
\end_layout

\begin_layout Enumerate

\series bold
Feasibility
\series default
: feasibility refers to how susceptible is a process to improve when tackled
 with BPM.
\end_layout

\begin_layout Standard
A usual visual way to address this issues is the 
\series bold
prioritized process portfolio
\series default
, in which processes are plotted in a 2D grid with Health in one axis going
 from Poor to Good and Importance in the other axis going from Low to High.
 Feasibility can be shown by a color scale on the points.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Prioritized-process-portfolio."
plural "false"
caps "false"
noprefix "false"

\end_inset

 an example is shown.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prioritized_process_portfolio.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prioritized_process_portfolio_classified.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Prioritized-process-portfolio."

\end_inset

Prioritized process portfolio.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
It is common to define zones of prioritization: the upper-left zone is called
 the 
\series bold
Short-term action zone
\series default
 because those are important processes with poor health, so they should
 be addressed as soon as possible.
 The bottom-left zone is the 
\series bold
Possible zone
\series default
 because they are processes that needs to be improved in terms of health,
 but are not very important, so they can wait.
 The bottom-right zone is the 
\series bold
Strategic fit zone
\series default
, in which there are processes that are performing well but are not very
 important to the strategic need of the organization, but as they are working
 good, we might think on how to fit them into our strategy.
 Finally, the upper-right zone is the 
\series bold
Challenge zone
\series default
, where important activities are performing good, so they are working as
 we want and there is no need to do anything about them, unless we want
 to further improve them.
\end_layout

\begin_layout Standard
Processes that are near in the graph should be selected to focus on their
 improvement based on their feasibility.
 In the example, we would focus on P6 before P3 because it is more feasible.
\end_layout

\begin_layout Section
Process modeling
\end_layout

\begin_layout Standard
Process modeling is useful for many reasons:
\end_layout

\begin_layout Itemize
To understand the process.
\end_layout

\begin_layout Itemize
To share our understanding of it with the people who are involved with it.
\end_layout

\begin_layout Itemize
To reflect on the process.
\end_layout

\begin_layout Itemize
To analyze the process.
\end_layout

\begin_layout Itemize
To measure different aspects of the process, extracting performance indicators.
\end_layout

\begin_layout Itemize
To improve the process.
\end_layout

\begin_layout Standard
So process modeling is a key aspect of BPM, because it is the tool that
 allow us to perform deeper evaluations and techniques.
\end_layout

\begin_layout Subsection
BPMN
\end_layout

\begin_layout Standard
BPM Notation (BPMN) is a visual language developed to model business processes
 and facilitate their analysis, understanding and communication between
 different stakeholders.
 Let's define the different concepts handled in BPMN:
\end_layout

\begin_layout Itemize
A 
\series bold
BPMN process model
\series default
 is a graph consisting of four types of core elements.
 An example can be seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-BPMN-process"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 The core elements are:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Activities
\series default
: activities are steps in a process that needs to be actively done and take
 time.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Activities are modeled using rectangles.
 
\end_layout

\begin_layout Itemize
Activities are named: 
\emph on
verb + noun
\emph default
.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Events
\series default
: momentary steps that do not need processing, but are usually the trigger
 to some activity.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Events are modeled using circles.
\end_layout

\begin_layout Itemize
Events are name: 
\emph on
noun + past-participle verb
\emph default
.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Gateway
\series default
: decision points where the path to follow is selected according to some
 criteria.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Gateways are modeled using diamond shapes.
\end_layout

\begin_layout Itemize
The decision criteria of the gateways must be written on the outgoing sequence
 flows, not as activities
\begin_inset Foot
status open

\begin_layout Plain Layout
This is an usual beginner's mistake.
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Sequence flow
\series default
: rows indicating the sequence order of the activities/events/gateways.
\end_layout

\end_deeper
\begin_layout Itemize
A 
\series bold
token
\series default
 is a new instance of a process.
 A token lifecycle starts when a process is triggered and ends when it reaches
 an endpoint of the process.
 Note that a process can have several active tokens at the same time
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename bpmn_example.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:A-BPMN-process"

\end_inset

A BPMN process model of a student of the BDMA.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can see in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-BPMN-process"
plural "false"
caps "false"
noprefix "false"

\end_inset

, there are different kinds of events:
\end_layout

\begin_layout Itemize

\series bold
Start event
\series default
: triggers a new process instance by generating a token that traverses the
 sequence flow.
 These are modeled with a light-lined circle.
\end_layout

\begin_layout Itemize

\series bold
End event
\series default
: signals that a process instance has completed with a given outcome by
 consuming a token.
 These are modeled with a bold-lined circle.
\end_layout

\begin_layout Standard
Also, in the example we see that the gateway has a cross inside, and this
 also has a meaning and there are several types of gateways:
\end_layout

\begin_layout Itemize

\series bold
XOR gateway
\series default
: captures decision points in which only one path can be taken among all
 of them (
\series bold
XOR-split
\series default
) and points where alternative flows are merged (
\series bold
XOR-join
\series default
).
 The latter represent the possibility that some alternative paths can finish
 in the same way.
 For example, in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-process-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

 we can see an example of this.
 The first diamong is a XOR-split and the second one is a XOR-join.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado3.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-process-of"

\end_inset

The process of my brother asking me for a shirt.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\series bold
AND gateway
\series default
: provides a mechanism to create and synchronize parallel flows.
 An 
\series bold
AND-split
\series default
 would take all the possible outgoing paths and an 
\series bold
AND-join
\series default
 would wait for all the incoming paths to end before continuing.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Security-screening-process."
plural "false"
caps "false"
noprefix "false"

\end_inset

 we can see an example of the AND gateway: in an airport, both the person
 and the luggage need to pass the security screening, but this can be considered
 different activities that can be done in parallel.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado4.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Security-screening-process."

\end_inset

Security screening process.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\series bold
OR gateway
\series default
: provides a mechanism to create and synchronize 
\begin_inset Formula $n$
\end_inset

 out of 
\begin_inset Formula $m$
\end_inset

 parallel flows, in which 
\begin_inset Formula $n$
\end_inset

 might not be known a priori.
 An 
\series bold
OR-split
\series default
 takes all branches whose condition is fulfilled, or the default branch
 if no condition is fulfilled.
 The 
\series bold
OR-join
\series default
 proceeds when all active incoming paths have completed.
 For this reason, the OR gateway is harder to interpret than the other two,
 because it needs to have a global view of what is happening in the process,
 while the other gates only needs the local information to their decision
 points.
 An example of use of this gateway is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Order-distribution-process."
plural "false"
caps "false"
noprefix "false"

\end_inset

, in which an order can have items that are stored in different warehouses,
 so each warehouse might or might not need to be forwarded a sub-order.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename order_distr_process.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Order-distribution-process."

\end_inset

Order distribution process.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Even though there are not precise rules about how to name everything in
 BPMN, there are general naming conventions
\begin_inset Foot
status open

\begin_layout Plain Layout
We have already seen some of these conventions when explaining the core
 elements of BPMN.
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
It is advisable to give a name to every event and task.
\end_layout

\begin_layout Itemize
It is better to avoid generic verb such as handle or record.
\end_layout

\begin_layout Itemize
Label XOR-split with a condition.
\end_layout

\begin_layout Itemize
Not a naming convention but still an useful guideline: try model in groups,
 i.e., pair up each split gateway with the correspondant join gateway without
 adding more gateways in between, when possible.
\end_layout

\begin_layout Standard
Until now, we have seen how to model processes that always go forward, but
 there exist situations in which some activities need to be repeated until
 a satisfactory outcome is achieved: this is called 
\series bold
rework 
\series default
or 
\series bold
repetition
\series default
 and is achieved by means of a XOR-join called the 
\series bold
entry point
\series default
 followed by the work that might need to be repeated and a XOR-split called
 the 
\series bold
exit point
\series default
 that checks whether the work needs to be redone or not.
 This is illustrated in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:BDMA-student-process"
plural "false"
caps "false"
noprefix "false"

\end_inset

, in which a student studies and takes an exam until it is passed.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename bdma_student_process.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:BDMA-student-process"

\end_inset

BDMA student process revisited.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
BPMN organizational elements
\end_layout

\begin_layout Standard
Now, we are going to cope with the fact that it is possible to have different
 departments of a company involved in the same process, or even different
 companies.
 For this, pools and lanes are used:
\end_layout

\begin_layout Itemize
A 
\series bold
pool
\series default
 captures a resource class and is generally used to model a business party.
\end_layout

\begin_layout Itemize
A 
\series bold
lane
\series default
 is a resource sub-class within a pool and is generally used to model department
s, internal roles or software systems.
\end_layout

\begin_layout Standard
An example is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Brother-asking-for"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 In this case, the pool is 
\emph on
My household
\emph default
 and the two lanes are the two brothers involved in the process.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename brother_shirt.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Brother-asking-for"

\end_inset

Brother asking for shirt process revisited.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that when several pools are part of a process, it is usually the case
 that only some specific information is asked from one pool by the other
 to continue the process and that, in any case, other pools are not performing
 the process and thus it must not depend on them to finish.
 This means that sequence flow arrows cannot go from one pool to another,
 because in that case a process would be involving two different resource
 class and this is not desired.
\end_layout

\begin_layout Standard
To communicate different pools we use 
\series bold
message flow lines
\series default
, which represents exactly this: a flow of information between two pools.
 A message flow can connect:
\end_layout

\begin_layout Itemize
Directly to the boundary of a pool: captures an informative message to/from
 that party.
\end_layout

\begin_layout Itemize
Directly to a specific activity or event within a pool: captures a message
 that triggers a specific activity/event within that party.
\end_layout

\begin_layout Standard
This two possibilities are depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Message-flow-summary."
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename message_flow_0.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename message_flow_1.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Message-flow-summary."

\end_inset

Message flow summary.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we have said before, there are some syntactic rules regarding pools,
 lanes and flows:
\end_layout

\begin_layout Enumerate
A sequence flow cannot cross the boundaries of a pool.
\end_layout

\begin_layout Enumerate
Both sequence flow and message flow can cross the boundaries of lanes.
\end_layout

\begin_layout Enumerate
A message flow cannot connect two flow elements within the same pool.
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout

\series bold
A modeling advice
\end_layout

\begin_layout Plain Layout
It is usually useful to start modeling with one single white-box pool:
\end_layout

\begin_layout Itemize
Initially, put the events and tasks in the pool of the party who is running
 the process.
\end_layout

\begin_layout Itemize
Leave all other pools as black boxes.
\end_layout

\begin_layout Itemize
Once this is done and the process diagram inside the white-box pool is complete,
 model the details in the other pools if it is necessary.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
BMPN Information Artifacts
\end_layout

\begin_layout Standard
In addition to all the objects that we have seen until this point, BPMN
 also allows the definition of data objects and stores:
\end_layout

\begin_layout Itemize
A 
\series bold
data object
\series default
 captures an artifact required (an input) or produced (an output) by an
 activity.
 They are modeled as a sheet of paper.
\end_layout

\begin_layout Itemize
A 
\series bold
data store
\series default
 is a place containing data objects that must be eprsisted beyond the duration
 of the process instance.
 It is used by an activity to recover an input data object or to store an
 output data object.
 They are modeled as a hard disk.
\end_layout

\begin_layout Standard
We need to be careful with the use of artifacts, because they can be useful
 if used appropriately, but when we detail every input and output object
 in a process, the diagram can become very crowded and hard to understand:
 keep it simple!
\end_layout

\begin_layout Subsection
BPMN Text Annotations
\end_layout

\begin_layout Standard
A text annotation is a mechanism to show additional information to the reader,
 but this information does not affect the workflow of the process.
\end_layout

\begin_layout Section
Advanced Process Modeling
\end_layout

\begin_layout Subsection
Subprocesses
\end_layout

\begin_layout Standard
It is often the case that a BPMN diagram can be long and composed of several
 parts, and some of these parts can be considered subprocesses of the big
 process.
 The usage of subprocesses is useful for several reasons:
\end_layout

\begin_layout Itemize
It allows to decompose large models into smaller ones, making them easier
 to understand and maintain.
\end_layout

\begin_layout Itemize
Sometimes, the same subprocess can be re-used in several processes.
\end_layout

\begin_layout Itemize
If can be helpful to delimit parts of the process that can be repeated or
 interrupted.
\end_layout

\begin_layout Standard
Subprocesses can be in expanded or collapsed notation.
 A subprocess in expanded notation is showing what the subprocess do, from
 start to end, while in collapsed notation it just have a plus sign indicating
 that it is a subprocess.
 In some modeling tools it is possible to click it and access its interior
 to see the whole subprocess.
 As an example, see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Subprocess-example.-Full"
plural "false"
caps "false"
noprefix "false"

\end_inset

, where both flavours are shown.
 The image in the bottom is the result of expaning subprocess 1 clicking
 its blue icon.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename subprocesses.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado5.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Subprocess-example.-Full"

\end_inset

Subprocess example.
 Full process (top) and subprocess 1 (bottom).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Acivity modifiers
\end_layout

\begin_layout Standard
Now, we are going to see that we can add '
\emph on
modifiers' 
\emph default
to activities, to increment their semantics.
 First, we are going to see the 
\series bold
activity loop markers
\series default
, which allow us to state that a task or a subprocess may be repeated multiple
 times.
 It is indicated with a circular arrow pointing to itself, as in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Activity-loop-markers."
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 In the case of a subprocess loop, the stop condition is usually written
 as a text annotation and the last activity of the subprocess must be a
 decision activity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado6.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Activity-loop-markers."

\end_inset

Activity loop markers.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The next modifier is the 
\series bold
multi-instance activity marker
\series default
, which provides a mechanism to indicate that an activity is executed multiple
 times concurrently.
 It is useful when an activity needs to be executed by several entities
 or workers.
 It is indicated with three vertical lines, as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Multi-instance-activity-markers."
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 The cardinality (quantity of parallel instances) is usually indicated with
 a text annotation.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado7.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Multi-instance activity markers.
\begin_inset CommandInset label
LatexCommand label
name "fig:Multi-instance-activity-markers."

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Advanced event modeling
\end_layout

\begin_layout Standard
There more types of events than just start and end events:
\end_layout

\begin_layout Enumerate
In terms of the 
\series bold
workflow stage
\series default
, an event can be:
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Start event
\series default
: starts a process.
\end_layout

\begin_layout Enumerate

\series bold
Intermediate event
\series default
: they occurr during the process, they do not trigger the process nor end
 it.
\end_layout

\begin_layout Enumerate

\series bold
End event
\series default
: they mark the end of the process.
\end_layout

\end_deeper
\begin_layout Enumerate
In terms of the 
\series bold
semantics
\series default
 of the event, it can be:
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Untyped event
\series default
: indicates that an instance of the process is created or completed, without
 specifying the cause for creation/completion.
\end_layout

\begin_layout Enumerate

\series bold
Start message event
\series default
: indicates that an instance of the process is triggered when a message
 is received.
\end_layout

\begin_layout Enumerate

\series bold
End message event
\series default
: indicates that an instance of the process is completed when a message
 is sent.
\end_layout

\begin_layout Enumerate

\series bold
Intermediate message event
\series default
: indicates that an event is expected to occur during the process.
 The event is triggered when a message is received or sent.
\end_layout

\begin_layout Enumerate

\series bold
Start timer event
\series default
: indicates that an instance of the process is created at certain date(s)/time(s
).
\end_layout

\begin_layout Enumerate

\series bold
Intermediate timer event
\series default
: triggered at certain date(s)/time(s) or after a time interval has elapsed
 since the moment the event is enabled.
\end_layout

\end_deeper
\begin_layout Enumerate
Sometimes, a decision has to be delayed until some event happens.
 For example, conditions of the form 'the first thing to happen among these
 three' lead to this situation.
 In such cases, we can use the 
\series bold
event-driven XOR split.
\end_layout

\begin_layout Enumerate

\series bold
Exceptions
\series default
 are events that deviate a process from its normal course.
 The simplest form of exception is to notify that there is an exception
 which leads to a negative outcome.
 This can be done via the 
\series bold
terminate end event
\series default
, which forces the whole process to abort, wiping off all tokens left behind.
 But exceptions can also be handled if they enclose a subprocess that gets
 interrupted when the exception occurs to perform the exception handling.
 The types of exceptions are:
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
External
\series default
: something goes wrong outside the process, and the execution of the current
 activity must be interrupted.
 It is handled with the 
\series bold
message event
\series default
.
\end_layout

\begin_layout Enumerate

\series bold
Internal
\series default
: something goes wrong inside an activity, whose execution must thus be
 interrupted.
 It is handled with the 
\series bold
error event
\series default
.
 The error event also has an 
\series bold
error end event
\series default
 version which generates an error event.
 The 
\series bold
error catching intermediate event
\series default
 version consumes these error events and can treat them when it is attached
 to the boundary of an activity.
\end_layout

\begin_layout Enumerate

\series bold
Timeout
\series default
: an activity takes too long and must be interrupted.
 Handled with the 
\series bold
timer event
\series default
.
\end_layout

\end_deeper
\begin_layout Enumerate
There are times in which we may want to trigger an activity in parallel
 to the normal flow.
 This can be achieved using 
\series bold
non-interrupting boundary events
\series default
, which can be of type message or timer.
\end_layout

\begin_layout Standard
All this information is summarized in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Types-of-events."
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Start
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Intermediate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Decision
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exception handling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
End
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado14.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado12.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Untyped event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado15.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Start message event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado13.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
End message event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado10.png
	scale 50

\end_inset


\begin_inset Graphics
	filename pegado11.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado18.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Intermediate message event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado8.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Start timer event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado9.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado20.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Intermediate timer event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado16.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event-driven XOR split
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado17.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Terminate end event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado19.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado21.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Error event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado22.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Non-interrupting message event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename pegado23.png
	scale 50

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Non-interrupting timer event
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Types of events.
\begin_inset CommandInset label
LatexCommand label
name "tab:Types-of-events."

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Qualitative Process Analysis
\end_layout

\begin_layout Standard
Business process analysis is the art and science of analyzing a process,
 with the aim of understanding it and being able to improve it later.
 
\end_layout

\begin_layout Standard
It is an art in the sense that a process is by nature one possibility among
 potentially infinity of them.
 Thus, having the wit to detect a step that is not really necessary, or
 to come up with a totally different process which achieves the same results
 with less resources is not something that follows a fixed set of rules.
 This part of process analysis is the qualitative analysis, and only some
 principles and techniques can be defined to help us in a wide range of
 usual situations.
 
\end_layout

\begin_layout Standard
The science side of business process analysis is the quantitative analysis.
 This term encapsulates a set of techniques for analyzing business processes
 quantitatively in terms of process performance measures such as cycle time,
 waiting time, cost,...
 
\end_layout

\begin_layout Standard
In this chapter we are focusing on the qualitative part of the process analysis.
 We are going to study several techniques: value-added analysis, waste analysis,
 issure register and root cause analysis.
\end_layout

\begin_layout Subsection
Value-added analysis
\end_layout

\begin_layout Standard
This is a technique used to identify unnecessary steps in a process in with
 the objective to elimitate them.
 A 
\series bold
step
\series default
 might be a task in the process or part of a task.
 The points to follow are:
\end_layout

\begin_layout Enumerate
Subdivide the process tasks into their constitutive steps:
\end_layout

\begin_deeper
\begin_layout Enumerate
Steps performed before the task.
\end_layout

\begin_layout Enumerate
The task itself, possibly subdivided into smaller steps.
\end_layout

\begin_layout Enumerate
Steps performed after a task to prepare for the next one.
\end_layout

\end_deeper
\begin_layout Enumerate
Classify each step as:
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Value adding (VA)
\series default
: a step that serves directly to obtain positive outcomes of the process,
 thus adding value for the customer.
 For example, in a supermarket inventory process, it is a value adding step
 to fill the emptied shelves.
 Some questions that can be asked:
\end_layout

\begin_deeper
\begin_layout Itemize
Is the customer willing to pay for this step?
\end_layout

\begin_layout Itemize
Would the customer agree that this step is necessary to achieve their goals?
\end_layout

\begin_layout Itemize
If the step is removed, would the customer perceive that the end product
 or service is less valuable?
\end_layout

\begin_layout Standard
This kind of steps is where we should maximize the effort put on.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Business value-adding (BVA)
\series default
: a step that does not directly contribute to positive outomes of the process
 but are necessary for the business.
 In the supermarkeet inventory process, annotating which products are being
 sold slower than expected is not directly adding value to the client, but
 it is necessary for the business to modify their procurements with the
 distributors.
 Some questions to ask:
\end_layout

\begin_deeper
\begin_layout Itemize
Is this step required in order to cllect revenue, to improve or grow the
 business?
\end_layout

\begin_layout Itemize
Would the business suffer in the long-term if this step was removed?
\end_layout

\begin_layout Itemize
Does it reduce risk or business losses?
\end_layout

\begin_layout Itemize
Is this step required in order to comply with regulatory requirements?
\end_layout

\begin_layout Standard
We want to minimize the effort put on this king of step, but we cannot eliminate
 them nor disregard them.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Non-value adding (NVA)
\series default
: these are steps that are not VA nor BVA, and these are which we want to
 eliminate from the processes, to improve the efficiency of the processes.
 In the supermarket inventory process, imagine it is needed to write on
 paper the inventory and after that scanning it to digitalize the document.
 In this case, this is a non-value adding step, which could be substitute
 by doing the inventory directly in a digital mean.
 
\end_layout

\begin_deeper
\begin_layout Standard
Usual non-value adding steps include handovers, context switches, waiting
 times, delays, rework or defect correction.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
While elimination of NVA steps is generally considered a desirable goal,
 elimination of BVA steps should be considered as a trade-off, given that
 BVA steps play a role in the business.
 Prior to eliminating BVA steps, one should first map BVA steps to business
 goals and business requirements.
 Given a mapping between BVA steps on the one hand and business goals and
 requirements on the ohter, the question then is: What is the minimum amount
 of work required to perform the process to the satisfaction of the customer,
 while fulfilling the goals and requirements associated to the BVA steps
 in the process?
\end_layout

\begin_layout Subsection
Waste analysis
\end_layout

\begin_layout Standard
Waste analysis can be seen as the reverse of value-added analysis.
 While in VA analysis we look at the process from a positive angle, trying
 to identify value adding steps, in waste analysis we take the negative
 angle, trying to find waste everywhere in the process.
 Some of these wastes can be traced down to specific steps in the process,
 but others are hidden in between steps or throughout the process.
\end_layout

\begin_layout Standard
Basically, there have been identifies seven types of waste, which can be
 classified into three categories:
\end_layout

\begin_layout Itemize

\series bold
Move
\series default
: wastes related to movement.
 It includes:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Transportation
\series default
: send or receive materials or documents, taken as input or output by the
 process activities.
 For example, when some certified documents needs to be send to the university
 for its admission process.
\end_layout

\begin_layout Itemize

\series bold
Motion
\series default
: motion of resources internally within the process.
 For example, when some paper needs to be signed by a specific person in
 the company and the one who needs this signature is moving around the building
 looking for him.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Hold
\series default
: wastes arising from holding something.
 It includes:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Inventory
\series default
: holding materials in inventory or having too many activities to be done
 (too much work-in-progress).
 For example, in some universities, the applications are not reviewed until
 the application period has ended, so lots of application are waiting to
 be handled for a long time.
\end_layout

\begin_layout Itemize

\series bold
Waiting
\series default
: when there are tasks waiting for materials, input data or resources; or
 when there are unused resources waiting for work (idle resources).
 For example, when there is a request waiting for someone to approve it.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Overdo
\series default
: wastes arising from doing more than is necessary in order to deliver value
 to the customer or the business.
 It includes:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Defects
\series default
: correcting or compensating for a defect or error.
 Usually encompassed under rework loops.
 For example, in the university admissions process, when an application
 is sent back to the applicant for modification, the request needs to be
 re-assessed later.
\end_layout

\begin_layout Itemize

\series bold
Overprocessing
\series default
: this refers to tasks that have been unnecessarily performed, because they
 did not affect the outcome of the process.
 For example, checking the validity of the transcripts of a students which
 does not meet the minimum GPA would be overprocessing, because he will
 be rejected no matter the outcome of the validity check.
\end_layout

\begin_layout Itemize

\series bold
Overproduction
\series default
: this occurs when unnecessary process instances are performed, producing
 outcomes that do not add value upon completion.
 For example, in university admissions, about 3000 applications are submitted,
 but only 600 are considered eligible after assessment.
 This means that 4/5 of the process instances have a negative outcome.
\end_layout

\end_deeper
\begin_layout Subsection
Issue register
\end_layout

\begin_layout Standard
An issue register is a listing that provides a detailed analysis of each
 issue and its impact in the form of a table with a pre-defined set of fields,
 which are usually the following:
\end_layout

\begin_layout Itemize
Name of the issue: understandable by stakeholders.
\end_layout

\begin_layout Itemize
Description: short description of the issue focused on the issue itself.
\end_layout

\begin_layout Itemize
Priority: a number that state the importance of the issue with respect to
 the other issues.
\end_layout

\begin_layout Itemize
Data and assumptions: any data or assumptions made in the estimation of
 the impact of the issue.
\end_layout

\begin_layout Itemize
Qualitative impact: description of the impact of the issue in qualitative
 terms.
\end_layout

\begin_layout Itemize
Quantitative impact: an estimate of the impact of the issue in quantitative
 terms.
\end_layout

\begin_layout Subsubsection
Issue prioritization: PICK chart
\end_layout

\begin_layout Standard
Similarly to process prioritization, we can define a priority chart for
 issues.
 It is called the PICK chart, and plots:
\end_layout

\begin_layout Itemize
The difficulty of solving the issue in the X axis, from EASY to HARD.
\end_layout

\begin_layout Itemize
The payoff of solving the issue in the Y axys, from LOW to HIGH.
\end_layout

\begin_layout Standard
Each quadrant is labeled as:
\end_layout

\begin_layout Itemize

\series bold
I
\series default
mplement: the EASY-HIGH quadrant.
 It contains those issues that we should solve first, because they give
 high payoff and are easy to solve.
\end_layout

\begin_layout Itemize

\series bold
C
\series default
hallenge: the HARD-HIGH quadrant.
 It contains those issues that should be solved after those in I, because
 they give high payoff, but they are hard to solve.
\end_layout

\begin_layout Itemize

\series bold
P
\series default
ossible: the EASY-LOW quadrant.
 It contains those issues that should be left for when we are bored, because
 they give low payoff and are easy to solve.
\end_layout

\begin_layout Itemize

\series bold
K
\series default
ill: the HARD-LOW quadrant.
 It contains those issues that we should forget about, because they give
 low payoff and are hard to solve.
\end_layout

\begin_layout Standard
A sample PICK chart is depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sample-PICK-chart."
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename PICK_chart.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sample PICK chart.
\begin_inset CommandInset label
LatexCommand label
name "fig:Sample-PICK-chart."

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Root cause analysis
\end_layout

\begin_layout Standard
Root cause analysis is a family of techniques that helps analysts to identify
 and understand the root cause of issues or undesirable events.
 It is useful to identify and to understand the issues that prevent a process
 from having a better performance.
 It encompasses a variety of techniques, which generally include guidelines
 for interviewing and conducting workshops with relevant stakeholders, as
 well as techniques to organize and to document the ideas generated during
 these interviews.
 We are going to explain two of these techniques: cause-effect diagrams
 and why-why diagrams.
\end_layout

\begin_layout Subsubsection
Cause-Effect diagrams
\end_layout

\begin_layout Standard
They depict the relationship between a given negative effect and its potential
 causes.
 A well known categorization for cause-effect analysis are the 6 M's:
\end_layout

\begin_layout Enumerate

\series bold
Machine
\series default
: factors stemming from technology used.
\end_layout

\begin_layout Enumerate

\series bold
Method
\series default
: factors stemming from the way the process is designed, understood or performed.
 Usually occur because of unclear assignments of responsibilities or instruction
s, insufficient training of a lack of communication.
\end_layout

\begin_layout Enumerate

\series bold
Material
\series default
: factors stemming from input material or data.
\end_layout

\begin_layout Enumerate

\series bold
Man
\series default
: factors stemming from wrong assessment or incorrect performance of steps
 because of lack of training, clear instructions or motivation, or too high
 demands towards process workers.
\end_layout

\begin_layout Enumerate

\series bold
Measurement
\series default
: factors stemming from reliance on inaccurate estimations or miscalculations.
\end_layout

\begin_layout Enumerate

\series bold
Milieu
\series default
: factors outside the scope of the process.
\end_layout

\begin_layout Standard
These diagrams identify all factors related to each of these dimensions
 in relation to one issue, as depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sample-cause-effect-diagram."
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename cause-effect_diagram.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sample cause-effect diagram.
\begin_inset CommandInset label
LatexCommand label
name "fig:Sample-cause-effect-diagram."

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Why-Why diagrams
\end_layout

\begin_layout Standard
Why-why diagrams work by recursively ask the question:
\end_layout

\begin_layout Standard
\align center

\emph on
Why has this happened?
\end_layout

\begin_layout Standard
This question is asked multiple times until a factor that stakeholders perceive
 to be a 
\series bold
root cause
\series default
 is found.
 A common belief in the field of quality management is that answering the
 question five times recursively allows one to pin down the root causes
 of a given negative effect.
 This is known as the 
\series bold
5 Why's principle
\series default
.
\end_layout

\begin_layout Standard
This technique is used to structure brainstorming sessions for root cause
 analysis:
\end_layout

\begin_layout Itemize
Start with the issue to analyze: first, agree on a name for it.
 In this step it is possible to find that there were more than just one
 issue, so we should select one among these to analyze them separately.
\end_layout

\begin_layout Itemize
Put the selected issue as the root of the tree.
\end_layout

\begin_layout Itemize
At each level of the tree ask the '
\emph on
why'
\emph default
 question.
 Possible factors may be identified.
 These factors are added to the tree as nodes and the process is repeated.
\end_layout

\begin_layout Standard
When getting deeper in the tree, we should focus on factors that can be
 solved and the leave of the tree should corresponod to factors that are
 fundamental in nature, meaning they cannot be explained in terms of other
 factors.
 These are the 
\series bold
root causes
\series default
 and ideally they should be such that they can be eliminated or mitigated.
\end_layout

\begin_layout Standard
A sample why-why diagram is depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sample-why-why-diagram."
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename why-why_diagram.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Sample why-why diagram.
\begin_inset CommandInset label
LatexCommand label
name "fig:Sample-why-why-diagram."

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Quantitative Process Analysis
\end_layout

\begin_layout Standard
Qualitative analysis is a valuable tool to gain systematic insights into
 a process, but its results are sometimes not detailed enough to provide
 a solid basis for decision making.
 Now we are going to study techniques to analyze business processes quantitative
ly in terms of process performance measures.
 We will study flow analysis, queueing analysis and simulation.
\end_layout

\begin_layout Subsection
Flow analysis
\end_layout

\begin_layout Standard
Flow analysis is a family of techniques to estimate the overall performance
 of a process given some knowledge about the performance of its tasks.
\end_layout

\begin_layout Subsubsection
Cycle time
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
The 
\series bold
cycle time
\series default
 of a process is the average time it takes between the moment the process
 starts and the moment it completes.
\end_layout

\begin_layout Definition
The cycle time of a task is the average time it takes between the moment
 the task starts and the moment it completes.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The process' cycle time can be computed if we know its tasks' cycle times,
 but we have seen several types of flows a process can follow, and the computati
ons vary for each of them:
\end_layout

\begin_layout Itemize
The cycle time of a sequential fragment of a process is the sum of the cycle
 times of the tasks in the fragment:
\begin_inset Formula 
\[
CT=\sum_{i=1}^{n}T_{i}.
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado24.png
	scale 50

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The cycle time of the fragment of the process between the XOR-split and
 the XOR-join is the weigthed average of the cycle times of the branches
 in-between.
 The term 
\series bold
branching probability
\series default
 denotes the frequency with which a given branch is taken:
\begin_inset Formula 
\[
CT=\sum_{i=1}^{n}w_{i}T_{i},
\]

\end_inset

 where 
\begin_inset Formula $w_{i}$
\end_inset

 is branch probability of Task 
\begin_inset Formula $i$
\end_inset

.
 This type of fragment is called a 
\series bold
XOR-block
\series default
.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado25.png
	scale 50

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The cycle time of an 
\series bold
AND-block
\series default
, understood as the analogous of a XOR-block but with AND-gateways is computed
 as the maximum of the cycle times of the branches in-between:
\begin_inset Formula 
\[
CT=\max\left\{ T_{1},...,T_{n}\right\} .
\]

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado26.png
	scale 50

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
The cycle time of a rework fragment with all the work between the XOR gates
 is
\begin_inset Formula 
\[
CT=\frac{T}{1-r},
\]

\end_inset

 where 
\begin_inset Formula $T$
\end_inset

 is the time taken for all the work between the gates and 
\begin_inset Formula $r$
\end_inset

 is the probability of rework:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado27.png
	scale 50

\end_inset


\end_layout

\begin_layout Proof
Let's define 
\begin_inset Formula $T_{n}$
\end_inset

 as the average time taken after 
\begin_inset Formula $n$
\end_inset

 steps of this segment.
 Clearly, we have
\begin_inset Formula 
\[
T_{1}=T,
\]

\end_inset

 then, the second step takes 0 time with probability 
\begin_inset Formula $1-r$
\end_inset

 and 
\begin_inset Formula $T$
\end_inset

 time with probability 
\begin_inset Formula $r$
\end_inset

, so
\begin_inset Formula 
\[
T_{2}=T_{1}+0\times\left(1-r\right)+T\times r=T+rT.
\]

\end_inset

 For the third, a similar reasoning gives
\begin_inset Formula 
\[
T_{3}=T+rT+r^{2}T.
\]

\end_inset

 Reasoning inductively, we have
\begin_inset Formula 
\[
T_{n}=\sum_{i=0}^{n}r^{i}T.
\]

\end_inset

 Also, note that the cycle time is the limit when 
\begin_inset Formula $n$
\end_inset

 goes to infinity of this series
\begin_inset Formula 
\[
CT=\lim_{n\rightarrow\infty}T_{n},
\]

\end_inset

 and note that 
\begin_inset Formula $\left\{ T_{n}\right\} _{n}$
\end_inset

 is a geometric series, so
\begin_inset Formula 
\[
CT=\lim_{n\rightarrow\infty}T_{n}=\sum_{n\geq0}r^{n}T=\frac{T}{1-r}.
\]

\end_inset


\end_layout

\begin_layout Standard
In this case, 
\begin_inset Formula $r$
\end_inset

 is called the 
\series bold
rework probability
\series default
 and the block is called a 
\series bold
rework block
\series default
.
\end_layout

\end_deeper
\begin_layout Itemize
If there is also work in the flow that goes back:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado28.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
But this scenario can be rewritten as:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename pegado31.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
So the cycle time is
\begin_inset Formula 
\[
CT=T_{A}+r\frac{T_{B}+T_{A}}{1-r}=\frac{T_{A}+rT_{B}}{1-r}.
\]

\end_inset


\end_layout

\end_deeper
\begin_layout Example
Computing the cycle time of a process.
\end_layout

\begin_layout Example
Consider the process:
\end_layout

\begin_layout Example
\begin_inset Graphics
	filename example_cycletime.png
	scale 50

\end_inset


\end_layout

\begin_layout Example
And compute its cycle time:
\begin_inset Formula 
\[
CT=\frac{T_{1}}{1-0.2}+\max\left\{ T_{2,1},T_{2,2}\right\} +T_{3}+0.6\cdot T_{4,1}+0.4\cdot T_{4,2}.
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Cycle time efficiency
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
The cycle time can be divided into waiting time and processing time:
\end_layout

\begin_layout Definition

\series bold
Waiting time
\series default
 is the portion of the cycle time where no work is being done to advance
 the process.
\end_layout

\begin_layout Definition

\series bold
Processing time
\series default
 refers to the time that participants spend doing actual work.
\end_layout

\begin_layout Definition
The ratio of overall processing time relative to the overall cycle time
 is called the 
\series bold
cycle time efficiency
\series default
:
\begin_inset Formula 
\[
CTE=\frac{PT}{CT},
\]

\end_inset

 where 
\begin_inset Formula $PT$
\end_inset

 is the processing time, computed with the same rules as the cycle time,
 but only with the processing time of each task.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $CTE$
\end_inset

 is close to 1, it indicates that there is little room for improving the
 cycle time unless relatively radical cahnges are introduced in the process.
 A ratio close to 0 indicates that there is a significant amount of room
 for improving cycle time by reducing the waiting time.
\end_layout

\begin_layout Subsubsection
Limitations
\end_layout

\begin_layout Standard
Flow analysis has some limitations:
\end_layout

\begin_layout Enumerate
Not all models are structured in blocks, and this difficults the computations.
\end_layout

\begin_layout Enumerate
Cycle time analysis does not consider the rate at which new processes instances
 are created (called arrival rate) nor the number of available resources,
 even though they are a key factor in process performance.
\end_layout

\begin_layout Subsubsection
Cycle time and work-in-progress
\end_layout

\begin_layout Standard
The 
\series bold
work-in-progress (WIP)
\series default
 is the average number of cases that are running at a time and it can be
 considered as a form of waste.
 There is an estimation for the WIP given by the Little's formula:
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout

\series bold
Little's formula
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
WIP=\lambda\cdot CT,
\]

\end_inset

 where 
\begin_inset Formula $\lambda$
\end_inset

 is the arrival rate, or number of new cases per time unit, and 
\begin_inset Formula $CT$
\end_inset

 is the cycle time.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This formula can be an interesting tool for what-if analysis and for calculating
 the total cycle time of a process if we know the arrival rate and the WIP.
\end_layout

\begin_layout Subsection
Queueing analysis
\end_layout

\begin_layout Standard

\series bold
Queueing theory
\series default
 is a collection of mathematical techniques to analyze systems that have
 resource contention.
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
A 
\series bold
queueing system
\series default
 consists of one or multiple 
\series bold
queues
\series default
 and a 
\series bold
service
\series default
 that is provided by one or multiple 
\series bold
servers
\series default
.
 The elements inside a queue are called 
\series bold
jobs or customers
\series default
, depending on the specific context.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We are going to study two models in which there is a single queue involved.
 In both of them, instances arrive at a given average 
\series bold
arrival time
\series default
 
\begin_inset Formula $\lambda$
\end_inset

.
 Related to this measure we have the mean 
\series bold
inter-arrival time
\series default
, which is its inverse, 
\begin_inset Formula $\frac{1}{\lambda}$
\end_inset

.
\end_layout

\begin_layout Standard
We would model the arrival process as a 
\series bold
Poisson process
\series default
, meaning the distribution of arrivals follows an 
\series bold
exponential distribution
\series default
 with mean 
\begin_inset Formula $\frac{1}{\lambda}$
\end_inset

.
 This means that the probability that the inter-arrival time is exactly
 equal to 
\begin_inset Formula $t$
\end_inset

 decreases in an exponential manner when 
\begin_inset Formula $t$
\end_inset

 increases.
\end_layout

\begin_layout Standard
Exponential distributions are not only useful when modeling the inter-arrival
 time, but also when describing the processing time of a task.
 In queueing theory, sometimes the processing time is called 
\series bold
service time
\series default
 instead.
\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
A single-queue system is an 
\series bold
M/M/1 queue
\series default
 if:
\end_layout

\begin_deeper
\begin_layout Itemize
The inter-arrival times of customers follow an exponential distribution.
\end_layout

\begin_layout Itemize
The processing times follow an exponential distribution.
\end_layout

\begin_layout Itemize
There is only one server.
\end_layout

\begin_layout Itemize
Instances are served on a FIFO
\begin_inset Foot
status open

\begin_layout Plain Layout
First In First Out.
\end_layout

\end_inset

 basis.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Definition
A single-queue system is an 
\series bold
M/M/c queue
\series default
 if it satisfies the conditions of a M/M/1 queue but has 
\begin_inset Formula $c$
\end_inset

 servers instead of 1.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 'M' in these names stands for 
\emph on
Markovian
\emph default
, which is the name given to the assumptions that inter-arrival times and
 processing times follow an exponential distribution.
\end_layout

\begin_layout Subsubsection
M/M/1 and M/M/c models
\end_layout

\begin_layout Standard
An M/M/1 queue or M/M/c queue can be defined by means of the following parameter
s:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda$
\end_inset

 is the mean arrival rate per time unit.
\end_layout

\begin_layout Itemize
The mean inter-arrival time is 
\begin_inset Formula $\frac{1}{\lambda}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mu$
\end_inset

 is the 
\series bold
theoretical capacity per server
\series default
, i.e., the number of instances that a server can execute per time unit.
\end_layout

\begin_layout Standard
Given 
\begin_inset Formula $\lambda$
\end_inset

 and 
\begin_inset Formula $\mu$
\end_inset

, the 
\series bold
resource utilization
\series default
 is
\begin_inset Formula 
\[
\rho=\frac{\lambda}{c\mu},
\]

\end_inset

 with 
\begin_inset Formula $c=1$
\end_inset

 in the M/M/1 case.
 
\end_layout

\begin_layout Standard
With this information, we can compute the following parameters:
\end_layout

\begin_layout Itemize
\begin_inset Formula $L_{q}$
\end_inset

 is the average number of instances in the queue.
\end_layout

\begin_layout Itemize
\begin_inset Formula $W_{q}$
\end_inset

 is the average time one instance spends in the queue.
\end_layout

\begin_layout Itemize
\begin_inset Formula $W$
\end_inset

 is the average time one instances spends in the entire system, including
 both the time the instance spends in the queue and the time it spends being
 serviced.
\end_layout

\begin_layout Itemize
\begin_inset Formula $L$
\end_inset

 is the average number of instances in the system (equivalent to the WIP).
\end_layout

\begin_layout Standard
The formulas are:
\begin_inset Formula 
\[
L_{q}=\frac{\left(\frac{\lambda}{\mu}\right)^{c}\rho}{c!\left(1-\rho\right)^{2}\left(\frac{\left(\frac{\lambda}{\mu}\right)^{c}}{c!\left(1-\rho\right)}+\sum_{n=0}^{c-1}\frac{\left(\frac{\lambda}{\mu}\right)^{n}}{n!}\right)},
\]

\end_inset


\begin_inset Formula 
\[
W_{q}=\frac{L_{q}}{\lambda},
\]

\end_inset


\begin_inset Formula 
\[
W=W_{q}+\frac{1}{\mu},
\]

\end_inset


\begin_inset Formula 
\[
L=\lambda W.
\]

\end_inset


\end_layout

\begin_layout Standard
Note that for 
\begin_inset Formula $c=1$
\end_inset

 the formula for 
\begin_inset Formula $L_{q}$
\end_inset

 simplifies to
\begin_inset Formula 
\[
L_{q}=\frac{\rho^{2}}{1-\rho}.
\]

\end_inset


\end_layout

\begin_layout Standard
Note also that the model needs 
\begin_inset Formula $\lambda<\mu$
\end_inset

.
 This means that there is enough capacity to handle all the instances.
\end_layout

\begin_layout Subsection
Process simulation
\end_layout

\begin_layout Standard
Process simulation is the most popular and widely supported technique for
 quantitative analysis of process models.
 The essential idea is to use the process simulator for generating a large
 number of hypothetical instances of a process, executing these instances
 step by step, and recording each step in this execution.
 The output of a simulator then includes the logs of the simulation as well
 as statistics of cycle times, average waiting times, and average resource
 utilization.
\end_layout

\begin_layout Standard
The steps to follow are:
\end_layout

\begin_layout Enumerate
Model the process with the tools that we saw in previous sections.
\end_layout

\begin_layout Enumerate
Define a simulation scenario:
\end_layout

\begin_deeper
\begin_layout Enumerate
Input the processing times of the different activities.
 It can be a fixed value or be modeled as a probability distribution.
\end_layout

\begin_deeper
\begin_layout Enumerate
Fixed: when the activity processing time varies very little.
\end_layout

\begin_layout Enumerate
Normal distribution: for repetitive activities for which we know the mean
 and standard deviation.
\end_layout

\begin_layout Enumerate
Exponential distribution: complex activities that may involve detailed analyses
 or decisions for which we know the mean.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Conditional branching probabilities.
\end_layout

\begin_layout Enumerate
Arrival rate of process instances and probability distribution.
 It is usual to use an exponential distribution with mean the inter-arrival
 time (the inverse of the arrival time).
\end_layout

\begin_layout Enumerate
Define resource pools: name, size, cost per time unit per resource and availabil
ity (schedule, calendar).
\end_layout

\begin_layout Enumerate
Assign the different tasks to the appropriate resource pools.
\end_layout

\begin_layout Standard
With simulation, we get statistical information, which some tools show very
 nicely, similarly to what is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sample-output-of"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename pegado32.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Sample output of a simulation using BIMP.
\begin_inset CommandInset label
LatexCommand label
name "fig:Sample-output-of"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Pitfalls of simulation
\end_layout

\begin_layout Itemize
Stochasticity: simulation results can differ from one run to another.
\end_layout

\begin_deeper
\begin_layout Itemize
Solutions:
\end_layout

\begin_deeper
\begin_layout Itemize
Make the simulation large enough to cover weekly and seasonal variability.
\end_layout

\begin_layout Itemize
Perform several runs and average the results to compute confidence intervals.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Data quality: simulations results are only as reliable as the input data.
\end_layout

\begin_deeper
\begin_layout Itemize
Solutions:
\end_layout

\begin_deeper
\begin_layout Itemize
Don't use guesses as estimations: use statistical tools to check if the
 distributions fit the data and take measures.
\end_layout

\begin_layout Itemize
Simulate the as-is scenario and cross-check results against actual observations.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
There are many simplifying assumptions that need to be made.
\end_layout

\begin_layout Section
Process Redesign
\end_layout

\begin_layout Standard
Business process redesign is a broad term that refer to the variety of changes
 made in a process to improve some aspects of it.
 As the number of possible changes is virtually infinite, it is useful to
 distinguish small and simple changes from complex changes or big changes
 in a process.
 Dumas et al focus only in the latter types of changes, in which processes
 suffer severe changes and which can lead to improvements in a variety of
 levels.
 
\end_layout

\begin_layout Standard
To exemplify this, assume we are working on the improvement of a request-to-reso
lution process.
 A minor change would be hiring more workers to some department to reduce
 waiting times or to change the location of this department inside the building
 of the company.
 On the other hand, a more complex change that could be encapsulated into
 process redesign could be implementing a digitized form to make the request
 instead of using paper forms.
 The first changes would not be considered as process redesign by the authors,
 but the latter would.
 
\end_layout

\begin_layout Standard
As process analysis, process redesign is both an art and a science.
 Even though general guidelines and use cases are known to work in a variety
 of scenarios, there is no ’one fits all’ solution, and it is a task of
 the process engineer to study thoroughly the case at hand, using the general
 tools that are already known, the analysis performed of the process, the
 business knowledge of the specific case and his wit and experience.
 
\end_layout

\begin_layout Standard
Generally speaking, process redesign methods are classified into two categories:
 
\end_layout

\begin_layout Itemize

\series bold
Transformational redesign
\series default
: puts into question the fundamental assumptions and principles of the existing
 process structure, aiming to achieve breakthrough innovation.
 This means that we try to change our understanding of the process objectives
 and techniques, in order to completely change how we are doing things and
 leading to deep improvements.
 
\end_layout

\begin_layout Itemize

\series bold
Transactional redesign
\series default
: does not put into question the current process structure, but rather tries
 to identify problems and solve them incrementally, improving performance
 metrics of the process.
 
\end_layout

\begin_layout Subsection
Business Process Reengineering (BPR)
\end_layout

\begin_layout Standard
BPR is considered the first call for the redesign of business processes
 and the first attempt to identify enduring patterns for this endeavor.
 One of the core concepts in this method is that is assumes a clean slate
 for the design of a process.
\end_layout

\begin_layout Standard
BPR has identified some patterns that appear repeatedly in bad-performing
 cases.
 The study of these patterns led to the definition of some principles to
 tackle the redesign process:
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
Principle 1) 
\end_layout

\end_inset

 Make sure that information is captured fresh, at the moment it is produced,
 and at the source by the stakeholder who is producing it.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
Principle 2)
\end_layout

\end_inset

 Information processing work, i.e.
 work that involves capturing or processing information, is to be integrated
 with the real work where this information is produced.
 
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
Principle 3)
\end_layout

\end_inset

 Those who have an interest in the output of a process should not only participa
te in it but potentially drive it all the way.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
Principle 4)
\end_layout

\end_inset

 Put every decision point in a process preferably at the place where work
 is performed.
\end_layout

\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
Principle 5)
\end_layout

\end_inset

 Treat geographically dispersed resources as if they were centralized.
 
\end_layout

\begin_layout Subsection
Heuristics for transactional redesign
\end_layout

\begin_layout Subsubsection*
Devil's quadrangle
\end_layout

\begin_layout Standard
The Devil's quadrangle is a visual tool based on the four performance dimensions
: time, cost, quality and flexibility.
 In an ideal world, a business process redesign decreases the time required
 to handle a case, lowers the required cost of executing the process, improves
 the quality of the service delivered and increases the resilience of the
 business process to deal with variation.
\end_layout

\begin_layout Standard
But the Devil's quadrangle suggests that improving a process along one dimension
 may very well weaken its performance along another.
 A sample Devil's quadrangle is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sample-Devil's-quadrangle."
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename devil_quadrangle.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sample Devil's quadrangle.
\begin_inset CommandInset label
LatexCommand label
name "fig:Sample-Devil's-quadrangle."

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We know very well the meaning of Time, Cost and Quality, but the term flexibilit
y needs to be explained at this points:
\end_layout

\begin_layout Itemize

\series bold
Flexibility
\series default
: ability to react to changes in workload, customer demands and expectations
 and resource and business partness availability and performance.
 Thus, flexibility is required at resource level, process level and management
 level.
\end_layout

\begin_layout Subsubsection*
Redesign heuristics
\end_layout

\begin_layout Standard
As we said before, there are techniques or heuristics developed to redesign
 processes and thought to work in a variety of scenarios.
 We are going to name them according to Appendix A in 
\begin_inset CommandInset citation
LatexCommand cite
key "Dumas_2018"
literal "false"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
For those which we have seen in class, we are adding a label, indicating
 if the heuristic is task-level (TL), flow-level (FL) or process-level (PL).
\end_layout

\end_inset

: 
\end_layout

\begin_layout Enumerate

\series bold
Customer heuristics: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Control relocation
\emph default
: move controls towards the customer.
 
\end_layout

\begin_layout Enumerate

\emph on
Contact reduction
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
This heuristic is not in the book, but we have seen it in the lectures with
 the name of communication optimization.
\end_layout

\end_inset

 (PL): reduce the number of contacts with customer and third parties.
 
\end_layout

\begin_layout Enumerate

\emph on
Integration
\emph default
: consider the integration with a business process of the customer or a
 supplier.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Business process operation heuristics
\series default
: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Case types
\emph default
: determine whether activities are related to the same type of case and
 distinguish new business processes.
 
\end_layout

\begin_layout Enumerate

\emph on
Activity elimination
\emph default
 (TL): eliminate unnecessary activities from a business process.
 
\end_layout

\begin_layout Enumerate

\emph on
Case-based work
\emph default
: remove batch-processing and periodic activities.
 
\end_layout

\begin_layout Enumerate

\emph on
Triage
\emph default
 (TL): split an activity into alternative versions.
 
\end_layout

\begin_layout Enumerate

\emph on
Activity composition
\emph default
 (TL): combine small activities into composite activities.
 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Business process behavior heuristics
\series default
: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Resequencing
\emph default
 (FL): move activities to their appropriate place.
 
\end_layout

\begin_layout Enumerate

\emph on
Parallelism
\emph default
 (FL): put activities in parallel.
 
\end_layout

\begin_layout Enumerate

\emph on
Knock-out
\emph default
: order knock-outs in an increasing order of effort and in a decreasing
 order of termination probability.
 
\end_layout

\begin_layout Enumerate

\emph on
Exception
\emph default
: design business processes for typical cases and isolate exceptional cases
 from the normal flow.
 
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Organization heuristics
\series default
: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\emph on
Case assignment
\emph default
: let participants perform as many steps as possible.
 
\end_layout

\begin_layout Enumerate

\emph on
Flexible assignment
\emph default
: keep generic participants free for as long as possible.
 
\end_layout

\begin_layout Enumerate

\emph on
Centralization
\emph default
: let geographically dispersed participants act as if they are centralized.
 
\end_layout

\begin_layout Enumerate

\emph on
Split responsibilities
\emph default
: avoid shared responsibilities for tasks by people from different functional
 units.
 
\end_layout

\begin_layout Enumerate

\emph on
Customer teams
\emph default
: consider composing work teams of people from different departments that
 will take care of the complete handling of specific sorts of cases.
 
\end_layout

\begin_layout Enumerate

\emph on
Numerical involvement
\emph default
: minimize the number of departments, groups and persons involved in a business
 process.
\end_layout

\end_deeper
\begin_layout Section
Process Monitoring and Mining
\end_layout

\begin_layout Subsection
Process monitoring
\end_layout

\begin_layout Standard
Process monitoring is about using the data generated by the execution of
 a business process in order to extract insights about the actual performance
 of the process and to verify its conformance with respect to norms, policies
 or regulations.
 The data generated by business process executions generally takes the form
 of collections of event records.
 Each event record captures a state change in a process, such as the start
 or completion of a task.
 Collections of event records are called 
\series bold
event logs
\series default
.
\end_layout

\begin_layout Subsection
Process performance dashboard
\end_layout

\begin_layout Standard
A process performance dashboard is a visualization of a collection of process
 performance measures to put into evidence information and patterns to help
 business users answer one or more business questions.
 The dashboard can be of three types:
\end_layout

\begin_layout Itemize

\series bold
Operational dashboards
\series default
: target process participants and their operational managers.
 Their purpose is to display the performance of ongoing or recently completed
 cases in a way that allows process participants and their managers to plan
 their short-term work.
 Typical measures are the WIP, the problematic cases or the resource load.
\end_layout

\begin_layout Itemize

\series bold
Tactical performance dashboards
\series default
: target process owners, functional managers with oversight over parts of
 a process, and the analysts upon whom these managers rely.
 Their purpose is to give a picture of the performance of a process over
 a relatively long period of time, in order to put into evidence undesirable
 performance variations and their causes, long-term bottlenecks or frequent
 sources of defects.
 Typical measures are the cycle time, error rates or resource utilization.
\end_layout

\begin_layout Itemize

\series bold
Strategic performance dashboards
\series default
: target executive managers.
 Their purpose is to provide a high-level picture of the performance of
 group of processes along multiple performance dimensions.
 Their emphasis is in aggregating performance measures defined for individual
 processes in a process architecture and aggregating multiple performance
 measures related to the same performance dimension.
\end_layout

\begin_layout Standard
A dahsboard can be viewed a sa collection of widgets, with each 
\series bold
widget
\series default
 displaying at least one performance measures.
 There are four types of widgets:
\end_layout

\begin_layout Itemize
Single-dimensional widgets: they display only one variable.
 Usually, several measures related to the same variable can be grouped in
 the same widget.
 For example, for the case duration, we could group in the same widget the
 measures for the minimum, the median, the average and the maximum.
\end_layout

\begin_layout Itemize
Two-dimensional widgets: they display two variables.
 The independent variable, i.e.
 the variable with respect to which we want to make analysis, is in the
 x-axis.
 The dependant variable is the variable that we want to analyze and is in
 the y-axis.
\end_layout

\begin_deeper
\begin_layout Standard
It is usually a chart, which can be of several types:
\end_layout

\begin_layout Itemize
Longitudinal chart: x-axis is time, y-axis is a performance measure.
\end_layout

\begin_layout Itemize
Cross-sectional chart: x-axis is an attribute, y-axis is a performance measure.
\end_layout

\begin_layout Itemize
Histogram: x-axis is a performance measure, y-axis is the count.
\end_layout

\end_deeper
\begin_layout Itemize
Three-dimensional widgets: they display three variables, which are usually
 two cross-sectional variables and a performance measure.
 The third dimension can be coded in different ways:
\end_layout

\begin_deeper
\begin_layout Itemize
Heat map: intensity and/or color.
\end_layout

\begin_layout Itemize
Bubble chart: size and/or intensity.
\end_layout

\begin_layout Itemize
Scatter plot: useful when the third dimension is boolean.
\end_layout

\end_deeper
\begin_layout Itemize
N-dimensional widgets (or tables): they display N dimensions, which are
 usually a cross-sectional variable with several performance measures.
 
\end_layout

\begin_layout Subsubsection
Designing process performance dashboards
\end_layout

\begin_layout Standard
There are some general steps to follow:
\end_layout

\begin_layout Enumerate
Identify the users and define a set of questions that user will answer.
\end_layout

\begin_layout Enumerate
Identify the type of dashboards elements based on the insights required
 to answer the questions.
\end_layout

\begin_layout Enumerate
Identify a type of visualization for the element.
\end_layout

\begin_layout Enumerate
Determine the x-axis.
\end_layout

\begin_layout Enumerate
Determine the y-axis.
\end_layout

\begin_layout Standard
Some tools that can be used are:
\end_layout

\begin_layout Itemize
For operational/tactical dashboards: Axway AMPLIFY, VITRIA Operational Process
 Intelligence, Oracle BAM, SAP Operational Process Intelligence.
\end_layout

\begin_layout Itemize
For tactical dashboards: BI tools (PowerBI, Tableau) and Process Mining
 tools (Apromore, Celonis).
\end_layout

\begin_layout Itemize
For strategic dashboards: Balanced Scorecard tools (BSC Designer Online,
 Quickscore).
\end_layout

\begin_layout Subsection
Process mining
\end_layout

\begin_layout Standard
Process mining is a family of techniques to analyze the performance and
 conformance of business processes based on event logs produced during their
 execution.
 These techniques complement tactical process monitoring dashboards.
\end_layout

\begin_layout Subsubsection
Automated process discovery
\end_layout

\begin_layout Standard
This technique takes as input an event log and produce a business process
 model that closely matches the behavior observed in the event log or implied
 by the traces in the event log.
\end_layout

\begin_layout Standard
It can be used as part of a process discovery effort, in conjunction with
 other discovery methods, or as part of tactical process performance monitoring
 effort in conjunction with performance miniing techniques.
\end_layout

\begin_layout Standard
A 
\series bold
process map
\series default
 of an event log is a graph where:
\end_layout

\begin_layout Itemize
Each activity is represented by one node.
\end_layout

\begin_layout Itemize
An arc from activity A to activity B means that A is directly followed by
 B in at least one case in the log.
\end_layout

\begin_layout Standard
A process map has:
\end_layout

\begin_layout Itemize
One or more 
\series bold
initial activities
\series default
.
\end_layout

\begin_layout Itemize

\series bold
Directly-follows relation
\series default
 as directed arcs between to activities.
 This relation implies an implicit 
\series bold
eventually-follows relation
\series default
.
\end_layout

\begin_layout Itemize
Several 
\series bold
activities
\series default
.
\end_layout

\begin_layout Itemize
Activity 
\series bold
self-loop
\series default
 is an arc from an activity to itself, representing the activity can be
 repeated several times.
\end_layout

\begin_layout Itemize
Short 
\series bold
loops
\series default
 which can indicate rework.
\end_layout

\begin_layout Itemize
One or more 
\series bold
final activities
\series default
.
\end_layout

\begin_layout Standard
Also, the process maps present also visual characteristics that helps to
 understand the meaning of the graph.
 For instance, nodes in a process map can be coloured and arcs' thickness
 can be changed, to capture:
\end_layout

\begin_layout Itemize

\series bold
Frequency
\series default
: how often a given activity or directly-follows relation occurs.
\end_layout

\begin_layout Itemize

\series bold
Duration
\series default
: processing times and cycle times for activities, waiting times for directly-fo
llows relations.
\end_layout

\begin_layout Itemize

\series bold
Other attributes
\series default
: some tools support enhancement by other attributes such as cost or revenue.
\end_layout

\begin_layout Standard
Commercial process mining tools use process maps as the main visualization
 technique for event logs, providing also three types of operations:
\end_layout

\begin_layout Itemize

\series bold
Abstract
\series default
 the process map: the full generated maps are very complex and impossible
 to understand so these tools allow us to abstract them by showing only
 the most frequent activities and arcs.
 Some tools also provide the ability to show only the least frequent activities
 or arcs, or the fastest/slowest ones.
\end_layout

\begin_layout Itemize

\series bold
Filter
\series default
 the traces in the event log: they can be of various kinds:
\end_layout

\begin_deeper
\begin_layout Itemize
Case-Level log filters: retain or remove all cases that fulfill a given
 condition.
 Some possible filters are:
\end_layout

\begin_deeper
\begin_layout Itemize
Attribute filters: retain only cases such that at least one event fulfils
 a condition over one or more attribute.
\end_layout

\begin_layout Itemize
Timeframe filters: retain traces that start, end, or are contained in a
 time period.
\end_layout

\begin_layout Itemize
Performance filters: retain only cases that have a duration above or below
 a threshold.
\end_layout

\begin_layout Itemize
Path filters: retain traces where there is a pair of events that fulfil
 a given condition.
\end_layout

\begin_layout Itemize
Repetition filters: retain traces that start with or finish with an event
 that fulfils a given condition.
\end_layout

\end_deeper
\begin_layout Itemize
Event-Level log filters: retain or remove individual events that fulfill
 a given condition.
 Some possible filters are:
\end_layout

\begin_deeper
\begin_layout Itemize
Attribute filters: retain or remove only events that fulfill a condition.
\end_layout

\begin_layout Itemize
Timeframe filters: retain all events that ahppen during a certain period.
\end_layout

\begin_layout Itemize
Between filters: for each case, retain all events between the first or last
 ocurrence of an activity and the first or last ocurrence of another activity.
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection*
Limitations of process maps
\end_layout

\begin_layout Standard
Process maps tend to over-generalize: some paths of a process map might
 actually not exist and might not make sense.
 Also, they make it difficult to distinguish conditional branching, parallelism
 and loops.
 The solution to these problems is 
\series bold
automated discovery of BPMN models
\series default
.
\end_layout

\begin_layout Standard
From process maps it is possible to discover BPMN models, by using a defined
 configuration of node/arc sliders, and a parallelism sliders.
 For example, Apromore does this using an algorithm called 
\series bold
split miner
\series default
 to turn process maps into process models.
\end_layout

\begin_layout Subsubsection
Conformance checking
\end_layout

\begin_layout Standard
If we have the original model, we can compare the discovered model and the
 original one using 
\series bold
conformance checking
\series default
.
 Nonetheless, it is normal to don't have a full process model available,
 but instead, a set of compliance rules.
 These rules, can be, as an example:
\end_layout

\begin_layout Itemize
Certain tasks must be executed in every case.
\end_layout

\begin_layout Itemize
Certain tasks can be executed at most once.
\end_layout

\begin_layout Itemize
When task A occurs, B must also occur.
\end_layout

\begin_layout Itemize
Tasks A and B acnnot be executed by the same person (
\series bold
four-eyes principle
\series default
).
\end_layout

\begin_layout Itemize
...
\end_layout

\begin_layout Standard
Accordingly, we can identify the following 
\series bold
compliance checking levels
\series default
:
\end_layout

\begin_layout Itemize

\series bold
Flow
\series default
: have all mandatory activites been performed and in the right order and
 frequency?
\end_layout

\begin_layout Itemize

\series bold
Temporal
\series default
: has a given timeframe been adhered to?
\end_layout

\begin_layout Itemize

\series bold
Resource
\series default
: did everyone obey the assignment of duties?
\end_layout

\begin_layout Itemize

\series bold
Exception
\series default
: explore highly-infrequent behavior to identify possible deviations from
 the standard process.
\end_layout

\begin_layout Standard
The procedure of compliance checking is as follows:
\end_layout

\begin_layout Enumerate
Define the compliance rules.
\end_layout

\begin_layout Enumerate
Apply one or more filters to keep some cases that violate the rules.
\end_layout

\begin_layout Enumerate
If needed, switch perspective to highlight non-compliance issues.
\end_layout

\begin_layout Enumerate
Assess impact on process performance.
\end_layout

\begin_layout Standard
We can follow the template in Table
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="8cm">
<column alignment="center" valignment="top" width="8cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
What?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
How?
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Flow compliance checking
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Identify skipped activities in the process map or BPMN model
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Check skipped mandatory activities
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Visualize process map with min/max freq metrics
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.
 Check forbidden repetitions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Visualize min/max statistics in Activity tab of the dashboard
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.
 Check activity exclusion or co-ocurrence relations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use Path filter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Temporal compliance checking
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use performance filters
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Check temporal constraints violations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use Path filter with a duration constraint to identify violations of temporal
 constraints between two activities
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Resource compliance checking
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use Path filter and require the same resource
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Check four-eyes principles or same-case-handler principle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use the Attribute filter and search with 'Activity' as the primary attribute
 and 'Resource' as secondary attribute to check if a resource performed
 an activity they were not supposed to
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Check if an activity has been performed by a resource who should not do
 so
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Conformance Checking: analysis template.
\begin_inset CommandInset label
LatexCommand label
name "tab:Conformance-Checking:-analysis"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Performance mining
\end_layout

\begin_layout Subsubsection
Variant analysis
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part
Data Science Workflows
\end_layout

\begin_layout Section
Introduction to Data Science Workflows
\end_layout

\begin_layout Section
Responsible Data Science
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "mdsbw_bib"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
